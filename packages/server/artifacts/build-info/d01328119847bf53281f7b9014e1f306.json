{"id":"d01328119847bf53281f7b9014e1f306","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line gas-custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line gas-custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line gas-custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IERC677Receiver {\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {VRFV2PlusClient} from \"../libraries/VRFV2PlusClient.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./IVRFSubscriptionV2Plus.sol\";\n\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\n  /**\n   * @notice Request a set of random words.\n   * @param req - a struct containing following fields for randomness request:\n   * keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * requestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * extraArgs - abi-encoded extra args\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\n/// @notice method required to be implemented by all V2Plus consumers.\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\ninterface IVRFMigratableConsumerV2Plus {\n  event CoordinatorSet(address vrfCoordinator);\n\n  /// @notice Sets the VRF Coordinator address\n  /// @notice This method should only be callable by the coordinator or contract owner\n  function setCoordinator(address vrfCoordinator) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\n/// @notice related methods implemented by the V2Plus coordinator.\ninterface IVRFSubscriptionV2Plus {\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint256 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint256 subId, address to) external;\n\n  /**\n   * @notice Accept subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n   * @dev  to send Native with the call, for example:\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\n   */\n  function createSubscription() external returns (uint256 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return nativeBalance - native balance of the subscription in wei.\n   * @return reqCount - Requests count of subscription.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    external\n    view\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint256 subId) external view returns (bool);\n\n  /**\n   * @notice Paginate through all active VRF subscriptions.\n   * @param startIndex index of the subscription to start from\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\n   */\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\n\n  /**\n   * @notice Fund a subscription with native.\n   * @param subId - ID of the subscription\n   * @notice This method expects msg.value to be greater than or equal to 0.\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// End consumer library.\nlibrary VRFV2PlusClient {\n  // extraArgs will evolve to support new features\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\"VRF ExtraArgsV1\"));\n  struct ExtraArgsV1 {\n    bool nativePayment;\n  }\n\n  struct RandomWordsRequest {\n    bytes32 keyHash;\n    uint256 subId;\n    uint16 requestConfirmations;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {EnumerableSet} from \"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\";\nimport {LinkTokenInterface} from \"../../shared/interfaces/LinkTokenInterface.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\nimport {AggregatorV3Interface} from \"../../shared/interfaces/AggregatorV3Interface.sol\";\nimport {IERC677Receiver} from \"../../shared/interfaces/IERC677Receiver.sol\";\nimport {IVRFSubscriptionV2Plus} from \"./interfaces/IVRFSubscriptionV2Plus.sol\";\n\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\n  using EnumerableSet for EnumerableSet.UintSet;\n\n  /// @dev may not be provided upon construction on some chains due to lack of availability\n  LinkTokenInterface public LINK;\n  /// @dev may not be provided upon construction on some chains due to lack of availability\n  AggregatorV3Interface public LINK_NATIVE_FEED;\n\n  // We need to maintain a list of consuming addresses.\n  // This bound ensures we are able to loop over them as needed.\n  // Should a user require more consumers, they can use multiple subscriptions.\n  uint16 public constant MAX_CONSUMERS = 100;\n  error TooManyConsumers();\n  error InsufficientBalance();\n  error InvalidConsumer(uint256 subId, address consumer);\n  error InvalidSubscription();\n  error OnlyCallableFromLink();\n  error InvalidCalldata();\n  error MustBeSubOwner(address owner);\n  error PendingRequestExists();\n  error MustBeRequestedOwner(address proposedOwner);\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\n  event FundsRecovered(address to, uint256 amount);\n  event NativeFundsRecovered(address to, uint256 amount);\n  error LinkAlreadySet();\n  error FailedToSendNative();\n  error FailedToTransferLink();\n  error IndexOutOfRange();\n  error LinkNotSet();\n\n  // We use the subscription struct (1 word)\n  // at fulfillment time.\n  struct Subscription {\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\n    uint96 balance; // Common link balance used for all consumer requests.\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\n    // That should be enough to cover most (if not all) subscriptions.\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\n    uint64 reqCount;\n  }\n  // We use the config for the mgmt APIs\n  struct SubscriptionConfig {\n    address owner; // Owner can fund/withdraw/cancel the sub.\n    address requestedOwner; // For safely transferring sub ownership.\n    // Maintains the list of keys in s_consumers.\n    // We do this for 2 reasons:\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\n    // 2. To be able to return the list of all consumers in getSubscription.\n    // Note that we need the s_consumers map to be able to directly check if a\n    // consumer is valid without reading all the consumers from storage.\n    address[] consumers;\n  }\n  struct ConsumerConfig {\n    bool active;\n    uint64 nonce;\n    uint64 pendingReqCount;\n  }\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\n    internal s_consumers;\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\n  // subscription nonce used to construct subId. Rises monotonically\n  uint64 public s_currentSubNonce;\n  // track all subscription id's that were created by this contract\n  // note: access should be through the getActiveSubscriptionIds() view function\n  // which takes a starting index and a max number to fetch in order to allow\n  // \"pagination\" of the subscription ids. in the event a very large number of\n  // subscription id's are stored in this set, they cannot be retrieved in a\n  // single RPC call without violating various size limits.\n  EnumerableSet.UintSet internal s_subIds;\n  // s_totalBalance tracks the total link sent to/from\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\n  // A discrepancy with this contract's link balance indicates someone\n  // sent tokens using transfer and so we may need to use recoverFunds.\n  uint96 public s_totalBalance;\n  // s_totalNativeBalance tracks the total native sent to/from\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\n  // A discrepancy with this contract's native balance indicates someone\n  // sent native using transfer and so we may need to use recoverNativeFunds.\n  uint96 public s_totalNativeBalance;\n  uint96 internal s_withdrawableTokens;\n  uint96 internal s_withdrawableNative;\n\n  event SubscriptionCreated(uint256 indexed subId, address owner);\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\n\n  struct Config {\n    uint16 minimumRequestConfirmations;\n    uint32 maxGasLimit;\n    // Reentrancy protection.\n    bool reentrancyLock;\n    // stalenessSeconds is how long before we consider the feed price to be stale\n    // and fallback to fallbackWeiPerUnitLink.\n    uint32 stalenessSeconds;\n    // Gas to cover oracle payment after we calculate the payment.\n    // We make it configurable in case those operations are repriced.\n    // The recommended number is below, though it may vary slightly\n    // if certain chains do not implement certain EIP's.\n    // 21000 + // base cost of the transaction\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\n    // Total: 37,185 gas.\n    uint32 gasAfterPaymentCalculation;\n    // Flat fee charged per fulfillment in millionths of native.\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeNativePPM;\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\n    // Should not exceed fulfillmentFlatFeeNativePPM\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\n    uint8 nativePremiumPercentage;\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\n    uint8 linkPremiumPercentage;\n  }\n  Config public s_config;\n\n  error Reentrant();\n  modifier nonReentrant() {\n    _nonReentrant();\n    _;\n  }\n\n  function _nonReentrant() internal view {\n    if (s_config.reentrancyLock) {\n      revert Reentrant();\n    }\n  }\n\n  function _requireSufficientBalance(bool condition) internal pure {\n    if (!condition) {\n      revert InsufficientBalance();\n    }\n  }\n\n  function _requireValidSubscription(address subOwner) internal pure {\n    if (subOwner == address(0)) {\n      revert InvalidSubscription();\n    }\n  }\n  constructor() ConfirmedOwner(msg.sender) {}\n\n  /**\n   * @notice set the LINK token contract and link native feed to be\n   * used by this coordinator\n   * @param link - address of link token\n   * @param linkNativeFeed address of the link native feed\n   */\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\n    // Disallow re-setting link token because the logic wouldn't really make sense\n    if (address(LINK) != address(0)) {\n      revert LinkAlreadySet();\n    }\n    LINK = LinkTokenInterface(link);\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\n  }\n\n  /**\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n   * @param subId subscription id\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\n   */\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\n    address subOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(subOwner);\n    _cancelSubscriptionHelper(subId, subOwner);\n  }\n\n  /**\n   * @notice Recover link sent with transfer instead of transferAndCall.\n   * @param to address to send link to\n   */\n  function recoverFunds(address to) external onlyOwner {\n    // If LINK is not set, we cannot recover funds.\n    // It is possible that this coordinator address was funded with LINK\n    // by accident by a user but the LINK token needs to be set first\n    // before we can recover it.\n    if (address(LINK) == address(0)) {\n      revert LinkNotSet();\n    }\n\n    uint256 externalBalance = LINK.balanceOf(address(this));\n    uint256 internalBalance = uint256(s_totalBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      if (!LINK.transfer(to, amount)) {\n        revert FailedToTransferLink();\n      }\n      emit FundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /**\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\n   * @param to address to send native to\n   */\n  function recoverNativeFunds(address payable to) external onlyOwner {\n    uint256 externalBalance = address(this).balance;\n    uint256 internalBalance = uint256(s_totalNativeBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      (bool sent, ) = to.call{value: amount}(\"\");\n      if (!sent) {\n        revert FailedToSendNative();\n      }\n      emit NativeFundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /*\n   * @notice withdraw LINK earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function withdraw(address recipient) external nonReentrant onlyOwner {\n    if (address(LINK) == address(0)) {\n      revert LinkNotSet();\n    }\n    uint96 amount = s_withdrawableTokens;\n    _requireSufficientBalance(amount > 0);\n    s_withdrawableTokens = 0;\n    s_totalBalance -= amount;\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\n  }\n\n  /*\n   * @notice withdraw native earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\n    uint96 amount = s_withdrawableNative;\n    _requireSufficientBalance(amount > 0);\n    // Prevent re-entrancy by updating state before transfer.\n    s_withdrawableNative = 0;\n    s_totalNativeBalance -= amount;\n    _mustSendNative(recipient, amount);\n  }\n\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\n    if (msg.sender != address(LINK)) {\n      revert OnlyCallableFromLink();\n    }\n    if (data.length != 32) {\n      revert InvalidCalldata();\n    }\n    uint256 subId = abi.decode(data, (uint256));\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\n    // We do not check that the sender is the subscription owner,\n    // anyone can fund a subscription.\n    uint256 oldBalance = s_subscriptions[subId].balance;\n    s_subscriptions[subId].balance += uint96(amount);\n    s_totalBalance += uint96(amount);\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\n    // We do not check that the msg.sender is the subscription owner,\n    // anyone can fund a subscription.\n    // We also do not check that msg.value > 0, since that's just a no-op\n    // and would be a waste of gas on the caller's part.\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\n    s_totalNativeBalance += uint96(msg.value);\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function getSubscription(\n    uint256 subId\n  )\n    public\n    view\n    override\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\n  {\n    subOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(subOwner);\n    return (\n      s_subscriptions[subId].balance,\n      s_subscriptions[subId].nativeBalance,\n      s_subscriptions[subId].reqCount,\n      subOwner,\n      s_subscriptionConfigs[subId].consumers\n    );\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function getActiveSubscriptionIds(\n    uint256 startIndex,\n    uint256 maxCount\n  ) external view override returns (uint256[] memory ids) {\n    uint256 numSubs = s_subIds.length();\n    if (startIndex >= numSubs) revert IndexOutOfRange();\n    uint256 endIndex = startIndex + maxCount;\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\n    uint256 idsLength = endIndex - startIndex;\n    ids = new uint256[](idsLength);\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\n      ids[idx] = s_subIds.at(idx + startIndex);\n    }\n    return ids;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\n    // Generate a subscription id that is globally unique.\n    uint64 currentSubNonce = s_currentSubNonce;\n    subId = uint256(\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\n    );\n    // Increment the subscription nonce counter.\n    s_currentSubNonce = currentSubNonce + 1;\n    // Initialize storage variables.\n    address[] memory consumers = new address[](0);\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\n      owner: msg.sender,\n      requestedOwner: address(0),\n      consumers: consumers\n    });\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\n    s_subIds.add(subId);\n\n    emit SubscriptionCreated(subId, msg.sender);\n    return subId;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function requestSubscriptionOwnerTransfer(\n    uint256 subId,\n    address newOwner\n  ) external override onlySubOwner(subId) nonReentrant {\n    // Proposing to address(0) would never be claimable so don't need to check.\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\n    if (subscriptionConfig.requestedOwner != newOwner) {\n      subscriptionConfig.requestedOwner = newOwner;\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\n    }\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\n    address oldOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(oldOwner);\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\n    }\n    s_subscriptionConfigs[subId].owner = msg.sender;\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\n    if (consumerConfig.active) {\n      // Idempotence - do nothing if already added.\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\n      return;\n    }\n    // Already maxed, cannot add any more consumers.\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\n    if (consumers.length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\n    // otherwise, consumerConfig.nonce is non-zero\n    // in both cases, use consumerConfig.nonce as is and set active status to true\n    consumerConfig.active = true;\n    consumers.push(consumer);\n\n    emit SubscriptionConsumerAdded(subId, consumer);\n  }\n\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\n    balance = s_subscriptions[subId].balance;\n    nativeBalance = s_subscriptions[subId].nativeBalance;\n    // Note bounded by MAX_CONSUMERS;\n    // If no consumers, does nothing.\n    uint256 consumersLength = consumers.length;\n    for (uint256 i = 0; i < consumersLength; ++i) {\n      delete s_consumers[consumers[i]][subId];\n    }\n    delete s_subscriptionConfigs[subId];\n    delete s_subscriptions[subId];\n    s_subIds.remove(subId);\n    if (balance != 0) {\n      s_totalBalance -= balance;\n    }\n    if (nativeBalance != 0) {\n      s_totalNativeBalance -= nativeBalance;\n    }\n    return (balance, nativeBalance);\n  }\n\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\n\n    // Only withdraw LINK if the token is active and there is a balance.\n    if (address(LINK) != address(0) && balance != 0) {\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\n    }\n\n    // send native to the \"to\" address using call\n    _mustSendNative(to, uint256(nativeBalance));\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\n  }\n\n  modifier onlySubOwner(uint256 subId) {\n    _onlySubOwner(subId);\n    _;\n  }\n\n  function _onlySubOwner(uint256 subId) internal view {\n    address subOwner = s_subscriptionConfigs[subId].owner;\n    _requireValidSubscription(subOwner);\n    if (msg.sender != subOwner) {\n      revert MustBeSubOwner(subOwner);\n    }\n  }\n\n  function _mustSendNative(address to, uint256 amount) internal {\n    (bool success, ) = to.call{value: amount}(\"\");\n    if (!success) {\n      revert FailedToSendNative();\n    }\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IVRFCoordinatorV2Plus} from \"./interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {IVRFMigratableConsumerV2Plus} from \"./interfaces/IVRFMigratableConsumerV2Plus.sol\";\nimport {ConfirmedOwner} from \"../../shared/access/ConfirmedOwner.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords, extraArgs),\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n *\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\n  error ZeroAddress();\n\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\n  // so that coordinator reference is updated after migration\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\n    if (msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n\n  /**\n   * @inheritdoc IVRFMigratableConsumerV2Plus\n   */\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\n    if (_vrfCoordinator == address(0)) {\n      revert ZeroAddress();\n    }\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\n\n    emit CoordinatorSet(_vrfCoordinator);\n  }\n\n  modifier onlyOwnerOrCoordinator() {\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\n    }\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2_5.\npragma solidity ^0.8.19;\n\n// solhint-disable-next-line no-unused-import\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \"../dev/interfaces/IVRFCoordinatorV2Plus.sol\";\nimport {VRFV2PlusClient} from \"../dev/libraries/VRFV2PlusClient.sol\";\nimport {SubscriptionAPI} from \"../dev/SubscriptionAPI.sol\";\nimport {VRFConsumerBaseV2Plus} from \"../dev/VRFConsumerBaseV2Plus.sol\";\n\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\n  uint96 public immutable i_base_fee;\n  uint96 public immutable i_gas_price;\n  int256 public immutable i_wei_per_unit_link;\n\n  error InvalidRequest();\n  error InvalidRandomWords();\n  error InvalidExtraArgsTag();\n  error NotImplemented();\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint256 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    bytes extraArgs,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(\n    uint256 indexed requestId,\n    uint256 outputSeed,\n    uint256 indexed subId,\n    uint96 payment,\n    bool nativePayment,\n    bool success,\n    bool onlyPremium\n  );\n  event ConfigSet();\n\n  uint64 internal s_currentSubId;\n  uint256 internal s_nextRequestId = 1;\n  uint256 internal s_nextPreSeed = 100;\n\n  struct Request {\n    uint256 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    bytes extraArgs;\n  }\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\n    i_base_fee = _baseFee;\n    i_gas_price = _gasPrice;\n    i_wei_per_unit_link = _weiPerUnitLink;\n    setConfig();\n  }\n\n  /**\n   * @notice Sets the configuration of the vrfv2 mock coordinator\n   */\n  function setConfig() public onlyOwner {\n    s_config = Config({\n      minimumRequestConfirmations: 0,\n      maxGasLimit: 0,\n      stalenessSeconds: 0,\n      gasAfterPaymentCalculation: 0,\n      reentrancyLock: false,\n      fulfillmentFlatFeeNativePPM: 0,\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\n      nativePremiumPercentage: 0,\n      linkPremiumPercentage: 0\n    });\n    emit ConfigSet();\n  }\n\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\n    return s_consumers[_consumer][_subId].active;\n  }\n\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\n    if (!consumerIsAdded(_subId, _consumer)) {\n      revert InvalidConsumer(_subId, _consumer);\n    }\n    _;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\n  }\n\n  /**\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   * @param _words user-provided random words\n   */\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert InvalidRequest();\n    }\n    Request memory req = s_requests[_requestId];\n\n    if (_words.length == 0) {\n      _words = new uint256[](req.numWords);\n      for (uint256 i = 0; i < req.numWords; i++) {\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n      }\n    } else if (_words.length != req.numWords) {\n      revert InvalidRandomWords();\n    }\n\n    VRFConsumerBaseV2Plus v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\n    s_config.reentrancyLock = true;\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n    s_config.reentrancyLock = false;\n\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\n\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\n    if (!nativePayment) {\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\n    }\n    uint96 payment = uint96(rawPayment);\n\n    _chargePayment(payment, nativePayment, req.subId);\n\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\n  }\n\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\n    Subscription storage subcription = s_subscriptions[subId];\n    if (nativePayment) {\n      uint96 prevBal = subcription.nativeBalance;\n      if (prevBal < payment) {\n        revert InsufficientBalance();\n      }\n      subcription.nativeBalance = prevBal - payment;\n      s_withdrawableNative += payment;\n    } else {\n      uint96 prevBal = subcription.balance;\n      if (prevBal < payment) {\n        revert InsufficientBalance();\n      }\n      subcription.balance = prevBal - payment;\n      s_withdrawableTokens += payment;\n    }\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint256 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += uint96(_amount);\n    s_totalBalance += uint96(_amount);\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  /// @dev Convert the extra args bytes into a struct\n  /// @param extraArgs The extra args bytes\n  /// @return The extra args struct\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\n    if (extraArgs.length == 0) {\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\n    }\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\n  }\n\n  function requestRandomWords(\n    VRFV2PlusClient.RandomWordsRequest calldata _req\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\n    uint256 subId = _req.subId;\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\n    s_requests[requestId] = Request({\n      subId: _req.subId,\n      callbackGasLimit: _req.callbackGasLimit,\n      numWords: _req.numWords,\n      extraArgs: _req.extraArgs\n    });\n\n    emit RandomWordsRequested(\n      _req.keyHash,\n      requestId,\n      preSeed,\n      _req.subId,\n      _req.requestConfirmations,\n      _req.callbackGasLimit,\n      _req.numWords,\n      extraArgsBytes,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function removeConsumer(\n    uint256 _subId,\n    address _consumer\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\n    if (!s_consumers[_consumer][_subId].active) {\n      revert InvalidConsumer(_subId, _consumer);\n    }\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\n    uint256 lastConsumerIndex = consumers.length - 1;\n    for (uint256 i = 0; i < consumers.length; ++i) {\n      if (consumers[i] == _consumer) {\n        address last = consumers[lastConsumerIndex];\n        s_subscriptionConfigs[_subId].consumers[i] = last;\n        s_subscriptionConfigs[_subId].consumers.pop();\n        break;\n      }\n    }\n    s_consumers[_consumer][_subId].active = false;\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\n  }\n\n  /**\n   * @inheritdoc IVRFSubscriptionV2Plus\n   */\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\n\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\"\");\n    if (!success) {\n      revert FailedToSendNative();\n    }\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\n  }\n\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\n    revert NotImplemented();\n  }\n}\n"},"contracts/Raffle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// mock interface,目前的 subscribtionId 是 unit256，需要升级到最新\n// import \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\";\n// 真正的 VRF 服务\n// import \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\";\nimport \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\n\nerror Raffle__NotEnoughETHEntered(); // 自定义错误\nerror Raffle__TransferFailed(); // 打钱失败\nerror Raffle__NOTOpen(); // 活动未开启\nerror Raffle__UpkeepNotNeeded(\n    uint256 currentBalance,\n    uint256 numPlayers,\n    uint256 raffleState\n);\n\ncontract Raffle is VRFConsumerBaseV2Plus, AutomationCompatibleInterface {\n    // Type Declations\n    enum RaffleState {\n        OPEN, // 0\n        CALCULATING // 1\n    }\n\n    // State variables\n    // 首先需要有入场费\n    uint256 private immutable i_entranceFee;\n    // 定义玩家数组\n    address payable[] private s_players;\n    // 调用请求随机数的方法\n    VRFCoordinatorV2_5Mock private immutable i_vrfCoordinator;\n    // 随机数请求的确认次数\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    // 随机数请求的 gas 限制\n    uint32 private immutable i_callbackGasLimit;\n    // 随机数请求的 gasLane，不超过某个上限值\n    bytes32 private immutable i_gasLane;\n    // 随机数请求的 订阅 id\n    uint256 private immutable i_subscriptionId;\n    uint16 private constant NUM_WORDS = 1;\n\n    // lottery 变量\n    address private s_recentWinner; // 当前获胜者\n    RaffleState private s_raffleState; // 活动状态\n    uint256 private s_lastTimeStamp;\n    uint256 private immutable i_interval;\n\n    // 事件，当有人加入活动的时候，会触发这个事件\n    event RaffleEnter(address indexed player);\n    event RequestedRaffleWinner(uint256 indexed requestId);\n    event WinnerPicked(address indexed player);\n\n    // 定义一个变量，用来记录随机数\n\n    // 入场费从构造函数里面传进来，就固定不变了所以用immutable\n    constructor(\n        address vrfCoordinatorV2_5, // 合约需要 mock\n        uint256 entranceFee,\n        bytes32 keyHash,\n        uint256 subId,\n        uint32 callbackGasLimit,\n        uint256 interval\n    ) VRFConsumerBaseV2Plus(vrfCoordinatorV2_5) {\n        i_entranceFee = entranceFee;\n        i_vrfCoordinator = VRFCoordinatorV2_5Mock(vrfCoordinatorV2_5);\n        i_gasLane = keyHash;\n        i_subscriptionId = subId;\n        i_callbackGasLimit = callbackGasLimit;\n        s_raffleState = RaffleState.OPEN;\n        s_lastTimeStamp = block.timestamp;\n        i_interval = interval; // 间隔时间\n    }\n\n    function enterRaffle() public payable {\n        // 不使用 require 比较花费燃气费\n        // require(msg.value >= i_entranceFee, \"Not enough ETH!\");\n        // 先要看一看入场费够不够\n        if (msg.value < i_entranceFee) {\n            revert Raffle__NotEnoughETHEntered();\n        }\n        //  如果活动没开始也需要回退\n        if (s_raffleState != RaffleState.OPEN) {\n            revert Raffle__NOTOpen();\n        }\n\n        s_players.push(payable(msg.sender));\n        emit RaffleEnter(msg.sender);\n    }\n\n    /**\n     * This is the function that the Chainlink Automation node\n     * calls to check if the upkeep is needed.\n     * The following should be true for this to return true:\n     * 1. The time interval has passed between raffle runs\n     * 2. The lottery should have at leat one player and have some TTH\n     * 3. Our subscription is funded with LINK\n     * 4. The lottery should be in an open state\n     */\n    function checkUpkeep(\n        bytes memory /* checkData */\n    )\n        public\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory /*performData*/)\n    {\n        bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;\n        bool hasPlayers = s_players.length > 0;\n        bool hasBalance = address(this).balance > 0;\n        bool isOpen = s_raffleState == RaffleState.OPEN;\n        upkeepNeeded = (timePassed && hasPlayers && hasBalance && isOpen);\n        return (upkeepNeeded, \"0x0\");\n    }\n\n    // 请求 Chainlink 获取随机数\n    function performUpkeep(bytes calldata /*performData*/) external override {\n        (bool upkeepNeeded, ) = checkUpkeep(\"\");\n        if (!upkeepNeeded) {\n            revert Raffle__UpkeepNotNeeded(\n                address(this).balance,\n                s_players.length,\n                uint256(s_raffleState)\n            );\n        }\n\n        s_raffleState = RaffleState.CALCULATING;\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\n            VRFV2PlusClient.RandomWordsRequest({\n                keyHash: i_gasLane,\n                subId: i_subscriptionId,\n                requestConfirmations: REQUEST_CONFIRMATIONS,\n                callbackGasLimit: i_callbackGasLimit,\n                numWords: NUM_WORDS,\n                extraArgs: VRFV2PlusClient._argsToBytes(\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: false})\n                )\n            })\n        );\n        emit RequestedRaffleWinner(requestId);\n    }\n\n    //填充随机数\n    function fulfillRandomWords(\n        uint256 /*_requestId*/,\n        uint256[] calldata _randomWords\n    ) internal override {\n        uint256 indexOfWinner = _randomWords[0] % s_players.length;\n        address payable recentWinner = s_players[indexOfWinner];\n        s_raffleState = RaffleState.OPEN;\n        s_lastTimeStamp = block.timestamp; // reset  事件保证下一个玩家可以参赛\n        // 比赛完成后清空玩家\n        s_players = new address payable[](0);\n        s_recentWinner = recentWinner;\n        // 打钱给获胜者\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\n        if (!success) {\n            revert Raffle__TransferFailed();\n        }\n        emit WinnerPicked(recentWinner);\n    }\n\n    // 由于是 private 方法，所以需要一个 get 函数\n    function getEntranceFee() public view returns (uint256) {\n        return i_entranceFee;\n    }\n\n    function getPlayer(uint256 index) public view returns (address) {\n        return s_players[index];\n    }\n\n    function getRecentWinner() public view returns (address) {\n        return s_recentWinner;\n    }\n\n    function getRaffleState() public view returns (RaffleState) {\n        return s_raffleState;\n    }\n\n    function getNumWords() public pure returns (uint16) {\n        return NUM_WORDS;\n    }\n\n    function getNumberOfPlayers() public view returns (uint256) {\n        return s_players.length;\n    }\n\n    function getLatestTimeStamp() public view returns (uint256) {\n        return s_lastTimeStamp;\n    }\n\n    function getRequestConfirmations() public pure returns (uint256) {\n        return REQUEST_CONFIRMATIONS;\n    }\n\n    function getInterval() public view returns (uint256) {\n        return i_interval;\n    }\n}\n\n// 第一部：加入活动（支付一些钱）\n// 第二部：找出一个随机的获胜者\n// 每 X 分钟挑选出一个人赢得奖励\n// 随机数、自动触发，这些都需要外部数据，需要Chainlink Oracle\n"},"contracts/test/VRFCoordinatorV2_5Mock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\";\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[18]},"id":19,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":18,"linearizedBaseContracts":[18],"name":"AutomationCompatibleInterface","nameLocation":"120:29:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"154:985:0","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:0","nodeType":"VariableDeclaration","scope":11,"src":"1163:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:0","nodeType":"VariableDeclaration","scope":11,"src":"1207:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"performData","nameLocation":"1239:11:0","nodeType":"VariableDeclaration","scope":11,"src":"1226:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:0"},"scope":18,"src":"1142:110:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"1256:1003:0","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":17,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"performData","nameLocation":"2300:11:0","nodeType":"VariableDeclaration","scope":17,"src":"2285:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2321:0:0"},"scope":18,"src":"2262:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":19,"src":"110:2214:0","usedErrors":[]}],"src":"32:2293:0"},"id":0},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[39],"ConfirmedOwnerWithProposal":[202]},"id":40,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":20,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":40,"sourceUnit":203,"src":"57:76:1","symbolAliases":[{"foreign":{"id":21,"name":"ConfirmedOwnerWithProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"65:26:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":24,"name":"ConfirmedOwnerWithProposal","nameLocations":["267:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"267:26:1"},"id":25,"nodeType":"InheritanceSpecifier","src":"267:26:1"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"135:105:1","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":39,"linearizedBaseContracts":[39,202,276],"name":"ConfirmedOwner","nameLocation":"249:14:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":37,"nodeType":"Block","src":"377:2:1","statements":[]},"id":38,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":30,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"355:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:1","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":35,"kind":"baseConstructorSpecifier","modifierName":{"id":29,"name":"ConfirmedOwnerWithProposal","nameLocations":["328:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"328:26:1"},"nodeType":"ModifierInvocation","src":"328:48:1"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"newOwner","nameLocation":"318:8:1","nodeType":"VariableDeclaration","scope":38,"src":"310:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:18:1"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[],"src":"377:0:1"},"scope":39,"src":"298:81:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":40,"src":"240:141:1","usedErrors":[]}],"src":"32:350:1"},"id":1},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[202],"IOwnable":[276]},"id":203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":41,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":203,"sourceUnit":277,"src":"57:52:2","symbolAliases":[{"foreign":{"id":42,"name":"IOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"65:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":45,"name":"IOwnable","nameLocations":["255:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":276,"src":"255:8:2"},"id":46,"nodeType":"InheritanceSpecifier","src":"255:8:2"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"111:105:2","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":202,"linearizedBaseContracts":[202,276],"name":"ConfirmedOwnerWithProposal","nameLocation":"225:26:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":48,"mutability":"mutable","name":"s_owner","nameLocation":"284:7:2","nodeType":"VariableDeclaration","scope":202,"src":"268:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":50,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"311:14:2","nodeType":"VariableDeclaration","scope":202,"src":"295:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":56,"name":"OwnershipTransferRequested","nameLocation":"336:26:2","nodeType":"EventDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"379:4:2","nodeType":"VariableDeclaration","scope":56,"src":"363:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":54,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"401:2:2","nodeType":"VariableDeclaration","scope":56,"src":"385:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"362:42:2"},"src":"330:75:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":62,"name":"OwnershipTransferred","nameLocation":"414:20:2","nodeType":"EventDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"451:4:2","nodeType":"VariableDeclaration","scope":62,"src":"435:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"473:2:2","nodeType":"VariableDeclaration","scope":62,"src":"457:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:42:2"},"src":"408:69:2"},{"body":{"id":95,"nodeType":"Block","src":"533:230:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"598:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"610:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:2","typeDescriptions":{}}},"id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"610:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"598:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"622:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":69,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"590:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":78,"nodeType":"ExpressionStatement","src":"590:59:2"},{"expression":{"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":79,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"656:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":80,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"666:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"656:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":82,"nodeType":"ExpressionStatement","src":"656:18:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":83,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"684:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"700:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:2","typeDescriptions":{}}},"id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"700:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"684:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":94,"nodeType":"IfStatement","src":"680:79:2","trueBody":{"id":93,"nodeType":"Block","src":"712:47:2","statements":[{"expression":{"arguments":[{"id":90,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"739:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":89,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"720:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"720:32:2"}]}}]},"id":96,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"newOwner","nameLocation":"501:8:2","nodeType":"VariableDeclaration","scope":96,"src":"493:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"pendingOwner","nameLocation":"519:12:2","nodeType":"VariableDeclaration","scope":96,"src":"511:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:40:2"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"533:0:2"},"scope":202,"src":"481:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[272],"body":{"id":109,"nodeType":"Block","src":"912:33:2","statements":[{"expression":{"arguments":[{"id":106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"937:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"918:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":108,"nodeType":"ExpressionStatement","src":"918:22:2"}]},"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"767:77:2","text":"@notice Allows an owner to begin transferring ownership to a new address."},"functionSelector":"f2fde38b","id":110,"implemented":true,"kind":"function","modifiers":[{"id":103,"kind":"modifierInvocation","modifierName":{"id":102,"name":"onlyOwner","nameLocations":["902:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"902:9:2"},"nodeType":"ModifierInvocation","src":"902:9:2"}],"name":"transferOwnership","nameLocation":"856:17:2","nodeType":"FunctionDefinition","overrides":{"id":101,"nodeType":"OverrideSpecifier","overrides":[],"src":"893:8:2"},"parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"to","nameLocation":"882:2:2","nodeType":"VariableDeclaration","scope":110,"src":"874:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"873:12:2"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"912:0:2"},"scope":202,"src":"847:98:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[275],"body":{"id":145,"nodeType":"Block","src":"1071:271:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":116,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1136:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1140:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1136:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":118,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1150:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1136:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:24:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1128:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1128:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"1128:63:2"},{"assignments":[124],"declarations":[{"constant":false,"id":124,"mutability":"mutable","name":"oldOwner","nameLocation":"1206:8:2","nodeType":"VariableDeclaration","scope":145,"src":"1198:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":126,"initialValue":{"id":125,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1217:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1198:26:2"},{"expression":{"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":127,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1230:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1240:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1240:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":131,"nodeType":"ExpressionStatement","src":"1230:20:2"},{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":132,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1256:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1281:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1273:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:2","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1256:27:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":138,"nodeType":"ExpressionStatement","src":"1256:27:2"},{"eventCall":{"arguments":[{"id":140,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1316:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1326:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1330:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1326:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1295:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"1290:47:2"}]},"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"949:74:2","text":"@notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1035:15:2","nodeType":"FunctionDefinition","overrides":{"id":113,"nodeType":"OverrideSpecifier","overrides":[],"src":"1062:8:2"},"parameters":{"id":112,"nodeType":"ParameterList","parameters":[],"src":"1050:2:2"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"1071:0:2"},"scope":202,"src":"1026:316:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[267],"body":{"id":155,"nodeType":"Block","src":"1438:25:2","statements":[{"expression":{"id":153,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1451:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":152,"id":154,"nodeType":"Return","src":"1444:14:2"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1346:33:2","text":"@notice Get the current owner"},"functionSelector":"8da5cb5b","id":156,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1391:5:2","nodeType":"FunctionDefinition","overrides":{"id":149,"nodeType":"OverrideSpecifier","overrides":[],"src":"1411:8:2"},"parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"1396:2:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":156,"src":"1429:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:9:2"},"scope":202,"src":"1382:81:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":179,"nodeType":"Block","src":"1584:191:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1655:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1659:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1655:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1649:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1641:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"ExpressionStatement","src":"1641:52:2"},{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":170,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1700:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":171,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1717:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1700:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":173,"nodeType":"ExpressionStatement","src":"1700:19:2"},{"eventCall":{"arguments":[{"id":175,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1758:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":176,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1767:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":174,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1731:26:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"EmitStatement","src":"1726:44:2"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"1467:66:2","text":"@notice validate, transfer ownership, and emit relevant events"},"id":180,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1545:18:2","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"to","nameLocation":"1572:2:2","nodeType":"VariableDeclaration","scope":180,"src":"1564:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1563:12:2"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1584:0:2"},"scope":202,"src":"1536:239:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":192,"nodeType":"Block","src":"1853:118:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1918:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1922:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1918:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":187,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1932:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1918:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1941:24:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1910:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"1910:56:2"}]},"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"1779:27:2","text":"@notice validate access"},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1818:18:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"1836:2:2"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"1853:0:2"},"scope":202,"src":"1809:162:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":200,"nodeType":"Block","src":"2069:38:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":196,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2075:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"ExpressionStatement","src":"2075:20:2"},{"id":199,"nodeType":"PlaceholderStatement","src":"2101:1:2"}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"1975:70:2","text":"@notice Reverts if called by anyone other than the contract owner."},"id":201,"name":"onlyOwner","nameLocation":"2057:9:2","nodeType":"ModifierDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"2066:2:2"},"src":"2048:59:2","virtual":false,"visibility":"internal"}],"scope":203,"src":"216:1893:2","usedErrors":[]}],"src":"32:2078:2"},"id":2},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[248]},"id":249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"AggregatorV3Interface","nameLocation":"120:21:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"155:8:3","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"163:2:3"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"189:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":206,"name":"uint8","nodeType":"ElementaryTypeName","src":"189:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"188:7:3"},"scope":248,"src":"146:50:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"209:11:3","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"220:2:3"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"246:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":211,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"245:15:3"},"scope":248,"src":"200:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"274:7:3","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"281:2:3"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"307:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:3"},"scope":248,"src":"265:51:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":234,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"329:12:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"_roundId","nameLocation":"354:8:3","nodeType":"VariableDeclaration","scope":234,"src":"347:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":220,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"341:25:3"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"roundId","nameLocation":"397:7:3","nodeType":"VariableDeclaration","scope":234,"src":"390:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":223,"name":"uint80","nodeType":"ElementaryTypeName","src":"390:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"answer","nameLocation":"413:6:3","nodeType":"VariableDeclaration","scope":234,"src":"406:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":225,"name":"int256","nodeType":"ElementaryTypeName","src":"406:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"startedAt","nameLocation":"429:9:3","nodeType":"VariableDeclaration","scope":234,"src":"421:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"updatedAt","nameLocation":"448:9:3","nodeType":"VariableDeclaration","scope":234,"src":"440:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"answeredInRound","nameLocation":"466:15:3","nodeType":"VariableDeclaration","scope":234,"src":"459:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":231,"name":"uint80","nodeType":"ElementaryTypeName","src":"459:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"389:93:3"},"scope":248,"src":"320:163:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"496:15:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"511:2:3"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"roundId","nameLocation":"556:7:3","nodeType":"VariableDeclaration","scope":247,"src":"549:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":236,"name":"uint80","nodeType":"ElementaryTypeName","src":"549:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"answer","nameLocation":"572:6:3","nodeType":"VariableDeclaration","scope":247,"src":"565:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":238,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"startedAt","nameLocation":"588:9:3","nodeType":"VariableDeclaration","scope":247,"src":"580:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"updatedAt","nameLocation":"607:9:3","nodeType":"VariableDeclaration","scope":247,"src":"599:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"answeredInRound","nameLocation":"625:15:3","nodeType":"VariableDeclaration","scope":247,"src":"618:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":244,"name":"uint80","nodeType":"ElementaryTypeName","src":"618:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"548:93:3"},"scope":248,"src":"487:155:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":249,"src":"110:534:3","usedErrors":[]}],"src":"32:613:3"},"id":3},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","exportedSymbols":{"IERC677Receiver":[260]},"id":261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC677Receiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":260,"linearizedBaseContracts":[260],"name":"IERC677Receiver","nameLocation":"67:15:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a4c0ed36","id":259,"implemented":false,"kind":"function","modifiers":[],"name":"onTokenTransfer","nameLocation":"96:15:4","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"120:6:4","nodeType":"VariableDeclaration","scope":259,"src":"112:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"amount","nameLocation":"136:6:4","nodeType":"VariableDeclaration","scope":259,"src":"128:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"128:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"data","nameLocation":"159:4:4","nodeType":"VariableDeclaration","scope":259,"src":"144:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":255,"name":"bytes","nodeType":"ElementaryTypeName","src":"144:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:53:4"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"173:0:4"},"scope":260,"src":"87:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":261,"src":"57:119:4","usedErrors":[]}],"src":"32:145:4"},"id":4},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[276]},"id":277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":262,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":276,"linearizedBaseContracts":[276],"name":"IOwnable","nameLocation":"67:8:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":267,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:5","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"94:2:5"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"115:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:5"},"scope":276,"src":"80:44:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:5","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"recipient","nameLocation":"163:9:5","nodeType":"VariableDeclaration","scope":272,"src":"155:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:5"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"182:0:5"},"scope":276,"src":"128:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":275,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:5","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"211:2:5"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"222:0:5"},"scope":276,"src":"187:36:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":277,"src":"57:168:5","usedErrors":[]}],"src":"32:194:5"},"id":5},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[371]},"id":372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":278,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":371,"linearizedBaseContracts":[371],"name":"LinkTokenInterface","nameLocation":"120:18:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":287,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"152:9:6","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"owner","nameLocation":"170:5:6","nodeType":"VariableDeclaration","scope":287,"src":"162:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"162:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"spender","nameLocation":"185:7:6","nodeType":"VariableDeclaration","scope":287,"src":"177:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"177:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"161:32:6"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"remaining","nameLocation":"225:9:6","nodeType":"VariableDeclaration","scope":287,"src":"217:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"216:19:6"},"scope":371,"src":"143:93:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"249:7:6","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"spender","nameLocation":"265:7:6","nodeType":"VariableDeclaration","scope":296,"src":"257:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"value","nameLocation":"282:5:6","nodeType":"VariableDeclaration","scope":296,"src":"274:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"256:32:6"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"success","nameLocation":"312:7:6","nodeType":"VariableDeclaration","scope":296,"src":"307:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:14:6"},"scope":371,"src":"240:81:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":303,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"334:9:6","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"owner","nameLocation":"352:5:6","nodeType":"VariableDeclaration","scope":303,"src":"344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"343:15:6"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"balance","nameLocation":"390:7:6","nodeType":"VariableDeclaration","scope":303,"src":"382:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"381:17:6"},"scope":371,"src":"325:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":308,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"412:8:6","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[],"src":"420:2:6"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"decimalPlaces","nameLocation":"452:13:6","nodeType":"VariableDeclaration","scope":308,"src":"446:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":305,"name":"uint8","nodeType":"ElementaryTypeName","src":"446:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"445:21:6"},"scope":371,"src":"403:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":317,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"480:16:6","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"spender","nameLocation":"505:7:6","nodeType":"VariableDeclaration","scope":317,"src":"497:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"addedValue","nameLocation":"522:10:6","nodeType":"VariableDeclaration","scope":317,"src":"514:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:37:6"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"success","nameLocation":"557:7:6","nodeType":"VariableDeclaration","scope":317,"src":"552:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"552:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"551:14:6"},"scope":371,"src":"471:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":324,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"579:16:6","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"spender","nameLocation":"604:7:6","nodeType":"VariableDeclaration","scope":324,"src":"596:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"subtractedValue","nameLocation":"621:15:6","nodeType":"VariableDeclaration","scope":324,"src":"613:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:42:6"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"646:0:6"},"scope":371,"src":"570:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"660:4:6","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"664:2:6"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"tokenName","nameLocation":"704:9:6","nodeType":"VariableDeclaration","scope":329,"src":"690:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":326,"name":"string","nodeType":"ElementaryTypeName","src":"690:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"689:25:6"},"scope":371,"src":"651:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":334,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"728:6:6","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"734:2:6"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"tokenSymbol","nameLocation":"774:11:6","nodeType":"VariableDeclaration","scope":334,"src":"760:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":331,"name":"string","nodeType":"ElementaryTypeName","src":"760:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"759:27:6"},"scope":371,"src":"719:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":339,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"800:11:6","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"811:2:6"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"845:17:6","nodeType":"VariableDeclaration","scope":339,"src":"837:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"836:27:6"},"scope":371,"src":"791:73:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":348,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"877:8:6","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"to","nameLocation":"894:2:6","nodeType":"VariableDeclaration","scope":348,"src":"886:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"886:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"value","nameLocation":"906:5:6","nodeType":"VariableDeclaration","scope":348,"src":"898:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"885:27:6"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"success","nameLocation":"936:7:6","nodeType":"VariableDeclaration","scope":348,"src":"931:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":345,"name":"bool","nodeType":"ElementaryTypeName","src":"931:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"930:14:6"},"scope":371,"src":"868:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"958:15:6","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"to","nameLocation":"982:2:6","nodeType":"VariableDeclaration","scope":359,"src":"974:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"value","nameLocation":"994:5:6","nodeType":"VariableDeclaration","scope":359,"src":"986:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"data","nameLocation":"1016:4:6","nodeType":"VariableDeclaration","scope":359,"src":"1001:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":353,"name":"bytes","nodeType":"ElementaryTypeName","src":"1001:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"973:48:6"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"success","nameLocation":"1045:7:6","nodeType":"VariableDeclaration","scope":359,"src":"1040:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":356,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:14:6"},"scope":371,"src":"949:105:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1067:12:6","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"from","nameLocation":"1088:4:6","nodeType":"VariableDeclaration","scope":370,"src":"1080:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"to","nameLocation":"1102:2:6","nodeType":"VariableDeclaration","scope":370,"src":"1094:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"value","nameLocation":"1114:5:6","nodeType":"VariableDeclaration","scope":370,"src":"1106:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1106:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:41:6"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"success","nameLocation":"1144:7:6","nodeType":"VariableDeclaration","scope":370,"src":"1139:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":367,"name":"bool","nodeType":"ElementaryTypeName","src":"1139:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1138:14:6"},"scope":371,"src":"1058:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":372,"src":"110:1045:6","usedErrors":[]}],"src":"32:1124:6"},"id":6},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[984]},"id":985,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":373,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"230:1087:7","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":984,"linearizedBaseContracts":[984],"name":"EnumerableSet","nameLocation":"1326:13:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":382,"members":[{"constant":false,"id":377,"mutability":"mutable","name":"_values","nameLocation":"1850:7:7","nodeType":"VariableDeclaration","scope":382,"src":"1840:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1840:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":376,"nodeType":"ArrayTypeName","src":"1840:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_indexes","nameLocation":"2018:8:7","nodeType":"VariableDeclaration","scope":382,"src":"1990:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":380,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1990:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1793:3:7","nodeType":"StructDefinition","scope":984,"src":"1786:247:7","visibility":"public"},{"body":{"id":423,"nodeType":"Block","src":"2272:335:7","statements":[{"condition":{"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2286:22:7","subExpression":{"arguments":[{"id":394,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2297:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2302:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":393,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2287:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":421,"nodeType":"Block","src":"2564:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2585:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":392,"id":420,"nodeType":"Return","src":"2578:12:7"}]},"id":422,"nodeType":"IfStatement","src":"2282:319:7","trueBody":{"id":418,"nodeType":"Block","src":"2310:248:7","statements":[{"expression":{"arguments":[{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2341:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":398,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2324:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2328:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"2324:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2336:4:7","memberName":"push","nodeType":"MemberAccess","src":"2324:16:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"2324:23:7"},{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2482:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2486:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"2482:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":410,"indexExpression":{"id":408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2495:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":411,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2504:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"2504:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2516:6:7","memberName":"length","nodeType":"MemberAccess","src":"2504:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2482:40:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":415,"nodeType":"ExpressionStatement","src":"2482:40:7"},{"expression":{"hexValue":"74727565","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2543:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":392,"id":417,"nodeType":"Return","src":"2536:11:7"}]}}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"2039:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":424,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2212:4:7","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"set","nameLocation":"2229:3:7","nodeType":"VariableDeclaration","scope":424,"src":"2217:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":385,"nodeType":"UserDefinedTypeName","pathNode":{"id":384,"name":"Set","nameLocations":["2217:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"2217:3:7"},"referencedDeclaration":382,"src":"2217:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"2242:5:7","nodeType":"VariableDeclaration","scope":424,"src":"2234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2234:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2216:32:7"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":424,"src":"2266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"2266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2265:6:7"},"scope":984,"src":"2203:404:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":507,"nodeType":"Block","src":"2847:1316:7","statements":[{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"valueIndex","nameLocation":"2965:10:7","nodeType":"VariableDeclaration","scope":507,"src":"2957:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2957:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":441,"initialValue":{"baseExpression":{"expression":{"id":437,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2978:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2982:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"2978:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":440,"indexExpression":{"id":439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2991:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2978:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2957:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3012:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3026:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3012:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":505,"nodeType":"Block","src":"4120:37:7","statements":[{"expression":{"hexValue":"66616c7365","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4141:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":434,"id":504,"nodeType":"Return","src":"4134:12:7"}]},"id":506,"nodeType":"IfStatement","src":"3008:1149:7","trueBody":{"id":502,"nodeType":"Block","src":"3029:1085:7","statements":[{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3389:13:7","nodeType":"VariableDeclaration","scope":502,"src":"3381:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":450,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3405:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3418:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3405:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3381:38:7"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"lastIndex","nameLocation":"3441:9:7","nodeType":"VariableDeclaration","scope":502,"src":"3433:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":458,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":453,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3453:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3457:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3453:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3465:6:7","memberName":"length","nodeType":"MemberAccess","src":"3453:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3474:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3453:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3433:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3494:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":460,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3507:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3494:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":486,"nodeType":"IfStatement","src":"3490:398:7","trueBody":{"id":485,"nodeType":"Block","src":"3522:366:7","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"lastValue","nameLocation":"3548:9:7","nodeType":"VariableDeclaration","scope":485,"src":"3540:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3540:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":468,"initialValue":{"baseExpression":{"expression":{"id":464,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3560:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3560:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":467,"indexExpression":{"id":466,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3572:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3560:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3540:42:7"},{"expression":{"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":469,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3682:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3686:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3682:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":473,"indexExpression":{"id":471,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3694:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3682:26:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":474,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3711:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3682:38:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":476,"nodeType":"ExpressionStatement","src":"3682:38:7"},{"expression":{"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":477,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3794:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3798:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"3794:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":481,"indexExpression":{"id":479,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3807:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3794:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":482,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3820:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3794:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"nodeType":"ExpressionStatement","src":"3794:36:7"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":487,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3966:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3966:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3978:3:7","memberName":"pop","nodeType":"MemberAccess","src":"3966:15:7","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3966:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"3966:17:7"},{"expression":{"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4051:26:7","subExpression":{"baseExpression":{"expression":{"id":494,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"4058:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4062:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"4058:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":497,"indexExpression":{"id":496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4071:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4058:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"4051:26:7"},{"expression":{"hexValue":"74727565","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4099:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":434,"id":501,"nodeType":"Return","src":"4092:11:7"}]}}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2613:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":508,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2784:7:7","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"set","nameLocation":"2804:3:7","nodeType":"VariableDeclaration","scope":508,"src":"2792:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"Set","nameLocations":["2792:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"2792:3:7"},"referencedDeclaration":382,"src":"2792:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"value","nameLocation":"2817:5:7","nodeType":"VariableDeclaration","scope":508,"src":"2809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2809:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2791:32:7"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"2841:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":432,"name":"bool","nodeType":"ElementaryTypeName","src":"2841:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2840:6:7"},"scope":984,"src":"2775:1388:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":526,"nodeType":"Block","src":"4323:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":519,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"4340:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4344:8:7","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":381,"src":"4340:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":522,"indexExpression":{"id":521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4353:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4340:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4363:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4340:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":518,"id":525,"nodeType":"Return","src":"4333:31:7"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"4169:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4253:9:7","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"set","nameLocation":"4275:3:7","nodeType":"VariableDeclaration","scope":527,"src":"4263:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":511,"nodeType":"UserDefinedTypeName","pathNode":{"id":510,"name":"Set","nameLocations":["4263:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"4263:3:7"},"referencedDeclaration":382,"src":"4263:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"4288:5:7","nodeType":"VariableDeclaration","scope":527,"src":"4280:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4280:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4262:32:7"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"4317:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":516,"name":"bool","nodeType":"ElementaryTypeName","src":"4317:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4316:6:7"},"scope":984,"src":"4244:127:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":540,"nodeType":"Block","src":"4517:42:7","statements":[{"expression":{"expression":{"expression":{"id":536,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4534:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4538:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"4534:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4546:6:7","memberName":"length","nodeType":"MemberAccess","src":"4534:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":535,"id":539,"nodeType":"Return","src":"4527:25:7"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"4377:70:7","text":" @dev Returns the number of values on the set. O(1)."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4461:7:7","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"set","nameLocation":"4481:3:7","nodeType":"VariableDeclaration","scope":541,"src":"4469:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"Set","nameLocations":["4469:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"4469:3:7"},"referencedDeclaration":382,"src":"4469:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4468:17:7"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"4508:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4508:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4507:9:7"},"scope":984,"src":"4452:107:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":557,"nodeType":"Block","src":"4977:42:7","statements":[{"expression":{"baseExpression":{"expression":{"id":552,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4994:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4998:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"4994:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":555,"indexExpression":{"id":554,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5006:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:18:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":551,"id":556,"nodeType":"Return","src":"4987:25:7"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"4565:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4910:3:7","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"set","nameLocation":"4926:3:7","nodeType":"VariableDeclaration","scope":558,"src":"4914:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"Set","nameLocations":["4914:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"4914:3:7"},"referencedDeclaration":382,"src":"4914:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"index","nameLocation":"4939:5:7","nodeType":"VariableDeclaration","scope":558,"src":"4931:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4913:32:7"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"4968:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4968:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4967:9:7"},"scope":984,"src":"4901:118:7","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":571,"nodeType":"Block","src":"5633:35:7","statements":[{"expression":{"expression":{"id":568,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"5650:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5654:7:7","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":377,"src":"5650:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":567,"id":570,"nodeType":"Return","src":"5643:18:7"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"5025:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":572,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5568:7:7","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"set","nameLocation":"5588:3:7","nodeType":"VariableDeclaration","scope":572,"src":"5576:15:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":561,"nodeType":"UserDefinedTypeName","pathNode":{"id":560,"name":"Set","nameLocations":["5576:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"5576:3:7"},"referencedDeclaration":382,"src":"5576:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5575:17:7"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"5615:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5615:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":565,"nodeType":"ArrayTypeName","src":"5615:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5614:18:7"},"scope":984,"src":"5559:109:7","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":576,"members":[{"constant":false,"id":575,"mutability":"mutable","name":"_inner","nameLocation":"5725:6:7","nodeType":"VariableDeclaration","scope":576,"src":"5721:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":574,"nodeType":"UserDefinedTypeName","pathNode":{"id":573,"name":"Set","nameLocations":["5721:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"5721:3:7"},"referencedDeclaration":382,"src":"5721:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5700:10:7","nodeType":"StructDefinition","scope":984,"src":"5693:45:7","visibility":"public"},{"body":{"id":593,"nodeType":"Block","src":"5984:47:7","statements":[{"expression":{"arguments":[{"expression":{"id":588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6006:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6010:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6006:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"6018:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":587,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"6001:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6001:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":586,"id":592,"nodeType":"Return","src":"5994:30:7"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"5744:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5917:3:7","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"set","nameLocation":"5940:3:7","nodeType":"VariableDeclaration","scope":594,"src":"5921:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"Bytes32Set","nameLocations":["5921:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"5921:10:7"},"referencedDeclaration":576,"src":"5921:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"value","nameLocation":"5953:5:7","nodeType":"VariableDeclaration","scope":594,"src":"5945:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5945:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5920:39:7"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"5978:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"5978:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5977:6:7"},"scope":984,"src":"5908:123:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":611,"nodeType":"Block","src":"6278:50:7","statements":[{"expression":{"arguments":[{"expression":{"id":606,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6303:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6307:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6303:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6315:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":605,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"6295:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":604,"id":610,"nodeType":"Return","src":"6288:33:7"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"6037:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":612,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6208:6:7","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"set","nameLocation":"6234:3:7","nodeType":"VariableDeclaration","scope":612,"src":"6215:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":597,"nodeType":"UserDefinedTypeName","pathNode":{"id":596,"name":"Bytes32Set","nameLocations":["6215:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"6215:10:7"},"referencedDeclaration":576,"src":"6215:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"value","nameLocation":"6247:5:7","nodeType":"VariableDeclaration","scope":612,"src":"6239:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6239:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6214:39:7"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"6272:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"6272:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6271:6:7"},"scope":984,"src":"6199:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":629,"nodeType":"Block","src":"6495:52:7","statements":[{"expression":{"arguments":[{"expression":{"id":624,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6522:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6526:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6522:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6534:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":623,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6512:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6512:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":622,"id":628,"nodeType":"Return","src":"6505:35:7"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"6334:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":630,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6418:8:7","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"set","nameLocation":"6446:3:7","nodeType":"VariableDeclaration","scope":630,"src":"6427:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":615,"nodeType":"UserDefinedTypeName","pathNode":{"id":614,"name":"Bytes32Set","nameLocations":["6427:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"6427:10:7"},"referencedDeclaration":576,"src":"6427:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"value","nameLocation":"6459:5:7","nodeType":"VariableDeclaration","scope":630,"src":"6451:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6451:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6426:39:7"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"6489:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":620,"name":"bool","nodeType":"ElementaryTypeName","src":"6489:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6488:6:7"},"scope":984,"src":"6409:138:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":644,"nodeType":"Block","src":"6700:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":640,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6725:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6729:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6725:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":639,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"6717:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":638,"id":643,"nodeType":"Return","src":"6710:26:7"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"6553:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":645,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6637:6:7","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"set","nameLocation":"6663:3:7","nodeType":"VariableDeclaration","scope":645,"src":"6644:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"Bytes32Set","nameLocations":["6644:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"6644:10:7"},"referencedDeclaration":576,"src":"6644:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6643:24:7"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"6691:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6691:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6690:9:7"},"scope":984,"src":"6628:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"7168:46:7","statements":[{"expression":{"arguments":[{"expression":{"id":657,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7189:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7193:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7189:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":659,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7201:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7185:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7185:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":655,"id":661,"nodeType":"Return","src":"7178:29:7"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"6749:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7094:2:7","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"set","nameLocation":"7116:3:7","nodeType":"VariableDeclaration","scope":663,"src":"7097:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":648,"nodeType":"UserDefinedTypeName","pathNode":{"id":647,"name":"Bytes32Set","nameLocations":["7097:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"7097:10:7"},"referencedDeclaration":576,"src":"7097:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"index","nameLocation":"7129:5:7","nodeType":"VariableDeclaration","scope":663,"src":"7121:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7096:39:7"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"7159:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7159:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7158:9:7"},"scope":984,"src":"7085:129:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":692,"nodeType":"Block","src":"7835:219:7","statements":[{"assignments":[677],"declarations":[{"constant":false,"id":677,"mutability":"mutable","name":"store","nameLocation":"7862:5:7","nodeType":"VariableDeclaration","scope":692,"src":"7845:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7845:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":676,"nodeType":"ArrayTypeName","src":"7845:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":682,"initialValue":{"arguments":[{"expression":{"id":679,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"7878:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7882:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":575,"src":"7878:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":678,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"7870:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7870:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7845:44:7"},{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"result","nameLocation":"7916:6:7","nodeType":"VariableDeclaration","scope":692,"src":"7899:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":686,"nodeType":"ArrayTypeName","src":"7899:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":688,"nodeType":"VariableDeclarationStatement","src":"7899:23:7"},{"AST":{"nodeType":"YulBlock","src":"7985:39:7","statements":[{"nodeType":"YulAssignment","src":"7999:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"8009:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7999:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":687,"isOffset":false,"isSlot":false,"src":"7999:6:7","valueSize":1},{"declaration":677,"isOffset":false,"isSlot":false,"src":"8009:5:7","valueSize":1}],"id":689,"nodeType":"InlineAssembly","src":"7976:48:7"},{"expression":{"id":690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8041:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":672,"id":691,"nodeType":"Return","src":"8034:13:7"}]},"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"7220:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":693,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7763:6:7","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"set","nameLocation":"7789:3:7","nodeType":"VariableDeclaration","scope":693,"src":"7770:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":666,"nodeType":"UserDefinedTypeName","pathNode":{"id":665,"name":"Bytes32Set","nameLocations":["7770:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"7770:10:7"},"referencedDeclaration":576,"src":"7770:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$576_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7769:24:7"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"7817:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7817:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":670,"nodeType":"ArrayTypeName","src":"7817:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7816:18:7"},"scope":984,"src":"7754:300:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":697,"members":[{"constant":false,"id":696,"mutability":"mutable","name":"_inner","nameLocation":"8111:6:7","nodeType":"VariableDeclaration","scope":697,"src":"8107:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":695,"nodeType":"UserDefinedTypeName","pathNode":{"id":694,"name":"Set","nameLocations":["8107:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"8107:3:7"},"referencedDeclaration":382,"src":"8107:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8086:10:7","nodeType":"StructDefinition","scope":984,"src":"8079:45:7","visibility":"public"},{"body":{"id":723,"nodeType":"Block","src":"8370:74:7","statements":[{"expression":{"arguments":[{"expression":{"id":709,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"8392:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8396:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"8392:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8428:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8420:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":715,"name":"uint160","nodeType":"ElementaryTypeName","src":"8420:7:7","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8420:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8412:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"8412:7:7","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8412:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8404:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8404:7:7","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":708,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"8387:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8387:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":707,"id":722,"nodeType":"Return","src":"8380:57:7"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8130:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8303:3:7","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"set","nameLocation":"8326:3:7","nodeType":"VariableDeclaration","scope":724,"src":"8307:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"AddressSet","nameLocations":["8307:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"8307:10:7"},"referencedDeclaration":697,"src":"8307:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"value","nameLocation":"8339:5:7","nodeType":"VariableDeclaration","scope":724,"src":"8331:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"8331:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8306:39:7"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"8364:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":705,"name":"bool","nodeType":"ElementaryTypeName","src":"8364:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8363:6:7"},"scope":984,"src":"8294:150:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":750,"nodeType":"Block","src":"8691:77:7","statements":[{"expression":{"arguments":[{"expression":{"id":736,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"8716:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8720:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"8716:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"8752:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8744:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":742,"name":"uint160","nodeType":"ElementaryTypeName","src":"8744:7:7","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8744:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8736:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8736:7:7","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8728:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8728:7:7","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8728:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":735,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8708:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8708:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":734,"id":749,"nodeType":"Return","src":"8701:60:7"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"8450:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":751,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8621:6:7","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"set","nameLocation":"8647:3:7","nodeType":"VariableDeclaration","scope":751,"src":"8628:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":727,"nodeType":"UserDefinedTypeName","pathNode":{"id":726,"name":"AddressSet","nameLocations":["8628:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"8628:10:7"},"referencedDeclaration":697,"src":"8628:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"value","nameLocation":"8660:5:7","nodeType":"VariableDeclaration","scope":751,"src":"8652:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8627:39:7"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":751,"src":"8685:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":732,"name":"bool","nodeType":"ElementaryTypeName","src":"8685:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8684:6:7"},"scope":984,"src":"8612:156:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":777,"nodeType":"Block","src":"8935:79:7","statements":[{"expression":{"arguments":[{"expression":{"id":763,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"8962:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8966:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"8962:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8998:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8990:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":769,"name":"uint160","nodeType":"ElementaryTypeName","src":"8990:7:7","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8990:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8982:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"8982:7:7","typeDescriptions":{}}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8982:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8974:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8974:7:7","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":762,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8952:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":761,"id":776,"nodeType":"Return","src":"8945:62:7"}]},"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"8774:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8858:8:7","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"set","nameLocation":"8886:3:7","nodeType":"VariableDeclaration","scope":778,"src":"8867:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":754,"nodeType":"UserDefinedTypeName","pathNode":{"id":753,"name":"AddressSet","nameLocations":["8867:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"8867:10:7"},"referencedDeclaration":697,"src":"8867:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"8899:5:7","nodeType":"VariableDeclaration","scope":778,"src":"8891:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"8891:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8866:39:7"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"8929:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"8929:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8928:6:7"},"scope":984,"src":"8849:165:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"9167:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":788,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9192:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9196:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"9192:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":787,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"9184:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9184:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":786,"id":791,"nodeType":"Return","src":"9177:26:7"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"9020:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9104:6:7","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"set","nameLocation":"9130:3:7","nodeType":"VariableDeclaration","scope":793,"src":"9111:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":781,"nodeType":"UserDefinedTypeName","pathNode":{"id":780,"name":"AddressSet","nameLocations":["9111:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"9111:10:7"},"referencedDeclaration":697,"src":"9111:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9110:24:7"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"9158:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9157:9:7"},"scope":984,"src":"9095:115:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"9635:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":811,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9680:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9684:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"9680:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":813,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9692:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"9676:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9676:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9668:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"9668:7:7","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9668:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9660:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":806,"name":"uint160","nodeType":"ElementaryTypeName","src":"9660:7:7","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9660:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9652:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"9652:7:7","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9652:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":803,"id":818,"nodeType":"Return","src":"9645:56:7"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"9216:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9561:2:7","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"set","nameLocation":"9583:3:7","nodeType":"VariableDeclaration","scope":820,"src":"9564:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":796,"nodeType":"UserDefinedTypeName","pathNode":{"id":795,"name":"AddressSet","nameLocations":["9564:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"9564:10:7"},"referencedDeclaration":697,"src":"9564:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"index","nameLocation":"9596:5:7","nodeType":"VariableDeclaration","scope":820,"src":"9588:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9563:39:7"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"9626:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"9626:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9625:9:7"},"scope":984,"src":"9552:156:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"10329:219:7","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"store","nameLocation":"10356:5:7","nodeType":"VariableDeclaration","scope":849,"src":"10339:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10339:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":833,"nodeType":"ArrayTypeName","src":"10339:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[{"expression":{"id":836,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"10372:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":696,"src":"10372:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":835,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"10364:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10364:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10339:44:7"},{"assignments":[844],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"result","nameLocation":"10410:6:7","nodeType":"VariableDeclaration","scope":849,"src":"10393:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"10393:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":843,"nodeType":"ArrayTypeName","src":"10393:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":845,"nodeType":"VariableDeclarationStatement","src":"10393:23:7"},{"AST":{"nodeType":"YulBlock","src":"10479:39:7","statements":[{"nodeType":"YulAssignment","src":"10493:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"10503:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10493:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":844,"isOffset":false,"isSlot":false,"src":"10493:6:7","valueSize":1},{"declaration":834,"isOffset":false,"isSlot":false,"src":"10503:5:7","valueSize":1}],"id":846,"nodeType":"InlineAssembly","src":"10470:48:7"},{"expression":{"id":847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"10535:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":829,"id":848,"nodeType":"Return","src":"10528:13:7"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"9714:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10257:6:7","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"set","nameLocation":"10283:3:7","nodeType":"VariableDeclaration","scope":850,"src":"10264:22:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"AddressSet","nameLocations":["10264:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":697,"src":"10264:10:7"},"referencedDeclaration":697,"src":"10264:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$697_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10263:24:7"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"10311:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"10311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":827,"nodeType":"ArrayTypeName","src":"10311:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10310:18:7"},"scope":984,"src":"10248:300:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":854,"members":[{"constant":false,"id":853,"mutability":"mutable","name":"_inner","nameLocation":"10599:6:7","nodeType":"VariableDeclaration","scope":854,"src":"10595:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":852,"nodeType":"UserDefinedTypeName","pathNode":{"id":851,"name":"Set","nameLocations":["10595:3:7"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"10595:3:7"},"referencedDeclaration":382,"src":"10595:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10577:7:7","nodeType":"StructDefinition","scope":984,"src":"10570:42:7","visibility":"public"},{"body":{"id":874,"nodeType":"Block","src":"10855:56:7","statements":[{"expression":{"arguments":[{"expression":{"id":866,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"10877:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10881:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"10877:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"10897:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10889:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10889:7:7","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":865,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"10872:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":864,"id":873,"nodeType":"Return","src":"10865:39:7"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"10618:159:7","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10791:3:7","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"set","nameLocation":"10811:3:7","nodeType":"VariableDeclaration","scope":875,"src":"10795:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":857,"nodeType":"UserDefinedTypeName","pathNode":{"id":856,"name":"UintSet","nameLocations":["10795:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"10795:7:7"},"referencedDeclaration":854,"src":"10795:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"value","nameLocation":"10824:5:7","nodeType":"VariableDeclaration","scope":875,"src":"10816:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10794:36:7"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"10849:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":862,"name":"bool","nodeType":"ElementaryTypeName","src":"10849:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10848:6:7"},"scope":984,"src":"10782:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"11155:59:7","statements":[{"expression":{"arguments":[{"expression":{"id":887,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11180:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11184:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11180:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"11200:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11192:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11192:7:7","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":886,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"11172:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11172:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":885,"id":894,"nodeType":"Return","src":"11165:42:7"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"10917:157:7","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11088:6:7","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"set","nameLocation":"11111:3:7","nodeType":"VariableDeclaration","scope":896,"src":"11095:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":878,"nodeType":"UserDefinedTypeName","pathNode":{"id":877,"name":"UintSet","nameLocations":["11095:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11095:7:7"},"referencedDeclaration":854,"src":"11095:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"value","nameLocation":"11124:5:7","nodeType":"VariableDeclaration","scope":896,"src":"11116:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"11116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11094:36:7"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"11149:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":883,"name":"bool","nodeType":"ElementaryTypeName","src":"11149:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11148:6:7"},"scope":984,"src":"11079:135:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"11378:61:7","statements":[{"expression":{"arguments":[{"expression":{"id":908,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"11405:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11409:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11405:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"11425:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11417:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11417:7:7","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":907,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"11395:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11395:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":906,"id":915,"nodeType":"Return","src":"11388:44:7"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"11220:70:7","text":" @dev Returns true if the value is in the set. O(1)."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11304:8:7","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"set","nameLocation":"11329:3:7","nodeType":"VariableDeclaration","scope":917,"src":"11313:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":899,"nodeType":"UserDefinedTypeName","pathNode":{"id":898,"name":"UintSet","nameLocations":["11313:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11313:7:7"},"referencedDeclaration":854,"src":"11313:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"value","nameLocation":"11342:5:7","nodeType":"VariableDeclaration","scope":917,"src":"11334:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"11334:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11312:36:7"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"11372:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":904,"name":"bool","nodeType":"ElementaryTypeName","src":"11372:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11371:6:7"},"scope":984,"src":"11295:144:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"11589:43:7","statements":[{"expression":{"arguments":[{"expression":{"id":927,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11614:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11618:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"11614:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":926,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"11606:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11606:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":925,"id":930,"nodeType":"Return","src":"11599:26:7"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"11445:70:7","text":" @dev Returns the number of values in the set. O(1)."},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11529:6:7","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"set","nameLocation":"11552:3:7","nodeType":"VariableDeclaration","scope":932,"src":"11536:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":920,"nodeType":"UserDefinedTypeName","pathNode":{"id":919,"name":"UintSet","nameLocations":["11536:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11536:7:7"},"referencedDeclaration":854,"src":"11536:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11535:21:7"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"11580:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11579:9:7"},"scope":984,"src":"11520:112:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"12054:55:7","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":946,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"12083:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12087:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"12083:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":948,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"12095:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":945,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"12079:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12079:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12071:7:7","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12071:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":942,"id":951,"nodeType":"Return","src":"12064:38:7"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"11638:331:7","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11983:2:7","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"set","nameLocation":"12002:3:7","nodeType":"VariableDeclaration","scope":953,"src":"11986:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":935,"nodeType":"UserDefinedTypeName","pathNode":{"id":934,"name":"UintSet","nameLocations":["11986:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"11986:7:7"},"referencedDeclaration":854,"src":"11986:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"index","nameLocation":"12015:5:7","nodeType":"VariableDeclaration","scope":953,"src":"12007:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11985:36:7"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"12045:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"12045:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12044:9:7"},"scope":984,"src":"11974:135:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":982,"nodeType":"Block","src":"12727:219:7","statements":[{"assignments":[967],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"store","nameLocation":"12754:5:7","nodeType":"VariableDeclaration","scope":982,"src":"12737:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12737:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":966,"nodeType":"ArrayTypeName","src":"12737:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":972,"initialValue":{"arguments":[{"expression":{"id":969,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"12770:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12774:6:7","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":853,"src":"12770:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$382_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":968,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"12762:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$382_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12762:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12737:44:7"},{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"result","nameLocation":"12808:6:7","nodeType":"VariableDeclaration","scope":982,"src":"12791:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":976,"nodeType":"ArrayTypeName","src":"12791:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":978,"nodeType":"VariableDeclarationStatement","src":"12791:23:7"},{"AST":{"nodeType":"YulBlock","src":"12877:39:7","statements":[{"nodeType":"YulAssignment","src":"12891:15:7","value":{"name":"store","nodeType":"YulIdentifier","src":"12901:5:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12891:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":977,"isOffset":false,"isSlot":false,"src":"12891:6:7","valueSize":1},{"declaration":967,"isOffset":false,"isSlot":false,"src":"12901:5:7","valueSize":1}],"id":979,"nodeType":"InlineAssembly","src":"12868:48:7"},{"expression":{"id":980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"12933:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":962,"id":981,"nodeType":"Return","src":"12926:13:7"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"12115:529:7","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":983,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12658:6:7","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"set","nameLocation":"12681:3:7","nodeType":"VariableDeclaration","scope":983,"src":"12665:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":956,"nodeType":"UserDefinedTypeName","pathNode":{"id":955,"name":"UintSet","nameLocations":["12665:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"12665:7:7"},"referencedDeclaration":854,"src":"12665:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12664:21:7"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":983,"src":"12709:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"12709:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":960,"nodeType":"ArrayTypeName","src":"12709:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12708:18:7"},"scope":984,"src":"12649:297:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":985,"src":"1318:11630:7","usedErrors":[]}],"src":"205:12744:7"},"id":7},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol","exportedSymbols":{"AggregatorV3Interface":[248],"ConfirmedOwner":[39],"EnumerableSet":[984],"IERC677Receiver":[260],"IVRFSubscriptionV2Plus":[2583],"LinkTokenInterface":[371],"SubscriptionAPI":[2299]},"id":2300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":986,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","file":"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol","id":988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":985,"src":"57:114:8","symbolAliases":[{"foreign":{"id":987,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"65:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","file":"../../shared/interfaces/LinkTokenInterface.sol","id":990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":372,"src":"172:82:8","symbolAliases":[{"foreign":{"id":989,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"180:18:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":40,"src":"255:70:8","symbolAliases":[{"foreign":{"id":991,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"263:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"../../shared/interfaces/AggregatorV3Interface.sol","id":994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":249,"src":"326:88:8","symbolAliases":[{"foreign":{"id":993,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"334:21:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","file":"../../shared/interfaces/IERC677Receiver.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":261,"src":"415:76:8","symbolAliases":[{"foreign":{"id":995,"name":"IERC677Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"423:15:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./interfaces/IVRFSubscriptionV2Plus.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2300,"sourceUnit":2584,"src":"492:79:8","symbolAliases":[{"foreign":{"id":997,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"500:22:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":999,"name":"ConfirmedOwner","nameLocations":["610:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"610:14:8"},"id":1000,"nodeType":"InheritanceSpecifier","src":"610:14:8"},{"baseName":{"id":1001,"name":"IERC677Receiver","nameLocations":["626:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":260,"src":"626:15:8"},"id":1002,"nodeType":"InheritanceSpecifier","src":"626:15:8"},{"baseName":{"id":1003,"name":"IVRFSubscriptionV2Plus","nameLocations":["643:22:8"],"nodeType":"IdentifierPath","referencedDeclaration":2583,"src":"643:22:8"},"id":1004,"nodeType":"InheritanceSpecifier","src":"643:22:8"}],"canonicalName":"SubscriptionAPI","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2299,"linearizedBaseContracts":[2299,2583,260,39,202,276],"name":"SubscriptionAPI","nameLocation":"591:15:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1008,"libraryName":{"id":1005,"name":"EnumerableSet","nameLocations":["676:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"676:13:8"},"nodeType":"UsingForDirective","src":"670:46:8","typeName":{"id":1007,"nodeType":"UserDefinedTypeName","pathNode":{"id":1006,"name":"EnumerableSet.UintSet","nameLocations":["694:13:8","708:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"694:21:8"},"referencedDeclaration":854,"src":"694:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"constant":false,"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"720:89:8","text":"@dev may not be provided upon construction on some chains due to lack of availability"},"functionSelector":"1b6b6d23","id":1012,"mutability":"mutable","name":"LINK","nameLocation":"838:4:8","nodeType":"VariableDeclaration","scope":2299,"src":"812:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"},"typeName":{"id":1011,"nodeType":"UserDefinedTypeName","pathNode":{"id":1010,"name":"LinkTokenInterface","nameLocations":["812:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":371,"src":"812:18:8"},"referencedDeclaration":371,"src":"812:18:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"visibility":"public"},{"constant":false,"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"846:89:8","text":"@dev may not be provided upon construction on some chains due to lack of availability"},"functionSelector":"72e9d565","id":1016,"mutability":"mutable","name":"LINK_NATIVE_FEED","nameLocation":"967:16:8","nodeType":"VariableDeclaration","scope":2299,"src":"938:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1015,"nodeType":"UserDefinedTypeName","pathNode":{"id":1014,"name":"AggregatorV3Interface","nameLocations":["938:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"938:21:8"},"referencedDeclaration":248,"src":"938:21:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"constant":true,"functionSelector":"64d51a2a","id":1019,"mutability":"constant","name":"MAX_CONSUMERS","nameLocation":"1212:13:8","nodeType":"VariableDeclaration","scope":2299,"src":"1189:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1017,"name":"uint16","nodeType":"ElementaryTypeName","src":"1189:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1228:3:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"errorSelector":"05a48e0f","id":1021,"name":"TooManyConsumers","nameLocation":"1241:16:8","nodeType":"ErrorDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"1257:2:8"},"src":"1235:25:8"},{"errorSelector":"f4d678b8","id":1023,"name":"InsufficientBalance","nameLocation":"1269:19:8","nodeType":"ErrorDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"1288:2:8"},"src":"1263:28:8"},{"errorSelector":"79bfd401","id":1029,"name":"InvalidConsumer","nameLocation":"1300:15:8","nodeType":"ErrorDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"subId","nameLocation":"1324:5:8","nodeType":"VariableDeclaration","scope":1029,"src":"1316:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"consumer","nameLocation":"1339:8:8","nodeType":"VariableDeclaration","scope":1029,"src":"1331:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"1331:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:33:8"},"src":"1294:55:8"},{"errorSelector":"1f6a65b6","id":1031,"name":"InvalidSubscription","nameLocation":"1358:19:8","nodeType":"ErrorDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"1377:2:8"},"src":"1352:28:8"},{"errorSelector":"44b0e3c3","id":1033,"name":"OnlyCallableFromLink","nameLocation":"1389:20:8","nodeType":"ErrorDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"1409:2:8"},"src":"1383:29:8"},{"errorSelector":"8129bbcd","id":1035,"name":"InvalidCalldata","nameLocation":"1421:15:8","nodeType":"ErrorDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"1436:2:8"},"src":"1415:24:8"},{"errorSelector":"d8a3fb52","id":1039,"name":"MustBeSubOwner","nameLocation":"1448:14:8","nodeType":"ErrorDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"owner","nameLocation":"1471:5:8","nodeType":"VariableDeclaration","scope":1039,"src":"1463:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:15:8"},"src":"1442:36:8"},{"errorSelector":"b42f66e8","id":1041,"name":"PendingRequestExists","nameLocation":"1487:20:8","nodeType":"ErrorDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"1507:2:8"},"src":"1481:29:8"},{"errorSelector":"d084e975","id":1045,"name":"MustBeRequestedOwner","nameLocation":"1519:20:8","nodeType":"ErrorDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"proposedOwner","nameLocation":"1548:13:8","nodeType":"VariableDeclaration","scope":1045,"src":"1540:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"1540:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1539:23:8"},"src":"1513:50:8"},{"errorSelector":"a99da302","id":1051,"name":"BalanceInvariantViolated","nameLocation":"1572:24:8","nodeType":"ErrorDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"internalBalance","nameLocation":"1605:15:8","nodeType":"VariableDeclaration","scope":1051,"src":"1597:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"externalBalance","nameLocation":"1630:15:8","nodeType":"VariableDeclaration","scope":1051,"src":"1622:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:50:8"},"src":"1566:81:8"},{"anonymous":false,"eventSelector":"59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600","id":1057,"name":"FundsRecovered","nameLocation":"1679:14:8","nodeType":"EventDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1702:2:8","nodeType":"VariableDeclaration","scope":1057,"src":"1694:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1714:6:8","nodeType":"VariableDeclaration","scope":1057,"src":"1706:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:28:8"},"src":"1673:49:8"},{"anonymous":false,"eventSelector":"4aed7c8eed0496c8c19ea2681fcca25741c1602342e38b045d9f1e8e905d2e9c","id":1063,"name":"NativeFundsRecovered","nameLocation":"1731:20:8","nodeType":"EventDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1760:2:8","nodeType":"VariableDeclaration","scope":1063,"src":"1752:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1772:6:8","nodeType":"VariableDeclaration","scope":1063,"src":"1764:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1751:28:8"},"src":"1725:55:8"},{"errorSelector":"2d118a6e","id":1065,"name":"LinkAlreadySet","nameLocation":"1789:14:8","nodeType":"ErrorDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"1803:2:8"},"src":"1783:23:8"},{"errorSelector":"950b2479","id":1067,"name":"FailedToSendNative","nameLocation":"1815:18:8","nodeType":"ErrorDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"1833:2:8"},"src":"1809:27:8"},{"errorSelector":"7c07fc4c","id":1069,"name":"FailedToTransferLink","nameLocation":"1845:20:8","nodeType":"ErrorDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"1865:2:8"},"src":"1839:29:8"},{"errorSelector":"1390f2a1","id":1071,"name":"IndexOutOfRange","nameLocation":"1877:15:8","nodeType":"ErrorDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[],"src":"1892:2:8"},"src":"1871:24:8"},{"errorSelector":"c1f0c0a1","id":1073,"name":"LinkNotSet","nameLocation":"1904:10:8","nodeType":"ErrorDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"1914:2:8"},"src":"1898:19:8"},{"canonicalName":"SubscriptionAPI.Subscription","id":1080,"members":[{"constant":false,"id":1075,"mutability":"mutable","name":"balance","nameLocation":"2130:7:8","nodeType":"VariableDeclaration","scope":1080,"src":"2123:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1074,"name":"uint96","nodeType":"ElementaryTypeName","src":"2123:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"nativeBalance","nameLocation":"2355:13:8","nodeType":"VariableDeclaration","scope":1080,"src":"2348:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1076,"name":"uint96","nodeType":"ElementaryTypeName","src":"2348:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"reqCount","nameLocation":"2438:8:8","nodeType":"VariableDeclaration","scope":1080,"src":"2431:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1078,"name":"uint64","nodeType":"ElementaryTypeName","src":"2431:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1999:12:8","nodeType":"StructDefinition","scope":2299,"src":"1992:459:8","visibility":"public"},{"canonicalName":"SubscriptionAPI.SubscriptionConfig","id":1088,"members":[{"constant":false,"id":1082,"mutability":"mutable","name":"owner","nameLocation":"2535:5:8","nodeType":"VariableDeclaration","scope":1088,"src":"2527:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"requestedOwner","nameLocation":"2597:14:8","nodeType":"VariableDeclaration","scope":1088,"src":"2589:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"consumers","nameLocation":"3071:9:8","nodeType":"VariableDeclaration","scope":1088,"src":"3061:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1086,"nodeType":"ArrayTypeName","src":"3061:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"SubscriptionConfig","nameLocation":"2502:18:8","nodeType":"StructDefinition","scope":2299,"src":"2495:590:8","visibility":"public"},{"canonicalName":"SubscriptionAPI.ConsumerConfig","id":1095,"members":[{"constant":false,"id":1090,"mutability":"mutable","name":"active","nameLocation":"3121:6:8","nodeType":"VariableDeclaration","scope":1095,"src":"3116:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1089,"name":"bool","nodeType":"ElementaryTypeName","src":"3116:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"nonce","nameLocation":"3140:5:8","nodeType":"VariableDeclaration","scope":1095,"src":"3133:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1091,"name":"uint64","nodeType":"ElementaryTypeName","src":"3133:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"pendingReqCount","nameLocation":"3158:15:8","nodeType":"VariableDeclaration","scope":1095,"src":"3151:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1093,"name":"uint64","nodeType":"ElementaryTypeName","src":"3151:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"ConsumerConfig","nameLocation":"3095:14:8","nodeType":"StructDefinition","scope":2299,"src":"3088:90:8","visibility":"public"},{"constant":false,"id":1102,"mutability":"mutable","name":"s_consumers","nameLocation":"3388:11:8","nodeType":"VariableDeclaration","scope":2299,"src":"3265:134:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))"},"typeName":{"id":1101,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3265:54:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1100,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3292:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3284:34:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1099,"nodeType":"UserDefinedTypeName","pathNode":{"id":1098,"name":"ConsumerConfig","nameLocations":["3303:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1095,"src":"3303:14:8"},"referencedDeclaration":1095,"src":"3303:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"}}}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"s_subscriptionConfigs","nameLocation":"3488:21:8","nodeType":"VariableDeclaration","scope":2299,"src":"3403:106:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)"},"typeName":{"id":1106,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3411:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3403:38:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1105,"nodeType":"UserDefinedTypeName","pathNode":{"id":1104,"name":"SubscriptionConfig","nameLocations":["3422:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"3422:18:8"},"referencedDeclaration":1088,"src":"3422:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"}}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"s_subscriptions","nameLocation":"3586:15:8","nodeType":"VariableDeclaration","scope":2299,"src":"3513:88:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription)"},"typeName":{"id":1111,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3513:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1110,"nodeType":"UserDefinedTypeName","pathNode":{"id":1109,"name":"Subscription","nameLocations":["3532:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1080,"src":"3532:12:8"},"referencedDeclaration":1080,"src":"3532:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"}}},"visibility":"internal"},{"constant":false,"functionSelector":"9d40a6fd","id":1114,"mutability":"mutable","name":"s_currentSubNonce","nameLocation":"3688:17:8","nodeType":"VariableDeclaration","scope":2299,"src":"3674:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1113,"name":"uint64","nodeType":"ElementaryTypeName","src":"3674:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"id":1117,"mutability":"mutable","name":"s_subIds","nameLocation":"4183:8:8","nodeType":"VariableDeclaration","scope":2299,"src":"4152:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":1116,"nodeType":"UserDefinedTypeName","pathNode":{"id":1115,"name":"EnumerableSet.UintSet","nameLocations":["4152:13:8","4166:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"4152:21:8"},"referencedDeclaration":854,"src":"4152:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"functionSelector":"86fe91c7","id":1119,"mutability":"mutable","name":"s_totalBalance","nameLocation":"4490:14:8","nodeType":"VariableDeclaration","scope":2299,"src":"4476:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1118,"name":"uint96","nodeType":"ElementaryTypeName","src":"4476:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"18e3dd27","id":1121,"mutability":"mutable","name":"s_totalNativeBalance","nameLocation":"4826:20:8","nodeType":"VariableDeclaration","scope":2299,"src":"4812:34:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1120,"name":"uint96","nodeType":"ElementaryTypeName","src":"4812:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"id":1123,"mutability":"mutable","name":"s_withdrawableTokens","nameLocation":"4866:20:8","nodeType":"VariableDeclaration","scope":2299,"src":"4850:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1122,"name":"uint96","nodeType":"ElementaryTypeName","src":"4850:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"s_withdrawableNative","nameLocation":"4906:20:8","nodeType":"VariableDeclaration","scope":2299,"src":"4890:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1124,"name":"uint96","nodeType":"ElementaryTypeName","src":"4890:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1d3015d7ba850fa198dc7b1a3f5d42779313a681035f77c8c03764c61005518d","id":1131,"name":"SubscriptionCreated","nameLocation":"4937:19:8","nodeType":"EventDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4973:5:8","nodeType":"VariableDeclaration","scope":1131,"src":"4957:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"4988:5:8","nodeType":"VariableDeclaration","scope":1131,"src":"4980:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4956:38:8"},"src":"4931:64:8"},{"anonymous":false,"eventSelector":"1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a","id":1139,"name":"SubscriptionFunded","nameLocation":"5004:18:8","nodeType":"EventDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5039:5:8","nodeType":"VariableDeclaration","scope":1139,"src":"5023:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"5054:10:8","nodeType":"VariableDeclaration","scope":1139,"src":"5046:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"5046:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1137,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"5074:10:8","nodeType":"VariableDeclaration","scope":1139,"src":"5066:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"5066:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5022:63:8"},"src":"4998:88:8"},{"anonymous":false,"eventSelector":"7603b205d03651ee812f803fccde89f1012e545a9c99f0abfea9cedd0fd8e902","id":1147,"name":"SubscriptionFundedWithNative","nameLocation":"5095:28:8","nodeType":"EventDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5140:5:8","nodeType":"VariableDeclaration","scope":1147,"src":"5124:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"5124:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1143,"indexed":false,"mutability":"mutable","name":"oldNativeBalance","nameLocation":"5155:16:8","nodeType":"VariableDeclaration","scope":1147,"src":"5147:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5147:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1145,"indexed":false,"mutability":"mutable","name":"newNativeBalance","nameLocation":"5181:16:8","nodeType":"VariableDeclaration","scope":1147,"src":"5173:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5123:75:8"},"src":"5089:110:8"},{"anonymous":false,"eventSelector":"1e980d04aa7648e205713e5e8ea3808672ac163d10936d36f91b2c88ac1575e1","id":1153,"name":"SubscriptionConsumerAdded","nameLocation":"5208:25:8","nodeType":"EventDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5250:5:8","nodeType":"VariableDeclaration","scope":1153,"src":"5234:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1151,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"5265:8:8","nodeType":"VariableDeclaration","scope":1153,"src":"5257:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"5257:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5233:41:8"},"src":"5202:73:8"},{"anonymous":false,"eventSelector":"32158c6058347c1601b2d12bc696ac6901d8a9a9aa3ba10c27ab0a983e8425a7","id":1159,"name":"SubscriptionConsumerRemoved","nameLocation":"5284:27:8","nodeType":"EventDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5328:5:8","nodeType":"VariableDeclaration","scope":1159,"src":"5312:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"5312:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"5343:8:8","nodeType":"VariableDeclaration","scope":1159,"src":"5335:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5311:41:8"},"src":"5278:75:8"},{"anonymous":false,"eventSelector":"8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c4","id":1169,"name":"SubscriptionCanceled","nameLocation":"5362:20:8","nodeType":"EventDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5399:5:8","nodeType":"VariableDeclaration","scope":1169,"src":"5383:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"5383:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5414:2:8","nodeType":"VariableDeclaration","scope":1169,"src":"5406:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"5406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"indexed":false,"mutability":"mutable","name":"amountLink","nameLocation":"5426:10:8","nodeType":"VariableDeclaration","scope":1169,"src":"5418:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"indexed":false,"mutability":"mutable","name":"amountNative","nameLocation":"5446:12:8","nodeType":"VariableDeclaration","scope":1169,"src":"5438:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5382:77:8"},"src":"5356:104:8"},{"anonymous":false,"eventSelector":"21a4dad170a6bf476c31bbcf4a16628295b0e450672eec25d7c93308e05344a1","id":1177,"name":"SubscriptionOwnerTransferRequested","nameLocation":"5469:34:8","nodeType":"EventDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5520:5:8","nodeType":"VariableDeclaration","scope":1177,"src":"5504:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5504:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1173,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"5535:4:8","nodeType":"VariableDeclaration","scope":1177,"src":"5527:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"5527:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5549:2:8","nodeType":"VariableDeclaration","scope":1177,"src":"5541:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"5541:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5503:49:8"},"src":"5463:90:8"},{"anonymous":false,"eventSelector":"d4114ab6e9af9f597c52041f32d62dc57c5c4e4c0d4427006069635e216c9386","id":1185,"name":"SubscriptionOwnerTransferred","nameLocation":"5562:28:8","nodeType":"EventDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5607:5:8","nodeType":"VariableDeclaration","scope":1185,"src":"5591:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1181,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"5622:4:8","nodeType":"VariableDeclaration","scope":1185,"src":"5614:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"5636:2:8","nodeType":"VariableDeclaration","scope":1185,"src":"5628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"5628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5590:49:8"},"src":"5556:84:8"},{"canonicalName":"SubscriptionAPI.Config","id":1204,"members":[{"constant":false,"id":1187,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"5671:27:8","nodeType":"VariableDeclaration","scope":1204,"src":"5664:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1186,"name":"uint16","nodeType":"ElementaryTypeName","src":"5664:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"maxGasLimit","nameLocation":"5711:11:8","nodeType":"VariableDeclaration","scope":1204,"src":"5704:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1188,"name":"uint32","nodeType":"ElementaryTypeName","src":"5704:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"reentrancyLock","nameLocation":"5763:14:8","nodeType":"VariableDeclaration","scope":1204,"src":"5758:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1190,"name":"bool","nodeType":"ElementaryTypeName","src":"5758:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"5919:16:8","nodeType":"VariableDeclaration","scope":1204,"src":"5912:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1192,"name":"uint32","nodeType":"ElementaryTypeName","src":"5912:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"6843:26:8","nodeType":"VariableDeclaration","scope":1204,"src":"6836:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1194,"name":"uint32","nodeType":"ElementaryTypeName","src":"6836:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"fulfillmentFlatFeeNativePPM","nameLocation":"6986:27:8","nodeType":"VariableDeclaration","scope":1204,"src":"6979:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1196,"name":"uint32","nodeType":"ElementaryTypeName","src":"6979:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"fulfillmentFlatFeeLinkDiscountPPM","nameLocation":"7215:33:8","nodeType":"VariableDeclaration","scope":1204,"src":"7208:40:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1198,"name":"uint32","nodeType":"ElementaryTypeName","src":"7208:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"nativePremiumPercentage","nameLocation":"7501:23:8","nodeType":"VariableDeclaration","scope":1204,"src":"7495:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1200,"name":"uint8","nodeType":"ElementaryTypeName","src":"7495:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"linkPremiumPercentage","nameLocation":"7767:21:8","nodeType":"VariableDeclaration","scope":1204,"src":"7761:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1202,"name":"uint8","nodeType":"ElementaryTypeName","src":"7761:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Config","nameLocation":"5651:6:8","nodeType":"StructDefinition","scope":2299,"src":"5644:2149:8","visibility":"public"},{"constant":false,"functionSelector":"088070f5","id":1207,"mutability":"mutable","name":"s_config","nameLocation":"7810:8:8","nodeType":"VariableDeclaration","scope":2299,"src":"7796:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage","typeString":"struct SubscriptionAPI.Config"},"typeName":{"id":1206,"nodeType":"UserDefinedTypeName","pathNode":{"id":1205,"name":"Config","nameLocations":["7796:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"7796:6:8"},"referencedDeclaration":1204,"src":"7796:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage_ptr","typeString":"struct SubscriptionAPI.Config"}},"visibility":"public"},{"errorSelector":"ed3ba6a6","id":1209,"name":"Reentrant","nameLocation":"7829:9:8","nodeType":"ErrorDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"7838:2:8"},"src":"7823:18:8"},{"body":{"id":1215,"nodeType":"Block","src":"7868:33:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1211,"name":"_nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"7874:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7874:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"ExpressionStatement","src":"7874:15:8"},{"id":1214,"nodeType":"PlaceholderStatement","src":"7895:1:8"}]},"id":1216,"name":"nonReentrant","nameLocation":"7853:12:8","nodeType":"ModifierDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"7865:2:8"},"src":"7844:57:8","virtual":false,"visibility":"internal"},{"body":{"id":1226,"nodeType":"Block","src":"7944:72:8","statements":[{"condition":{"expression":{"id":1219,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"7954:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":1220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7963:14:8","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"7954:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1225,"nodeType":"IfStatement","src":"7950:62:8","trueBody":{"id":1224,"nodeType":"Block","src":"7979:33:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1221,"name":"Reentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7994:9:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7994:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"RevertStatement","src":"7987:18:8"}]}}]},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrant","nameLocation":"7914:13:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"7927:2:8"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"7944:0:8"},"scope":2299,"src":"7905:111:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"8085:69:8","statements":[{"condition":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8095:10:8","subExpression":{"id":1232,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"8096:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"8091:59:8","trueBody":{"id":1237,"nodeType":"Block","src":"8107:43:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1234,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"8122:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"RevertStatement","src":"8115:28:8"}]}}]},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_requireSufficientBalance","nameLocation":"8029:25:8","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"condition","nameLocation":"8060:9:8","nodeType":"VariableDeclaration","scope":1240,"src":"8055:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1228,"name":"bool","nodeType":"ElementaryTypeName","src":"8055:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8054:16:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"8085:0:8"},"scope":2299,"src":"8020:134:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1256,"nodeType":"Block","src":"8225:81:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"8235:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8255:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8247:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"8247:7:8","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8235:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"8231:71:8","trueBody":{"id":1254,"nodeType":"Block","src":"8259:43:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1251,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8274:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8274:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"RevertStatement","src":"8267:28:8"}]}}]},"id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"_requireValidSubscription","nameLocation":"8167:25:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"subOwner","nameLocation":"8201:8:8","nodeType":"VariableDeclaration","scope":1257,"src":"8193:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"8193:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8192:18:8"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[],"src":"8225:0:8"},"scope":2299,"src":"8158:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"8350:2:8","statements":[]},"id":1265,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8338:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8342:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8338:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1262,"kind":"baseConstructorSpecifier","modifierName":{"id":1259,"name":"ConfirmedOwner","nameLocations":["8323:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"8323:14:8"},"nodeType":"ModifierInvocation","src":"8323:26:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"8320:2:8"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[],"src":"8350:0:8"},"scope":2299,"src":"8309:43:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1301,"nodeType":"Block","src":"8657:263:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1277,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8758:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"8750:7:8","typeDescriptions":{}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8767:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"8767:7:8","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8767:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8750:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1288,"nodeType":"IfStatement","src":"8746:71:8","trueBody":{"id":1287,"nodeType":"Block","src":"8779:38:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1284,"name":"LinkAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8794:14:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8794:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"RevertStatement","src":"8787:23:8"}]}},{"expression":{"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1289,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"8822:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1291,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"8848:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1290,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"8829:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$371_$","typeString":"type(contract LinkTokenInterface)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8829:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"src":"8822:31:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1294,"nodeType":"ExpressionStatement","src":"8822:31:8"},{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1295,"name":"LINK_NATIVE_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"8859:16:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1297,"name":"linkNativeFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"8900:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1296,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"8878:21:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$248_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"src":"8859:56:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$248","typeString":"contract AggregatorV3Interface"}},"id":1300,"nodeType":"ExpressionStatement","src":"8859:56:8"}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"8356:207:8","text":" @notice set the LINK token contract and link native feed to be\n used by this coordinator\n @param link - address of link token\n @param linkNativeFeed address of the link native feed"},"functionSelector":"65982744","id":1302,"implemented":true,"kind":"function","modifiers":[{"id":1273,"kind":"modifierInvocation","modifierName":{"id":1272,"name":"onlyOwner","nameLocations":["8647:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"8647:9:8"},"nodeType":"ModifierInvocation","src":"8647:9:8"}],"name":"setLINKAndLINKNativeFeed","nameLocation":"8575:24:8","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"link","nameLocation":"8608:4:8","nodeType":"VariableDeclaration","scope":1302,"src":"8600:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"8600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"linkNativeFeed","nameLocation":"8622:14:8","nodeType":"VariableDeclaration","scope":1302,"src":"8614:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8599:38:8"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[],"src":"8657:0:8"},"scope":2299,"src":"8566:354:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1326,"nodeType":"Block","src":"9236:153:8","statements":[{"assignments":[1311],"declarations":[{"constant":false,"id":1311,"mutability":"mutable","name":"subOwner","nameLocation":"9250:8:8","nodeType":"VariableDeclaration","scope":1326,"src":"9242:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"9242:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1316,"initialValue":{"expression":{"baseExpression":{"id":1312,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"9261:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1314,"indexExpression":{"id":1313,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9283:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9261:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9290:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"9261:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9242:53:8"},{"expression":{"arguments":[{"id":1318,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"9327:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1317,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9301:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9301:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"9301:35:8"},{"expression":{"arguments":[{"id":1322,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9368:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1323,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"9375:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1321,"name":"_cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"9342:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9342:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"9342:42:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"8924:242:8","text":" @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n @param subId subscription id\n @dev notably can be called even if there are pending requests, outstanding ones may fail onchain"},"functionSelector":"aa433aff","id":1327,"implemented":true,"kind":"function","modifiers":[{"id":1308,"kind":"modifierInvocation","modifierName":{"id":1307,"name":"onlyOwner","nameLocations":["9226:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"9226:9:8"},"nodeType":"ModifierInvocation","src":"9226:9:8"}],"name":"ownerCancelSubscription","nameLocation":"9178:23:8","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"subId","nameLocation":"9210:5:8","nodeType":"VariableDeclaration","scope":1327,"src":"9202:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"9202:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9201:15:8"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"9236:0:8"},"scope":2299,"src":"9169:220:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1403,"nodeType":"Block","src":"9570:835:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1337,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"9816:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9808:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"9808:7:8","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9808:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9833:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9825:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"9825:7:8","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9825:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9808:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1348,"nodeType":"IfStatement","src":"9804:67:8","trueBody":{"id":1347,"nodeType":"Block","src":"9837:34:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1344,"name":"LinkNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"9852:10:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"RevertStatement","src":"9845:19:8"}]}},{"assignments":[1350],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"externalBalance","nameLocation":"9885:15:8","nodeType":"VariableDeclaration","scope":1403,"src":"9877:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"9877:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1358,"initialValue":{"arguments":[{"arguments":[{"id":1355,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9926:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2299","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2299","typeString":"contract SubscriptionAPI"}],"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9918:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"9918:7:8","typeDescriptions":{}}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9918:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1351,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"9903:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9908:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":303,"src":"9903:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9877:55:8"},{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"internalBalance","nameLocation":"9946:15:8","nodeType":"VariableDeclaration","scope":1403,"src":"9938:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"9938:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1365,"initialValue":{"arguments":[{"id":1363,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"9972:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9964:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"9964:7:8","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9964:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9938:49:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"9997:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1367,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10015:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1375,"nodeType":"IfStatement","src":"9993:119:8","trueBody":{"id":1374,"nodeType":"Block","src":"10032:80:8","statements":[{"errorCall":{"arguments":[{"id":1370,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"10072:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1371,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10089:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10047:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10047:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"RevertStatement","src":"10040:65:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"10121:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1377,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10139:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10121:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1402,"nodeType":"IfStatement","src":"10117:230:8","trueBody":{"id":1401,"nodeType":"Block","src":"10156:191:8","statements":[{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"amount","nameLocation":"10172:6:8","nodeType":"VariableDeclaration","scope":1401,"src":"10164:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"10164:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10181:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1382,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"10199:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10181:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10164:50:8"},{"condition":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10226:26:8","subExpression":{"arguments":[{"id":1387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"10241:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"10245:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1385,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"10227:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10232:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":348,"src":"10227:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10227:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1395,"nodeType":"IfStatement","src":"10222:80:8","trueBody":{"id":1394,"nodeType":"Block","src":"10254:48:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1391,"name":"FailedToTransferLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"10271:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10271:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"RevertStatement","src":"10264:29:8"}]}},{"eventCall":{"arguments":[{"id":1397,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"10329:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"10333:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"FundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"10314:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10314:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"EmitStatement","src":"10309:31:8"}]}}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"9393:121:8","text":" @notice Recover link sent with transfer instead of transferAndCall.\n @param to address to send link to"},"functionSelector":"e72f6e30","id":1404,"implemented":true,"kind":"function","modifiers":[{"id":1333,"kind":"modifierInvocation","modifierName":{"id":1332,"name":"onlyOwner","nameLocations":["9560:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"9560:9:8"},"nodeType":"ModifierInvocation","src":"9560:9:8"}],"name":"recoverFunds","nameLocation":"9526:12:8","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"to","nameLocation":"9547:2:8","nodeType":"VariableDeclaration","scope":1404,"src":"9539:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"9539:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9538:12:8"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"9570:0:8"},"scope":2299,"src":"9517:888:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1469,"nodeType":"Block","src":"10615:565:8","statements":[{"assignments":[1413],"declarations":[{"constant":false,"id":1413,"mutability":"mutable","name":"externalBalance","nameLocation":"10629:15:8","nodeType":"VariableDeclaration","scope":1469,"src":"10621:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"10621:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1419,"initialValue":{"expression":{"arguments":[{"id":1416,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10655:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2299","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2299","typeString":"contract SubscriptionAPI"}],"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:8","typeDescriptions":{}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10661:7:8","memberName":"balance","nodeType":"MemberAccess","src":"10647:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10621:47:8"},{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"internalBalance","nameLocation":"10682:15:8","nodeType":"VariableDeclaration","scope":1469,"src":"10674:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"10674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1426,"initialValue":{"arguments":[{"id":1424,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10708:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10700:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10700:7:8","typeDescriptions":{}}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10674:55:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1427,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"10739:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1428,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"10757:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10739:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1436,"nodeType":"IfStatement","src":"10735:119:8","trueBody":{"id":1435,"nodeType":"Block","src":"10774:80:8","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"10814:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1432,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"10831:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1430,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10789:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"RevertStatement","src":"10782:65:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"10863:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1438,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"10881:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10863:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1468,"nodeType":"IfStatement","src":"10859:263:8","trueBody":{"id":1467,"nodeType":"Block","src":"10898:224:8","statements":[{"assignments":[1441],"declarations":[{"constant":false,"id":1441,"mutability":"mutable","name":"amount","nameLocation":"10914:6:8","nodeType":"VariableDeclaration","scope":1467,"src":"10906:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"10906:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1445,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"10923:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1443,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"10941:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10923:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10906:50:8"},{"assignments":[1447,null],"declarations":[{"constant":false,"id":1447,"mutability":"mutable","name":"sent","nameLocation":"10970:4:8","nodeType":"VariableDeclaration","scope":1467,"src":"10965:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1446,"name":"bool","nodeType":"ElementaryTypeName","src":"10965:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1454,"initialValue":{"arguments":[{"hexValue":"","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11003:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"10980:2:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10983:4:8","memberName":"call","nodeType":"MemberAccess","src":"10980:7:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1450,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"10995:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10980:22:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10980:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10964:42:8"},{"condition":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11018:5:8","subExpression":{"id":1455,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"11019:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"IfStatement","src":"11014:57:8","trueBody":{"id":1460,"nodeType":"Block","src":"11025:46:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1457,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"11042:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"RevertStatement","src":"11035:27:8"}]}},{"eventCall":{"arguments":[{"id":1463,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11104:2:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"11108:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1462,"name":"NativeFundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"11083:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11083:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"EmitStatement","src":"11078:37:8"}]}}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"10409:136:8","text":" @notice Recover native sent with transfer/call/send instead of fundSubscription.\n @param to address to send native to"},"functionSelector":"8402595e","id":1470,"implemented":true,"kind":"function","modifiers":[{"id":1410,"kind":"modifierInvocation","modifierName":{"id":1409,"name":"onlyOwner","nameLocations":["10605:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"10605:9:8"},"nodeType":"ModifierInvocation","src":"10605:9:8"}],"name":"recoverNativeFunds","nameLocation":"10557:18:8","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"to","nameLocation":"10592:2:8","nodeType":"VariableDeclaration","scope":1470,"src":"10576:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"10576:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"10575:20:8"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"10615:0:8"},"scope":2299,"src":"10548:632:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1519,"nodeType":"Block","src":"11410:287:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1481,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"11428:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"11420:7:8","typeDescriptions":{}}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11437:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"11437:7:8","typeDescriptions":{}}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11420:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1492,"nodeType":"IfStatement","src":"11416:67:8","trueBody":{"id":1491,"nodeType":"Block","src":"11449:34:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1488,"name":"LinkNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"11464:10:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11464:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1490,"nodeType":"RevertStatement","src":"11457:19:8"}]}},{"assignments":[1494],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"amount","nameLocation":"11495:6:8","nodeType":"VariableDeclaration","scope":1519,"src":"11488:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1493,"name":"uint96","nodeType":"ElementaryTypeName","src":"11488:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1496,"initialValue":{"id":1495,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"11504:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"11488:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"11556:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11565:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11556:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1497,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"11530:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11530:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"11530:37:8"},{"expression":{"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1503,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"11573:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11573:24:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1506,"nodeType":"ExpressionStatement","src":"11573:24:8"},{"expression":{"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"11603:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1508,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"11621:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11603:24:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1510,"nodeType":"ExpressionStatement","src":"11603:24:8"},{"expression":{"arguments":[{"arguments":[{"id":1514,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"11673:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1515,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"11684:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"id":1512,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"11659:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11664:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":348,"src":"11659:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11659:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1511,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"11633:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11633:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"11633:59:8"}]},"functionSelector":"51cff8d9","id":1520,"implemented":true,"kind":"function","modifiers":[{"id":1475,"kind":"modifierInvocation","modifierName":{"id":1474,"name":"nonReentrant","nameLocations":["11387:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"11387:12:8"},"nodeType":"ModifierInvocation","src":"11387:12:8"},{"id":1477,"kind":"modifierInvocation","modifierName":{"id":1476,"name":"onlyOwner","nameLocations":["11400:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"11400:9:8"},"nodeType":"ModifierInvocation","src":"11400:9:8"}],"name":"withdraw","nameLocation":"11350:8:8","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"recipient","nameLocation":"11367:9:8","nodeType":"VariableDeclaration","scope":1520,"src":"11359:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11358:19:8"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"11410:0:8"},"scope":2299,"src":"11341:356:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1552,"nodeType":"Block","src":"11943:258:8","statements":[{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"amount","nameLocation":"11956:6:8","nodeType":"VariableDeclaration","scope":1552,"src":"11949:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1529,"name":"uint96","nodeType":"ElementaryTypeName","src":"11949:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1532,"initialValue":{"id":1531,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"11965:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"11949:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"12017:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12026:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12017:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1533,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"11991:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11991:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"11991:37:8"},{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"12096:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12119:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12096:24:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1542,"nodeType":"ExpressionStatement","src":"12096:24:8"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"12126:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1544,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"12150:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12126:30:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1546,"nodeType":"ExpressionStatement","src":"12126:30:8"},{"expression":{"arguments":[{"id":1548,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"12178:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1549,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"12189:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1547,"name":"_mustSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"12162:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12162:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1551,"nodeType":"ExpressionStatement","src":"12162:34:8"}]},"functionSelector":"2f622e6b","id":1553,"implemented":true,"kind":"function","modifiers":[{"id":1525,"kind":"modifierInvocation","modifierName":{"id":1524,"name":"nonReentrant","nameLocations":["11920:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"11920:12:8"},"nodeType":"ModifierInvocation","src":"11920:12:8"},{"id":1527,"kind":"modifierInvocation","modifierName":{"id":1526,"name":"onlyOwner","nameLocations":["11933:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"11933:9:8"},"nodeType":"ModifierInvocation","src":"11933:9:8"}],"name":"withdrawNative","nameLocation":"11869:14:8","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"recipient","nameLocation":"11900:9:8","nodeType":"VariableDeclaration","scope":1553,"src":"11884:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"11884:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11883:27:8"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"11943:0:8"},"scope":2299,"src":"11860:341:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[259],"body":{"id":1635,"nodeType":"Block","src":"12320:593:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12330:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12334:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12330:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1569,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"12352:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12344:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"12344:7:8","typeDescriptions":{}}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12344:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12330:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"IfStatement","src":"12326:77:8","trueBody":{"id":1575,"nodeType":"Block","src":"12359:44:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1572,"name":"OnlyCallableFromLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"12374:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"RevertStatement","src":"12367:29:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1577,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"12412:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12417:6:8","memberName":"length","nodeType":"MemberAccess","src":"12412:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3332","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12427:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12412:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1585,"nodeType":"IfStatement","src":"12408:62:8","trueBody":{"id":1584,"nodeType":"Block","src":"12431:39:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1581,"name":"InvalidCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"12446:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12446:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"RevertStatement","src":"12439:24:8"}]}},{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"subId","nameLocation":"12483:5:8","nodeType":"VariableDeclaration","scope":1635,"src":"12475:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"12475:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1595,"initialValue":{"arguments":[{"id":1590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"12502:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12509:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"12509:7:8","typeDescriptions":{}}}],"id":1593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12508:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":1588,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12491:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12495:6:8","memberName":"decode","nodeType":"MemberAccess","src":"12491:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12491:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12475:43:8"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1597,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12550:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1599,"indexExpression":{"id":1598,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"12572:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12550:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12579:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"12550:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1596,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"12524:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12524:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1602,"nodeType":"ExpressionStatement","src":"12524:61:8"},{"assignments":[1604],"declarations":[{"constant":false,"id":1604,"mutability":"mutable","name":"oldBalance","nameLocation":"12704:10:8","nodeType":"VariableDeclaration","scope":1635,"src":"12696:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"12696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1609,"initialValue":{"expression":{"baseExpression":{"id":1605,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"12717:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1607,"indexExpression":{"id":1606,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"12733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12717:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12740:7:8","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"12717:30:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"12696:51:8"},{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1610,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"12753:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1612,"indexExpression":{"id":1611,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"12769:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12753:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12776:7:8","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"12753:30:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12794:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12787:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1614,"name":"uint96","nodeType":"ElementaryTypeName","src":"12787:6:8","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12787:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12753:48:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1619,"nodeType":"ExpressionStatement","src":"12753:48:8"},{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1620,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"12807:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12832:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12825:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1621,"name":"uint96","nodeType":"ElementaryTypeName","src":"12825:6:8","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12825:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"12807:32:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1626,"nodeType":"ExpressionStatement","src":"12807:32:8"},{"eventCall":{"arguments":[{"id":1628,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"12869:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1629,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12876:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12888:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1631,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12901:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12888:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1627,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"12850:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"EmitStatement","src":"12845:63:8"}]},"functionSelector":"a4c0ed36","id":1636,"implemented":true,"kind":"function","modifiers":[{"id":1563,"kind":"modifierInvocation","modifierName":{"id":1562,"name":"nonReentrant","nameLocations":["12307:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"12307:12:8"},"nodeType":"ModifierInvocation","src":"12307:12:8"}],"name":"onTokenTransfer","nameLocation":"12214:15:8","nodeType":"FunctionDefinition","overrides":{"id":1561,"nodeType":"OverrideSpecifier","overrides":[],"src":"12298:8:8"},"parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1636,"src":"12230:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"12230:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"amount","nameLocation":"12260:6:8","nodeType":"VariableDeclaration","scope":1636,"src":"12252:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"12252:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"data","nameLocation":"12283:4:8","nodeType":"VariableDeclaration","scope":1636,"src":"12268:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"12268:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12229:59:8"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"12320:0:8"},"scope":2299,"src":"12205:708:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2582],"body":{"id":1687,"nodeType":"Block","src":"13059:585:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1646,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"13091:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1648,"indexExpression":{"id":1647,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13113:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13091:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13120:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"13091:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1645,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"13065:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"13065:61:8"},{"assignments":[1653],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"oldNativeBalance","nameLocation":"13380:16:8","nodeType":"VariableDeclaration","scope":1687,"src":"13372:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"13372:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1658,"initialValue":{"expression":{"baseExpression":{"id":1654,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"13399:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1656,"indexExpression":{"id":1655,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13415:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13399:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13422:13:8","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"13399:36:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"13372:63:8"},{"expression":{"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1659,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"13441:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1661,"indexExpression":{"id":1660,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13457:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13441:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13464:13:8","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"13441:36:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13488:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13492:5:8","memberName":"value","nodeType":"MemberAccess","src":"13488:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13481:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1663,"name":"uint96","nodeType":"ElementaryTypeName","src":"13481:6:8","typeDescriptions":{}}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13481:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13441:57:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1669,"nodeType":"ExpressionStatement","src":"13441:57:8"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1670,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"13504:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13535:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13539:5:8","memberName":"value","nodeType":"MemberAccess","src":"13535:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13528:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1671,"name":"uint96","nodeType":"ElementaryTypeName","src":"13528:6:8","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13528:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13504:41:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1677,"nodeType":"ExpressionStatement","src":"13504:41:8"},{"eventCall":{"arguments":[{"id":1679,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13585:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1680,"name":"oldNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"13592:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"oldNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"13610:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13629:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13633:5:8","memberName":"value","nodeType":"MemberAccess","src":"13629:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13610:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1678,"name":"SubscriptionFundedWithNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13556:28:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13556:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"EmitStatement","src":"13551:88:8"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"12917:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"95b55cfc","id":1688,"implemented":true,"kind":"function","modifiers":[{"id":1643,"kind":"modifierInvocation","modifierName":{"id":1642,"name":"nonReentrant","nameLocations":["13046:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"13046:12:8"},"nodeType":"ModifierInvocation","src":"13046:12:8"}],"name":"fundSubscriptionWithNative","nameLocation":"12978:26:8","nodeType":"FunctionDefinition","overrides":{"id":1641,"nodeType":"OverrideSpecifier","overrides":[],"src":"13037:8:8"},"parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"subId","nameLocation":"13013:5:8","nodeType":"VariableDeclaration","scope":1688,"src":"13005:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"13005:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13004:15:8"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"13059:0:8"},"scope":2299,"src":"12969:675:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2558],"body":{"id":1736,"nodeType":"Block","src":"13897:299:8","statements":[{"expression":{"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1706,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"13903:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1707,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"13914:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1709,"indexExpression":{"id":1708,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"13936:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13914:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13943:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"13914:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13903:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1712,"nodeType":"ExpressionStatement","src":"13903:45:8"},{"expression":{"arguments":[{"id":1714,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"13980:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"13954:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13954:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"13954:35:8"},{"expression":{"components":[{"expression":{"baseExpression":{"id":1717,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"14010:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1719,"indexExpression":{"id":1718,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"14026:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14010:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14033:7:8","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"14010:30:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":1721,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"14048:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1723,"indexExpression":{"id":1722,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"14064:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14048:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14071:13:8","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"14048:36:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":1725,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"14092:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1727,"indexExpression":{"id":1726,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"14108:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14092:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14115:8:8","memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"14092:31:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1729,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"14131:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1730,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"14147:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1732,"indexExpression":{"id":1731,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"14169:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14147:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14176:9:8","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"14147:38:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":1734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14002:189:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$_t_uint64_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,uint96,uint64,address,address[] storage ref)"}},"functionReturnParameters":1705,"id":1735,"nodeType":"Return","src":"13995:196:8"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"13648:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"dc311dd3","id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"13709:15:8","nodeType":"FunctionDefinition","overrides":{"id":1693,"nodeType":"OverrideSpecifier","overrides":[],"src":"13772:8:8"},"parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"subId","nameLocation":"13738:5:8","nodeType":"VariableDeclaration","scope":1737,"src":"13730:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"13730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13724:23:8"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"balance","nameLocation":"13801:7:8","nodeType":"VariableDeclaration","scope":1737,"src":"13794:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1694,"name":"uint96","nodeType":"ElementaryTypeName","src":"13794:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"nativeBalance","nameLocation":"13817:13:8","nodeType":"VariableDeclaration","scope":1737,"src":"13810:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1696,"name":"uint96","nodeType":"ElementaryTypeName","src":"13810:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"reqCount","nameLocation":"13839:8:8","nodeType":"VariableDeclaration","scope":1737,"src":"13832:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1698,"name":"uint64","nodeType":"ElementaryTypeName","src":"13832:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"subOwner","nameLocation":"13857:8:8","nodeType":"VariableDeclaration","scope":1737,"src":"13849:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"13849:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"consumers","nameLocation":"13884:9:8","nodeType":"VariableDeclaration","scope":1737,"src":"13867:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"13867:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1703,"nodeType":"ArrayTypeName","src":"13867:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13793:101:8"},"scope":2299,"src":"13700:496:8","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2576],"body":{"id":1820,"nodeType":"Block","src":"14390:427:8","statements":[{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"numSubs","nameLocation":"14404:7:8","nodeType":"VariableDeclaration","scope":1820,"src":"14396:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"14396:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1754,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1751,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14414:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14423:6:8","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":932,"src":"14414:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$854_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14414:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14396:35:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1755,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"14441:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1756,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14455:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14441:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1761,"nodeType":"IfStatement","src":"14437:51:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1758,"name":"IndexOutOfRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"14471:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14471:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"RevertStatement","src":"14464:24:8"}},{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"endIndex","nameLocation":"14502:8:8","nodeType":"VariableDeclaration","scope":1820,"src":"14494:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"14513:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1765,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"14526:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14513:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14494:40:8"},{"expression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14540:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14551:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1770,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14551:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"14573:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14585:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14573:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14551:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1777,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14599:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14551:56:8","trueExpression":{"id":1776,"name":"numSubs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14540:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1780,"nodeType":"ExpressionStatement","src":"14540:67:8"},{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"idsLength","nameLocation":"14621:9:8","nodeType":"VariableDeclaration","scope":1820,"src":"14613:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"14613:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1786,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1783,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"14633:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1784,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"14644:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14633:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14613:41:8"},{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"14660:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1791,"name":"idsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"14680:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14666:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"14670:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ArrayTypeName","src":"14670:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14666:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"14660:30:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1794,"nodeType":"ExpressionStatement","src":"14660:30:8"},{"body":{"id":1816,"nodeType":"Block","src":"14742:55:8","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1805,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"14750:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1807,"indexExpression":{"id":1806,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"14754:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14750:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"14773:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1811,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"14779:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14773:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1808,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14761:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14770:2:8","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":953,"src":"14761:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$854_storage_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14761:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14750:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"14750:40:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1799,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"14718:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1800,"name":"idsLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"14724:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14718:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"initializationExpression":{"assignments":[1796],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"idx","nameLocation":"14709:3:8","nodeType":"VariableDeclaration","scope":1817,"src":"14701:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"14701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"hexValue":"30","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14715:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14701:15:8"},"loopExpression":{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"14735:5:8","subExpression":{"id":1802,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"14737:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"14735:5:8"},"nodeType":"ForStatement","src":"14696:101:8"},{"expression":{"id":1818,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"14809:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1748,"id":1819,"nodeType":"Return","src":"14802:10:8"}]},"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"14200:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"aefb212f","id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"14261:24:8","nodeType":"FunctionDefinition","overrides":{"id":1744,"nodeType":"OverrideSpecifier","overrides":[],"src":"14350:8:8"},"parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"startIndex","nameLocation":"14299:10:8","nodeType":"VariableDeclaration","scope":1821,"src":"14291:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"14291:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"maxCount","nameLocation":"14323:8:8","nodeType":"VariableDeclaration","scope":1821,"src":"14315:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"14315:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14285:50:8"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"ids","nameLocation":"14385:3:8","nodeType":"VariableDeclaration","scope":1821,"src":"14368:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"14368:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1746,"nodeType":"ArrayTypeName","src":"14368:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14367:22:8"},"scope":2299,"src":"14252:565:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2541],"body":{"id":1913,"nodeType":"Block","src":"14958:852:8","statements":[{"assignments":[1831],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"currentSubNonce","nameLocation":"15030:15:8","nodeType":"VariableDeclaration","scope":1913,"src":"15023:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1830,"name":"uint64","nodeType":"ElementaryTypeName","src":"15023:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":1833,"initialValue":{"id":1832,"name":"s_currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"15048:17:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"15023:42:8"},{"expression":{"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1834,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15071:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1840,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15121:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15125:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15121:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1843,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15143:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15149:6:8","memberName":"number","nodeType":"MemberAccess","src":"15143:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15158:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15143:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"15133:9:8","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1850,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15170:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionAPI_$2299","typeString":"contract SubscriptionAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionAPI_$2299","typeString":"contract SubscriptionAPI"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15162:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"15162:7:8","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15162:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1852,"name":"currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"15177:15:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":1838,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15104:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15108:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"15104:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15104:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1837,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15094:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:100:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15079:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"15079:7:8","typeDescriptions":{}}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15079:121:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15071:129:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"nodeType":"ExpressionStatement","src":"15071:129:8"},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1858,"name":"s_currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"15255:17:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"currentSubNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"15275:15:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15275:19:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"15255:39:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":1863,"nodeType":"ExpressionStatement","src":"15255:39:8"},{"assignments":[1868],"declarations":[{"constant":false,"id":1868,"mutability":"mutable","name":"consumers","nameLocation":"15354:9:8","nodeType":"VariableDeclaration","scope":1913,"src":"15337:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"15337:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1867,"nodeType":"ArrayTypeName","src":"15337:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1874,"initialValue":{"arguments":[{"hexValue":"30","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15380:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15366:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"15370:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1870,"nodeType":"ArrayTypeName","src":"15370:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15366:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15337:45:8"},{"expression":{"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1875,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"15388:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":1877,"indexExpression":{"id":1876,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15404:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15388:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15454:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15467:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1878,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"15413:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$1080_storage_ptr_$","typeString":"type(struct SubscriptionAPI.Subscription storage pointer)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15427:7:8","15439:13:8","15457:8:8"],"names":["balance","nativeBalance","reqCount"],"nodeType":"FunctionCall","src":"15413:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_memory_ptr","typeString":"struct SubscriptionAPI.Subscription memory"}},"src":"15388:82:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":1884,"nodeType":"ExpressionStatement","src":"15388:82:8"},{"expression":{"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1885,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"15476:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1887,"indexExpression":{"id":1886,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15498:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15476:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15541:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15545:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15541:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15583:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15575:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"15575:7:8","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1895,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"15604:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1888,"name":"SubscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"15507:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SubscriptionConfig_$1088_storage_ptr_$","typeString":"type(struct SubscriptionAPI.SubscriptionConfig storage pointer)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15534:5:8","15559:14:8","15593:9:8"],"names":["owner","requestedOwner","consumers"],"nodeType":"FunctionCall","src":"15507:113:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_memory_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig memory"}},"src":"15476:144:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1898,"nodeType":"ExpressionStatement","src":"15476:144:8"},{"expression":{"arguments":[{"id":1902,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15731:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1899,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15718:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15727:3:8","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":875,"src":"15718:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$854_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15718:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"ExpressionStatement","src":"15718:19:8"},{"eventCall":{"arguments":[{"id":1906,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15769:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15776:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15780:6:8","memberName":"sender","nodeType":"MemberAccess","src":"15776:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1905,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"15749:19:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15749:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"EmitStatement","src":"15744:43:8"},{"expression":{"id":1911,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15800:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1829,"id":1912,"nodeType":"Return","src":"15793:12:8"}]},"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"14821:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"a21a23e4","id":1914,"implemented":true,"kind":"function","modifiers":[{"id":1826,"kind":"modifierInvocation","modifierName":{"id":1825,"name":"nonReentrant","nameLocations":["14921:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"14921:12:8"},"nodeType":"ModifierInvocation","src":"14921:12:8"}],"name":"createSubscription","nameLocation":"14882:18:8","nodeType":"FunctionDefinition","overrides":{"id":1824,"nodeType":"OverrideSpecifier","overrides":[],"src":"14912:8:8"},"parameters":{"id":1823,"nodeType":"ParameterList","parameters":[],"src":"14900:2:8"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"subId","nameLocation":"14951:5:8","nodeType":"VariableDeclaration","scope":1914,"src":"14943:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"14943:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14942:15:8"},"scope":2299,"src":"14873:937:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2535],"body":{"id":1954,"nodeType":"Block","src":"16004:358:8","statements":[{"assignments":[1930],"declarations":[{"constant":false,"id":1930,"mutability":"mutable","name":"subscriptionConfig","nameLocation":"16117:18:8","nodeType":"VariableDeclaration","scope":1954,"src":"16090:45:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"},"typeName":{"id":1929,"nodeType":"UserDefinedTypeName","pathNode":{"id":1928,"name":"SubscriptionConfig","nameLocations":["16090:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"16090:18:8"},"referencedDeclaration":1088,"src":"16090:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig"}},"visibility":"internal"}],"id":1934,"initialValue":{"baseExpression":{"id":1931,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"16138:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1933,"indexExpression":{"id":1932,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"16160:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16138:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16090:76:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1935,"name":"subscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"16176:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig storage pointer"}},"id":1936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16195:14:8","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"16176:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1937,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"16213:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16176:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1953,"nodeType":"IfStatement","src":"16172:186:8","trueBody":{"id":1952,"nodeType":"Block","src":"16223:135:8","statements":[{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1939,"name":"subscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"16231:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage_ptr","typeString":"struct SubscriptionAPI.SubscriptionConfig storage pointer"}},"id":1941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16250:14:8","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"16231:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1942,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"16267:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16231:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1944,"nodeType":"ExpressionStatement","src":"16231:44:8"},{"eventCall":{"arguments":[{"id":1946,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"16323:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1947,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16330:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16334:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16330:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1949,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"16342:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1945,"name":"SubscriptionOwnerTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"16288:34:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16288:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"EmitStatement","src":"16283:68:8"}]}}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"15814:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"dac83d29","id":1955,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1923,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15984:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1924,"kind":"modifierInvocation","modifierName":{"id":1922,"name":"onlySubOwner","nameLocations":["15971:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"15971:12:8"},"nodeType":"ModifierInvocation","src":"15971:19:8"},{"id":1926,"kind":"modifierInvocation","modifierName":{"id":1925,"name":"nonReentrant","nameLocations":["15991:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"15991:12:8"},"nodeType":"ModifierInvocation","src":"15991:12:8"}],"name":"requestSubscriptionOwnerTransfer","nameLocation":"15875:32:8","nodeType":"FunctionDefinition","overrides":{"id":1921,"nodeType":"OverrideSpecifier","overrides":[],"src":"15962:8:8"},"parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"subId","nameLocation":"15921:5:8","nodeType":"VariableDeclaration","scope":1955,"src":"15913:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"15913:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"newOwner","nameLocation":"15940:8:8","nodeType":"VariableDeclaration","scope":1955,"src":"15932:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"15932:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15907:45:8"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"16004:0:8"},"scope":2299,"src":"15866:496:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2527],"body":{"id":2016,"nodeType":"Block","src":"16505:443:8","statements":[{"assignments":[1965],"declarations":[{"constant":false,"id":1965,"mutability":"mutable","name":"oldOwner","nameLocation":"16519:8:8","nodeType":"VariableDeclaration","scope":2016,"src":"16511:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"16511:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1970,"initialValue":{"expression":{"baseExpression":{"id":1966,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"16530:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1968,"indexExpression":{"id":1967,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"16552:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16530:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16559:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"16530:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16511:53:8"},{"expression":{"arguments":[{"id":1972,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"16596:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1971,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"16570:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16570:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"ExpressionStatement","src":"16570:35:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1975,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"16615:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1977,"indexExpression":{"id":1976,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"16637:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16615:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16644:14:8","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"16615:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16662:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16666:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16662:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16615:57:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"IfStatement","src":"16611:150:8","trueBody":{"id":1989,"nodeType":"Block","src":"16674:87:8","statements":[{"errorCall":{"arguments":[{"expression":{"baseExpression":{"id":1983,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"16710:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1985,"indexExpression":{"id":1984,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"16732:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16710:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16739:14:8","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"16710:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1982,"name":"MustBeRequestedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"16689:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"RevertStatement","src":"16682:72:8"}]}},{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1991,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"16766:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":1993,"indexExpression":{"id":1992,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"16788:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16766:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":1994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16795:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"16766:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16803:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16803:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16766:47:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1998,"nodeType":"ExpressionStatement","src":"16766:47:8"},{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1999,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"16819:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2001,"indexExpression":{"id":2000,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"16841:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16819:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16848:14:8","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":1084,"src":"16819:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16865:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"16865:7:8","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16865:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16819:56:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2008,"nodeType":"ExpressionStatement","src":"16819:56:8"},{"eventCall":{"arguments":[{"id":2010,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"16915:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2011,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"16922:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2012,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16932:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16936:6:8","memberName":"sender","nodeType":"MemberAccess","src":"16932:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2009,"name":"SubscriptionOwnerTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"16886:28:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16886:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"EmitStatement","src":"16881:62:8"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"16366:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"b2a7cac5","id":2017,"implemented":true,"kind":"function","modifiers":[{"id":1962,"kind":"modifierInvocation","modifierName":{"id":1961,"name":"nonReentrant","nameLocations":["16492:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"16492:12:8"},"nodeType":"ModifierInvocation","src":"16492:12:8"}],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"16427:31:8","nodeType":"FunctionDefinition","overrides":{"id":1960,"nodeType":"OverrideSpecifier","overrides":[],"src":"16483:8:8"},"parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"subId","nameLocation":"16467:5:8","nodeType":"VariableDeclaration","scope":2017,"src":"16459:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"16459:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16458:15:8"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"16505:0:8"},"scope":2299,"src":"16418:530:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2505],"body":{"id":2081,"nodeType":"Block","src":"17109:807:8","statements":[{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"consumerConfig","nameLocation":"17138:14:8","nodeType":"VariableDeclaration","scope":2081,"src":"17115:37:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"},"typeName":{"id":2032,"nodeType":"UserDefinedTypeName","pathNode":{"id":2031,"name":"ConsumerConfig","nameLocations":["17115:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1095,"src":"17115:14:8"},"referencedDeclaration":1095,"src":"17115:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig"}},"visibility":"internal"}],"id":2039,"initialValue":{"baseExpression":{"baseExpression":{"id":2034,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"17155:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2036,"indexExpression":{"id":2035,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"17167:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17155:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2038,"indexExpression":{"id":2037,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"17177:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17155:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17115:68:8"},{"condition":{"expression":{"id":2040,"name":"consumerConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"17193:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig storage pointer"}},"id":2041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17208:6:8","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"17193:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2044,"nodeType":"IfStatement","src":"17189:165:8","trueBody":{"id":2043,"nodeType":"Block","src":"17216:138:8","statements":[{"functionReturnParameters":2030,"id":2042,"nodeType":"Return","src":"17341:7:8"}]}},{"assignments":[2049],"declarations":[{"constant":false,"id":2049,"mutability":"mutable","name":"consumers","nameLocation":"17430:9:8","nodeType":"VariableDeclaration","scope":2081,"src":"17412:27:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"17412:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2048,"nodeType":"ArrayTypeName","src":"17412:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2054,"initialValue":{"expression":{"baseExpression":{"id":2050,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"17442:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2052,"indexExpression":{"id":2051,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"17464:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17442:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17471:9:8","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"17442:38:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17412:68:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2055,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"17490:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17500:6:8","memberName":"length","nodeType":"MemberAccess","src":"17490:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2057,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"17510:13:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"17490:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"17486:79:8","trueBody":{"id":2062,"nodeType":"Block","src":"17525:40:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2059,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"17540:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17540:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"RevertStatement","src":"17533:25:8"}]}},{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2064,"name":"consumerConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"17799:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage_ptr","typeString":"struct SubscriptionAPI.ConsumerConfig storage pointer"}},"id":2066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17814:6:8","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"17799:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17823:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"17799:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"ExpressionStatement","src":"17799:28:8"},{"expression":{"arguments":[{"id":2073,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"17848:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2070,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"17833:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17843:4:8","memberName":"push","nodeType":"MemberAccess","src":"17833:14:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17833:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2075,"nodeType":"ExpressionStatement","src":"17833:24:8"},{"eventCall":{"arguments":[{"id":2077,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"17895:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2078,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"17902:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2076,"name":"SubscriptionConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"17869:25:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17869:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2080,"nodeType":"EmitStatement","src":"17864:47:8"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"16952:49:8","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"bec4c08c","id":2082,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2026,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"17089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2027,"kind":"modifierInvocation","modifierName":{"id":2025,"name":"onlySubOwner","nameLocations":["17076:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"17076:12:8"},"nodeType":"ModifierInvocation","src":"17076:19:8"},{"id":2029,"kind":"modifierInvocation","modifierName":{"id":2028,"name":"nonReentrant","nameLocations":["17096:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"17096:12:8"},"nodeType":"ModifierInvocation","src":"17096:12:8"}],"name":"addConsumer","nameLocation":"17013:11:8","nodeType":"FunctionDefinition","overrides":{"id":2024,"nodeType":"OverrideSpecifier","overrides":[],"src":"17067:8:8"},"parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"subId","nameLocation":"17033:5:8","nodeType":"VariableDeclaration","scope":2082,"src":"17025:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"17025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"consumer","nameLocation":"17048:8:8","nodeType":"VariableDeclaration","scope":2082,"src":"17040:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"17040:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17024:33:8"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"17109:0:8"},"scope":2299,"src":"17004:912:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2179,"nodeType":"Block","src":"18020:697:8","statements":[{"assignments":[2095],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"consumers","nameLocation":"18044:9:8","nodeType":"VariableDeclaration","scope":2179,"src":"18026:27:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2094,"nodeType":"ArrayTypeName","src":"18026:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2100,"initialValue":{"expression":{"baseExpression":{"id":2096,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"18056:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2098,"indexExpression":{"id":2097,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18078:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18056:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18085:9:8","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"18056:38:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18026:68:8"},{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"18100:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2102,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"18110:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2104,"indexExpression":{"id":2103,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18126:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18110:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":2105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18133:7:8","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"18110:30:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18100:40:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2107,"nodeType":"ExpressionStatement","src":"18100:40:8"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"18146:13:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2109,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"18162:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2111,"indexExpression":{"id":2110,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18178:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18162:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":2112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18185:13:8","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"18162:36:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18146:52:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2114,"nodeType":"ExpressionStatement","src":"18146:52:8"},{"assignments":[2116],"declarations":[{"constant":false,"id":2116,"mutability":"mutable","name":"consumersLength","nameLocation":"18288:15:8","nodeType":"VariableDeclaration","scope":2179,"src":"18280:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"18280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2119,"initialValue":{"expression":{"id":2117,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"18306:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18316:6:8","memberName":"length","nodeType":"MemberAccess","src":"18306:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18280:42:8"},{"body":{"id":2139,"nodeType":"Block","src":"18374:54:8","statements":[{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18382:39:8","subExpression":{"baseExpression":{"baseExpression":{"id":2130,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"18389:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2134,"indexExpression":{"baseExpression":{"id":2131,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"18401:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":2133,"indexExpression":{"id":2132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"18411:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18401:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18389:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2136,"indexExpression":{"id":2135,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18415:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18389:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2138,"nodeType":"ExpressionStatement","src":"18382:39:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"18348:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2125,"name":"consumersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"18352:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18348:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"initializationExpression":{"assignments":[2121],"declarations":[{"constant":false,"id":2121,"mutability":"mutable","name":"i","nameLocation":"18341:1:8","nodeType":"VariableDeclaration","scope":2140,"src":"18333:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"18333:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2123,"initialValue":{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18333:13:8"},"loopExpression":{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"18369:3:8","subExpression":{"id":2127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"18371:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"18369:3:8"},"nodeType":"ForStatement","src":"18328:100:8"},{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18433:35:8","subExpression":{"baseExpression":{"id":2141,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"18440:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2143,"indexExpression":{"id":2142,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18462:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18440:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2145,"nodeType":"ExpressionStatement","src":"18433:35:8"},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"18474:29:8","subExpression":{"baseExpression":{"id":2146,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"18481:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":2148,"indexExpression":{"id":2147,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18497:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18481:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"ExpressionStatement","src":"18474:29:8"},{"expression":{"arguments":[{"id":2154,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"18525:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2151,"name":"s_subIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"18509:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$854_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":2153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18518:6:8","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":896,"src":"18509:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$854_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$854_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18509:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2156,"nodeType":"ExpressionStatement","src":"18509:22:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"18541:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18552:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18541:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2165,"nodeType":"IfStatement","src":"18537:58:8","trueBody":{"id":2164,"nodeType":"Block","src":"18555:40:8","statements":[{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2160,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"18563:14:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2161,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"18581:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18563:25:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2163,"nodeType":"ExpressionStatement","src":"18563:25:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"18604:13:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18621:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18604:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"18600:76:8","trueBody":{"id":2173,"nodeType":"Block","src":"18624:52:8","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2169,"name":"s_totalNativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"18632:20:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2170,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"18656:13:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18632:37:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2172,"nodeType":"ExpressionStatement","src":"18632:37:8"}]}},{"expression":{"components":[{"id":2175,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"18689:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2176,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"18698:13:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"id":2177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18688:24:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"functionReturnParameters":2090,"id":2178,"nodeType":"Return","src":"18681:31:8"}]},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteSubscription","nameLocation":"17929:19:8","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"subId","nameLocation":"17957:5:8","nodeType":"VariableDeclaration","scope":2180,"src":"17949:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"17949:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17948:15:8"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"balance","nameLocation":"17989:7:8","nodeType":"VariableDeclaration","scope":2180,"src":"17982:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2086,"name":"uint96","nodeType":"ElementaryTypeName","src":"17982:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"nativeBalance","nameLocation":"18005:13:8","nodeType":"VariableDeclaration","scope":2180,"src":"17998:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2088,"name":"uint96","nodeType":"ElementaryTypeName","src":"17998:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"17981:38:8"},"scope":2299,"src":"17920:797:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2236,"nodeType":"Block","src":"18792:449:8","statements":[{"assignments":[2188,2190],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"balance","nameLocation":"18806:7:8","nodeType":"VariableDeclaration","scope":2236,"src":"18799:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2187,"name":"uint96","nodeType":"ElementaryTypeName","src":"18799:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"nativeBalance","nameLocation":"18822:13:8","nodeType":"VariableDeclaration","scope":2236,"src":"18815:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2189,"name":"uint96","nodeType":"ElementaryTypeName","src":"18815:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2194,"initialValue":{"arguments":[{"id":2192,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"18859:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2191,"name":"_deleteSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"18839:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint96_$_t_uint96_$","typeString":"function (uint256) returns (uint96,uint96)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18839:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"nodeType":"VariableDeclarationStatement","src":"18798:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2197,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"18957:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18949:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"18949:7:8","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18949:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18974:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18966:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"18966:7:8","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18966:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18949:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"18980:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18991:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18980:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18949:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"nodeType":"IfStatement","src":"18945:126:8","trueBody":{"id":2219,"nodeType":"Block","src":"18994:77:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2211,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"19042:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2214,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"19054:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19046:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"19046:7:8","typeDescriptions":{}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19046:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2209,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"19028:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$371","typeString":"contract LinkTokenInterface"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19033:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":348,"src":"19028:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19028:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2208,"name":"_requireSufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"19002:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19002:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2218,"nodeType":"ExpressionStatement","src":"19002:62:8"}]}},{"expression":{"arguments":[{"id":2222,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"19143:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2225,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"19155:13:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19147:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"19147:7:8","typeDescriptions":{}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19147:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2221,"name":"_mustSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"19127:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19127:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"19127:43:8"},{"eventCall":{"arguments":[{"id":2230,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"19202:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"19209:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"19213:7:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2233,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"19222:13:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2229,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"19181:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19181:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"EmitStatement","src":"19176:60:8"}]},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_cancelSubscriptionHelper","nameLocation":"18730:25:8","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"subId","nameLocation":"18764:5:8","nodeType":"VariableDeclaration","scope":2237,"src":"18756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"18756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"to","nameLocation":"18779:2:8","nodeType":"VariableDeclaration","scope":2237,"src":"18771:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"18771:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18755:27:8"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"18792:0:8"},"scope":2299,"src":"18721:520:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"19282:38:8","statements":[{"expression":{"arguments":[{"id":2242,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"19302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2241,"name":"_onlySubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"19288:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19288:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2244,"nodeType":"ExpressionStatement","src":"19288:20:8"},{"id":2245,"nodeType":"PlaceholderStatement","src":"19314:1:8"}]},"id":2247,"name":"onlySubOwner","nameLocation":"19254:12:8","nodeType":"ModifierDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"subId","nameLocation":"19275:5:8","nodeType":"VariableDeclaration","scope":2247,"src":"19267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"19267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19266:15:8"},"src":"19245:75:8","virtual":false,"visibility":"internal"},{"body":{"id":2273,"nodeType":"Block","src":"19376:184:8","statements":[{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"subOwner","nameLocation":"19390:8:8","nodeType":"VariableDeclaration","scope":2273,"src":"19382:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"19382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2258,"initialValue":{"expression":{"baseExpression":{"id":2254,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"19401:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":2256,"indexExpression":{"id":2255,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"19423:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19401:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":2257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19430:5:8","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"19401:34:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19382:53:8"},{"expression":{"arguments":[{"id":2260,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"19467:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2259,"name":"_requireValidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"19441:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19441:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"19441:35:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19486:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19490:6:8","memberName":"sender","nodeType":"MemberAccess","src":"19486:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2265,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"19500:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19486:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2272,"nodeType":"IfStatement","src":"19482:74:8","trueBody":{"id":2271,"nodeType":"Block","src":"19510:46:8","statements":[{"errorCall":{"arguments":[{"id":2268,"name":"subOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"19540:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2267,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"19525:14:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19525:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"RevertStatement","src":"19518:31:8"}]}}]},"id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"_onlySubOwner","nameLocation":"19333:13:8","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"subId","nameLocation":"19355:5:8","nodeType":"VariableDeclaration","scope":2274,"src":"19347:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"19347:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19346:15:8"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[],"src":"19376:0:8"},"scope":2299,"src":"19324:236:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2297,"nodeType":"Block","src":"19626:117:8","statements":[{"assignments":[2282,null],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"success","nameLocation":"19638:7:8","nodeType":"VariableDeclaration","scope":2297,"src":"19633:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2281,"name":"bool","nodeType":"ElementaryTypeName","src":"19633:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2289,"initialValue":{"arguments":[{"hexValue":"","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19674:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"19651:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19654:4:8","memberName":"call","nodeType":"MemberAccess","src":"19651:7:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2285,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"19666:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"19651:22:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19651:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19632:45:8"},{"condition":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19687:8:8","subExpression":{"id":2290,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"19688:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2296,"nodeType":"IfStatement","src":"19683:56:8","trueBody":{"id":2295,"nodeType":"Block","src":"19697:42:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2292,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"19712:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19712:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"RevertStatement","src":"19705:27:8"}]}}]},"id":2298,"implemented":true,"kind":"function","modifiers":[],"name":"_mustSendNative","nameLocation":"19573:15:8","nodeType":"FunctionDefinition","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"to","nameLocation":"19597:2:8","nodeType":"VariableDeclaration","scope":2298,"src":"19589:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2275,"name":"address","nodeType":"ElementaryTypeName","src":"19589:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2278,"mutability":"mutable","name":"amount","nameLocation":"19609:6:8","nodeType":"VariableDeclaration","scope":2298,"src":"19601:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"19601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19588:28:8"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[],"src":"19626:0:8"},"scope":2299,"src":"19564:179:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2300,"src":"573:19172:8","usedErrors":[1021,1023,1029,1031,1033,1035,1039,1041,1045,1051,1065,1067,1069,1071,1073,1209]}],"src":"32:19714:8"},"id":8},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","exportedSymbols":{"ConfirmedOwner":[39],"IVRFCoordinatorV2Plus":[2480],"IVRFMigratableConsumerV2Plus":[2494],"VRFConsumerBaseV2Plus":[2462]},"id":2463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2301,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"./interfaces/IVRFCoordinatorV2Plus.sol","id":2303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2463,"sourceUnit":2481,"src":"57:77:9","symbolAliases":[{"foreign":{"id":2302,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"65:21:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","file":"./interfaces/IVRFMigratableConsumerV2Plus.sol","id":2305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2463,"sourceUnit":2495,"src":"135:91:9","symbolAliases":[{"foreign":{"id":2304,"name":"IVRFMigratableConsumerV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"143:28:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../../shared/access/ConfirmedOwner.sol","id":2307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2463,"sourceUnit":40,"src":"227:70:9","symbolAliases":[{"foreign":{"id":2306,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"235:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2309,"name":"IVRFMigratableConsumerV2Plus","nameLocations":["5712:28:9"],"nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"5712:28:9"},"id":2310,"nodeType":"InheritanceSpecifier","src":"5712:28:9"},{"baseName":{"id":2311,"name":"ConfirmedOwner","nameLocations":["5742:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"5742:14:9"},"id":2312,"nodeType":"InheritanceSpecifier","src":"5742:14:9"}],"canonicalName":"VRFConsumerBaseV2Plus","contractDependencies":[],"contractKind":"contract","documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"299:5369:9","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\n @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\n @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create a subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords, extraArgs),\n @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\n @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2462,"linearizedBaseContracts":[2462,39,202,276,2494],"name":"VRFConsumerBaseV2Plus","nameLocation":"5687:21:9","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":2318,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5767:25:9","nodeType":"ErrorDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"have","nameLocation":"5801:4:9","nodeType":"VariableDeclaration","scope":2318,"src":"5793:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"want","nameLocation":"5815:4:9","nodeType":"VariableDeclaration","scope":2318,"src":"5807:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"5807:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5792:28:9"},"src":"5761:60:9"},{"errorSelector":"061db9c1","id":2326,"name":"OnlyOwnerOrCoordinator","nameLocation":"5830:22:9","nodeType":"ErrorDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"have","nameLocation":"5861:4:9","nodeType":"VariableDeclaration","scope":2326,"src":"5853:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"5853:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"owner","nameLocation":"5875:5:9","nodeType":"VariableDeclaration","scope":2326,"src":"5867:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"coordinator","nameLocation":"5890:11:9","nodeType":"VariableDeclaration","scope":2326,"src":"5882:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5852:50:9"},"src":"5824:79:9"},{"errorSelector":"d92e233d","id":2328,"name":"ZeroAddress","nameLocation":"5912:11:9","nodeType":"ErrorDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"5923:2:9"},"src":"5906:20:9"},{"constant":false,"functionSelector":"9eccacf6","id":2331,"mutability":"mutable","name":"s_vrfCoordinator","nameLocation":"6106:16:9","nodeType":"VariableDeclaration","scope":2462,"src":"6077:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"},"typeName":{"id":2330,"nodeType":"UserDefinedTypeName","pathNode":{"id":2329,"name":"IVRFCoordinatorV2Plus","nameLocations":["6077:21:9"],"nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"6077:21:9"},"referencedDeclaration":2480,"src":"6077:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"visibility":"public"},{"body":{"id":2358,"nodeType":"Block","src":"6266:143:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"6276:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:9","typeDescriptions":{}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6276:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2351,"nodeType":"IfStatement","src":"6272:70:9","trueBody":{"id":2350,"nodeType":"Block","src":"6307:35:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2347,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"6322:11:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"RevertStatement","src":"6315:20:9"}]}},{"expression":{"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2352,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"6347:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2354,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"6388:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2353,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"6366:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2480_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"6347:57:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2357,"nodeType":"ExpressionStatement","src":"6347:57:9"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"6127:72:9","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2359,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6254:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6254:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2339,"kind":"baseConstructorSpecifier","modifierName":{"id":2336,"name":"ConfirmedOwner","nameLocations":["6239:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":39,"src":"6239:14:9"},"nodeType":"ModifierInvocation","src":"6239:26:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"6222:15:9","nodeType":"VariableDeclaration","scope":2359,"src":"6214:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"6214:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6213:25:9"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[],"src":"6266:0:9"},"scope":2462,"src":"6202:207:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"6413:690:9","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2368,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7207:18:9","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"requestId","nameLocation":"7234:9:9","nodeType":"VariableDeclaration","scope":2368,"src":"7226:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"7226:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"randomWords","nameLocation":"7264:11:9","nodeType":"VariableDeclaration","scope":2368,"src":"7245:30:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ArrayTypeName","src":"7245:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7225:51:9"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"7293:0:9"},"scope":2462,"src":"7198:96:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"7580:189:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2376,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7590:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7594:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7590:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2380,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"7612:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7604:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:9","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7604:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7590:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2393,"nodeType":"IfStatement","src":"7586:131:9","trueBody":{"id":2392,"nodeType":"Block","src":"7631:86:9","statements":[{"errorCall":{"arguments":[{"expression":{"id":2384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7672:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7676:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7672:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2388,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"7692:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2386,"name":"address","nodeType":"ElementaryTypeName","src":"7684:7:9","typeDescriptions":{}}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7684:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2383,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"7646:25:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2391,"nodeType":"RevertStatement","src":"7639:71:9"}]}},{"expression":{"arguments":[{"id":2395,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"7741:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2396,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"7752:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"id":2394,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7722:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$","typeString":"function (uint256,uint256[] calldata)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7722:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2398,"nodeType":"ExpressionStatement","src":"7722:42:9"}]},"functionSelector":"1fe543e3","id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"7498:21:9","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"requestId","nameLocation":"7528:9:9","nodeType":"VariableDeclaration","scope":2400,"src":"7520:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"7520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"randomWords","nameLocation":"7558:11:9","nodeType":"VariableDeclaration","scope":2400,"src":"7539:30:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"nodeType":"ArrayTypeName","src":"7539:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7519:51:9"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[],"src":"7580:0:9"},"scope":2462,"src":"7489:280:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2493],"body":{"id":2430,"nodeType":"Block","src":"7921:186:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"7931:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7958:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7950:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"7950:7:9","typeDescriptions":{}}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7950:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7931:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"7927:70:9","trueBody":{"id":2418,"nodeType":"Block","src":"7962:35:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2415,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"7977:11:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7977:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"RevertStatement","src":"7970:20:9"}]}},{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2420,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"8002:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2422,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"8043:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2421,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"8021:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVRFCoordinatorV2Plus_$2480_$","typeString":"type(contract IVRFCoordinatorV2Plus)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"src":"8002:57:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}},"id":2425,"nodeType":"ExpressionStatement","src":"8002:57:9"},{"eventCall":{"arguments":[{"id":2427,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"8086:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2426,"name":"CoordinatorSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"8071:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8071:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2429,"nodeType":"EmitStatement","src":"8066:36:9"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"7773:55:9","text":" @inheritdoc IVRFMigratableConsumerV2Plus"},"functionSelector":"8ea98117","id":2431,"implemented":true,"kind":"function","modifiers":[{"id":2407,"kind":"modifierInvocation","modifierName":{"id":2406,"name":"onlyOwnerOrCoordinator","nameLocations":["7898:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":2461,"src":"7898:22:9"},"nodeType":"ModifierInvocation","src":"7898:22:9"}],"name":"setCoordinator","nameLocation":"7840:14:9","nodeType":"FunctionDefinition","overrides":{"id":2405,"nodeType":"OverrideSpecifier","overrides":[],"src":"7889:8:9"},"parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"7863:15:9","nodeType":"VariableDeclaration","scope":2431,"src":"7855:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"7855:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7854:25:9"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[],"src":"7921:0:9"},"scope":2462,"src":"7831:276:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2460,"nodeType":"Block","src":"8145:179:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8155:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8155:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2435,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"8169:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8169:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8155:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8180:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8184:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8180:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2442,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"8202:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:9","typeDescriptions":{}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8180:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8155:64:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2458,"nodeType":"IfStatement","src":"8151:162:9","trueBody":{"id":2457,"nodeType":"Block","src":"8221:92:9","statements":[{"errorCall":{"arguments":[{"expression":{"id":2447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8259:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8263:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8259:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"8271:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8271:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2453,"name":"s_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"8288:16:9","typeDescriptions":{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVRFCoordinatorV2Plus_$2480","typeString":"contract IVRFCoordinatorV2Plus"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8280:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"8280:7:9","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2446,"name":"OnlyOwnerOrCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"8236:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address) pure"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"RevertStatement","src":"8229:77:9"}]}},{"id":2459,"nodeType":"PlaceholderStatement","src":"8318:1:9"}]},"id":2461,"name":"onlyOwnerOrCoordinator","nameLocation":"8120:22:9","nodeType":"ModifierDefinition","parameters":{"id":2432,"nodeType":"ParameterList","parameters":[],"src":"8142:2:9"},"src":"8111:213:9","virtual":false,"visibility":"internal"}],"scope":2463,"src":"5669:2657:9","usedErrors":[2318,2326,2328]}],"src":"32:8295:9"},"id":9},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2480],"IVRFSubscriptionV2Plus":[2583],"VRFV2PlusClient":[2625]},"id":2481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2464,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../libraries/VRFV2PlusClient.sol","id":2466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2481,"sourceUnit":2626,"src":"57:65:10","symbolAliases":[{"foreign":{"id":2465,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"65:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","file":"./IVRFSubscriptionV2Plus.sol","id":2468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2481,"sourceUnit":2584,"src":"123:68:10","symbolAliases":[{"foreign":{"id":2467,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"131:22:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2469,"name":"IVRFSubscriptionV2Plus","nameLocations":["398:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2583,"src":"398:22:10"},"id":2470,"nodeType":"InheritanceSpecifier","src":"398:22:10"}],"canonicalName":"IVRFCoordinatorV2Plus","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2480,"linearizedBaseContracts":[2480,2583],"name":"IVRFCoordinatorV2Plus","nameLocation":"373:21:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"425:1588:10","text":" @notice Request a set of random words.\n @param req - a struct containing following fields for randomness request:\n keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n requestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n extraArgs - abi-encoded extra args\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"9b1c385e","id":2479,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2025:18:10","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"req","nameLocation":"2088:3:10","nodeType":"VariableDeclaration","scope":2479,"src":"2044:47:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["2044:15:10","2060:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":2609,"src":"2044:34:10"},"referencedDeclaration":2609,"src":"2044:34:10","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"2043:49:10"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:10","nodeType":"VariableDeclaration","scope":2479,"src":"2111:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:19:10"},"scope":2480,"src":"2016:114:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2481,"src":"363:1769:10","usedErrors":[]}],"src":"32:2101:10"},"id":10},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol","exportedSymbols":{"IVRFMigratableConsumerV2Plus":[2494]},"id":2495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2482,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFMigratableConsumerV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"57:211:11","text":"@notice The IVRFMigratableConsumerV2Plus interface defines the\n @notice method required to be implemented by all V2Plus consumers.\n @dev This interface is designed to be used in VRFConsumerBaseV2Plus."},"fullyImplemented":false,"id":2494,"linearizedBaseContracts":[2494],"name":"IVRFMigratableConsumerV2Plus","nameLocation":"278:28:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be6","id":2487,"name":"CoordinatorSet","nameLocation":"317:14:11","nodeType":"EventDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"indexed":false,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"340:14:11","nodeType":"VariableDeclaration","scope":2487,"src":"332:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:24:11"},"src":"311:45:11"},{"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"360:131:11","text":"@notice Sets the VRF Coordinator address\n @notice This method should only be callable by the coordinator or contract owner"},"functionSelector":"8ea98117","id":2493,"implemented":false,"kind":"function","modifiers":[],"name":"setCoordinator","nameLocation":"503:14:11","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"526:14:11","nodeType":"VariableDeclaration","scope":2493,"src":"518:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2489,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:24:11"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[],"src":"550:0:11"},"scope":2494,"src":"494:57:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2495,"src":"268:285:11","usedErrors":[]}],"src":"32:522:11"},"id":11},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol","exportedSymbols":{"IVRFSubscriptionV2Plus":[2583]},"id":2584,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2496,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IVRFSubscriptionV2Plus","contractDependencies":[],"contractKind":"interface","documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"57:141:12","text":"@notice The IVRFSubscriptionV2Plus interface defines the subscription\n @notice related methods implemented by the V2Plus coordinator."},"fullyImplemented":false,"id":2583,"linearizedBaseContracts":[2583],"name":"IVRFSubscriptionV2Plus","nameLocation":"208:22:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"235:170:12","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"bec4c08c","id":2505,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"417:11:12","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"subId","nameLocation":"437:5:12","nodeType":"VariableDeclaration","scope":2505,"src":"429:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"consumer","nameLocation":"452:8:12","nodeType":"VariableDeclaration","scope":2505,"src":"444:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:33:12"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"470:0:12"},"scope":2583,"src":"408:63:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"475:172:12","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"cb631797","id":2513,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"659:14:12","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"subId","nameLocation":"682:5:12","nodeType":"VariableDeclaration","scope":2513,"src":"674:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"consumer","nameLocation":"697:8:12","nodeType":"VariableDeclaration","scope":2513,"src":"689:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:33:12"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[],"src":"715:0:12"},"scope":2583,"src":"650:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"720:140:12","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"0ae09540","id":2521,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"872:18:12","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"subId","nameLocation":"899:5:12","nodeType":"VariableDeclaration","scope":2521,"src":"891:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"to","nameLocation":"914:2:12","nodeType":"VariableDeclaration","scope":2521,"src":"906:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"906:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:27:12"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"926:0:12"},"scope":2583,"src":"863:64:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"931:211:12","text":" @notice Accept subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"b2a7cac5","id":2527,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"1154:31:12","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"subId","nameLocation":"1194:5:12","nodeType":"VariableDeclaration","scope":2527,"src":"1186:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:15:12"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"1209:0:12"},"scope":2583,"src":"1145:65:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"1214:164:12","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"dac83d29","id":2535,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"1390:32:12","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"subId","nameLocation":"1431:5:12","nodeType":"VariableDeclaration","scope":2535,"src":"1423:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"mutability":"mutable","name":"newOwner","nameLocation":"1446:8:12","nodeType":"VariableDeclaration","scope":2535,"src":"1438:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1422:33:12"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[],"src":"1464:0:12"},"scope":2583,"src":"1381:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"1469:613:12","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription with LINK, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));\n @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\n @dev  to send Native with the call, for example:\n @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);"},"functionSelector":"a21a23e4","id":2541,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2094:18:12","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[],"src":"2112:2:12"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"subId","nameLocation":"2141:5:12","nodeType":"VariableDeclaration","scope":2541,"src":"2133:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:15:12"},"scope":2583,"src":"2085:63:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"2152:422:12","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return nativeBalance - native balance of the subscription in wei.\n @return reqCount - Requests count of subscription.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"dc311dd3","id":2558,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"2586:15:12","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"subId","nameLocation":"2615:5:12","nodeType":"VariableDeclaration","scope":2558,"src":"2607:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:23:12"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"balance","nameLocation":"2667:7:12","nodeType":"VariableDeclaration","scope":2558,"src":"2660:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2546,"name":"uint96","nodeType":"ElementaryTypeName","src":"2660:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"nativeBalance","nameLocation":"2683:13:12","nodeType":"VariableDeclaration","scope":2558,"src":"2676:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2548,"name":"uint96","nodeType":"ElementaryTypeName","src":"2676:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"reqCount","nameLocation":"2705:8:12","nodeType":"VariableDeclaration","scope":2558,"src":"2698:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2550,"name":"uint64","nodeType":"ElementaryTypeName","src":"2698:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"owner","nameLocation":"2723:5:12","nodeType":"VariableDeclaration","scope":2558,"src":"2715:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"consumers","nameLocation":"2747:9:12","nodeType":"VariableDeclaration","scope":2558,"src":"2730:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"2730:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2555,"nodeType":"ArrayTypeName","src":"2730:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2659:98:12"},"scope":2583,"src":"2577:181:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41af6c87","id":2565,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"3063:20:12","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"subId","nameLocation":"3092:5:12","nodeType":"VariableDeclaration","scope":2565,"src":"3084:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:15:12"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"3122:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2562,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3121:6:12"},"scope":2583,"src":"3054:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"3132:427:12","text":" @notice Paginate through all active VRF subscriptions.\n @param startIndex index of the subscription to start from\n @param maxCount maximum number of subscriptions to return, 0 to return all\n @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\n @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state"},"functionSelector":"aefb212f","id":2576,"implemented":false,"kind":"function","modifiers":[],"name":"getActiveSubscriptionIds","nameLocation":"3571:24:12","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"startIndex","nameLocation":"3604:10:12","nodeType":"VariableDeclaration","scope":2576,"src":"3596:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"maxCount","nameLocation":"3624:8:12","nodeType":"VariableDeclaration","scope":2576,"src":"3616:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:38:12"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"3657:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ArrayTypeName","src":"3657:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3656:18:12"},"scope":2583,"src":"3562:113:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"3679:175:12","text":" @notice Fund a subscription with native.\n @param subId - ID of the subscription\n @notice This method expects msg.value to be greater than or equal to 0."},"functionSelector":"95b55cfc","id":2582,"implemented":false,"kind":"function","modifiers":[],"name":"fundSubscriptionWithNative","nameLocation":"3866:26:12","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"subId","nameLocation":"3901:5:12","nodeType":"VariableDeclaration","scope":2582,"src":"3893:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:15:12"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[],"src":"3924:0:12"},"scope":2583,"src":"3857:68:12","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2584,"src":"198:3729:12","usedErrors":[]}],"src":"32:3896:12"},"id":12},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","exportedSymbols":{"VRFV2PlusClient":[2625]},"id":2626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2585,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFV2PlusClient","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2625,"linearizedBaseContracts":[2625],"name":"VRFV2PlusClient","nameLocation":"90:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f7514ab4","id":2593,"mutability":"constant","name":"EXTRA_ARGS_V1_TAG","nameLocation":"184:17:13","nodeType":"VariableDeclaration","scope":2625,"src":"161:79:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2586,"name":"bytes4","nodeType":"ElementaryTypeName","src":"161:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"565246204578747261417267735631","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"221:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""},"value":"VRF ExtraArgsV1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa","typeString":"literal_string \"VRF ExtraArgsV1\""}],"id":2589,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"211:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"211:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"204:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2587,"name":"bytes4","nodeType":"ElementaryTypeName","src":"204:6:13","typeDescriptions":{}}},"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"204:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"public"},{"canonicalName":"VRFV2PlusClient.ExtraArgsV1","id":2596,"members":[{"constant":false,"id":2595,"mutability":"mutable","name":"nativePayment","nameLocation":"274:13:13","nodeType":"VariableDeclaration","scope":2596,"src":"269:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2594,"name":"bool","nodeType":"ElementaryTypeName","src":"269:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExtraArgsV1","nameLocation":"251:11:13","nodeType":"StructDefinition","scope":2625,"src":"244:48:13","visibility":"public"},{"canonicalName":"VRFV2PlusClient.RandomWordsRequest","id":2609,"members":[{"constant":false,"id":2598,"mutability":"mutable","name":"keyHash","nameLocation":"336:7:13","nodeType":"VariableDeclaration","scope":2609,"src":"328:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"328:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"subId","nameLocation":"357:5:13","nodeType":"VariableDeclaration","scope":2609,"src":"349:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"requestConfirmations","nameLocation":"375:20:13","nodeType":"VariableDeclaration","scope":2609,"src":"368:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2601,"name":"uint16","nodeType":"ElementaryTypeName","src":"368:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"408:16:13","nodeType":"VariableDeclaration","scope":2609,"src":"401:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2603,"name":"uint32","nodeType":"ElementaryTypeName","src":"401:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"numWords","nameLocation":"437:8:13","nodeType":"VariableDeclaration","scope":2609,"src":"430:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2605,"name":"uint32","nodeType":"ElementaryTypeName","src":"430:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"extraArgs","nameLocation":"457:9:13","nodeType":"VariableDeclaration","scope":2609,"src":"451:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2607,"name":"bytes","nodeType":"ElementaryTypeName","src":"451:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RandomWordsRequest","nameLocation":"303:18:13","nodeType":"StructDefinition","scope":2625,"src":"296:175:13","visibility":"public"},{"body":{"id":2623,"nodeType":"Block","src":"568:70:13","statements":[{"expression":{"arguments":[{"id":2619,"name":"EXTRA_ARGS_V1_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"604:17:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2620,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"623:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":2617,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"581:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"585:18:13","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"581:22:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2616,"id":2622,"nodeType":"Return","src":"574:59:13"}]},"id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"_argsToBytes","nameLocation":"484:12:13","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"extraArgs","nameLocation":"516:9:13","nodeType":"VariableDeclaration","scope":2624,"src":"497:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":2611,"nodeType":"UserDefinedTypeName","pathNode":{"id":2610,"name":"ExtraArgsV1","nameLocations":["497:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2596,"src":"497:11:13"},"referencedDeclaration":2596,"src":"497:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"496:30:13"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"bts","nameLocation":"563:3:13","nodeType":"VariableDeclaration","scope":2624,"src":"550:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2614,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"549:18:13"},"scope":2625,"src":"475:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2626,"src":"82:558:13","usedErrors":[]}],"src":"32:609:13"},"id":13},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2480],"IVRFSubscriptionV2Plus":[2583],"SubscriptionAPI":[2299],"VRFConsumerBaseV2Plus":[2462],"VRFCoordinatorV2_5Mock":[3453],"VRFV2PlusClient":[2625]},"id":3454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2627,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"94:24:14"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol","file":"../dev/interfaces/IVRFCoordinatorV2Plus.sol","id":2630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3454,"sourceUnit":2481,"src":"166:106:14","symbolAliases":[{"foreign":{"id":2628,"name":"IVRFCoordinatorV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"174:21:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2629,"name":"IVRFSubscriptionV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"197:22:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"../dev/libraries/VRFV2PlusClient.sol","id":2632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3454,"sourceUnit":2626,"src":"273:69:14","symbolAliases":[{"foreign":{"id":2631,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"281:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol","file":"../dev/SubscriptionAPI.sol","id":2634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3454,"sourceUnit":2300,"src":"343:59:14","symbolAliases":[{"foreign":{"id":2633,"name":"SubscriptionAPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"351:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"../dev/VRFConsumerBaseV2Plus.sol","id":2636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3454,"sourceUnit":2463,"src":"403:71:14","symbolAliases":[{"foreign":{"id":2635,"name":"VRFConsumerBaseV2Plus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"411:21:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2637,"name":"SubscriptionAPI","nameLocations":["511:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"511:15:14"},"id":2638,"nodeType":"InheritanceSpecifier","src":"511:15:14"},{"baseName":{"id":2639,"name":"IVRFCoordinatorV2Plus","nameLocations":["528:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"528:21:14"},"id":2640,"nodeType":"InheritanceSpecifier","src":"528:21:14"}],"canonicalName":"VRFCoordinatorV2_5Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3453,"linearizedBaseContracts":[3453,2480,2299,2583,260,39,202,276],"name":"VRFCoordinatorV2_5Mock","nameLocation":"485:22:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1eebc117","id":2642,"mutability":"immutable","name":"i_base_fee","nameLocation":"578:10:14","nodeType":"VariableDeclaration","scope":3453,"src":"554:34:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2641,"name":"uint96","nodeType":"ElementaryTypeName","src":"554:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"dcab3dcf","id":2644,"mutability":"immutable","name":"i_gas_price","nameLocation":"616:11:14","nodeType":"VariableDeclaration","scope":3453,"src":"592:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2643,"name":"uint96","nodeType":"ElementaryTypeName","src":"592:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"13478329","id":2646,"mutability":"immutable","name":"i_wei_per_unit_link","nameLocation":"655:19:14","nodeType":"VariableDeclaration","scope":3453,"src":"631:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2645,"name":"int256","nodeType":"ElementaryTypeName","src":"631:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"public"},{"errorSelector":"41abc801","id":2648,"name":"InvalidRequest","nameLocation":"685:14:14","nodeType":"ErrorDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[],"src":"699:2:14"},"src":"679:23:14"},{"errorSelector":"3f3df5b6","id":2650,"name":"InvalidRandomWords","nameLocation":"711:18:14","nodeType":"ErrorDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[],"src":"729:2:14"},"src":"705:27:14"},{"errorSelector":"5247fdce","id":2652,"name":"InvalidExtraArgsTag","nameLocation":"741:19:14","nodeType":"ErrorDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[],"src":"760:2:14"},"src":"735:28:14"},{"errorSelector":"d6234725","id":2654,"name":"NotImplemented","nameLocation":"772:14:14","nodeType":"ErrorDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[],"src":"786:2:14"},"src":"766:23:14"},{"anonymous":false,"eventSelector":"eb0e3652e0f44f417695e6e90f2f42c99b65cd7169074c5a654b16b9748c3a4e","id":2674,"name":"RandomWordsRequested","nameLocation":"799:20:14","nodeType":"EventDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"841:7:14","nodeType":"VariableDeclaration","scope":2674,"src":"825:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"825:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2658,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"862:9:14","nodeType":"VariableDeclaration","scope":2674,"src":"854:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2660,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"885:7:14","nodeType":"VariableDeclaration","scope":2674,"src":"877:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"914:5:14","nodeType":"VariableDeclaration","scope":2674,"src":"898:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2664,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"932:27:14","nodeType":"VariableDeclaration","scope":2674,"src":"925:34:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2663,"name":"uint16","nodeType":"ElementaryTypeName","src":"925:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2666,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"972:16:14","nodeType":"VariableDeclaration","scope":2674,"src":"965:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2665,"name":"uint32","nodeType":"ElementaryTypeName","src":"965:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2668,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"1001:8:14","nodeType":"VariableDeclaration","scope":2674,"src":"994:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2667,"name":"uint32","nodeType":"ElementaryTypeName","src":"994:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2670,"indexed":false,"mutability":"mutable","name":"extraArgs","nameLocation":"1021:9:14","nodeType":"VariableDeclaration","scope":2674,"src":"1015:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"1015:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2672,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1052:6:14","nodeType":"VariableDeclaration","scope":2674,"src":"1036:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"819:243:14"},"src":"793:270:14"},{"anonymous":false,"eventSelector":"aeb4b4786571e184246d39587f659abf0e26f41f6a3358692250382c0cdb47b7","id":2690,"name":"RandomWordsFulfilled","nameLocation":"1072:20:14","nodeType":"EventDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1114:9:14","nodeType":"VariableDeclaration","scope":2690,"src":"1098:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2678,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"1137:10:14","nodeType":"VariableDeclaration","scope":2690,"src":"1129:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2680,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1169:5:14","nodeType":"VariableDeclaration","scope":2690,"src":"1153:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2682,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"1187:7:14","nodeType":"VariableDeclaration","scope":2690,"src":"1180:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2681,"name":"uint96","nodeType":"ElementaryTypeName","src":"1180:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2684,"indexed":false,"mutability":"mutable","name":"nativePayment","nameLocation":"1205:13:14","nodeType":"VariableDeclaration","scope":2690,"src":"1200:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2683,"name":"bool","nodeType":"ElementaryTypeName","src":"1200:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2686,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1229:7:14","nodeType":"VariableDeclaration","scope":2690,"src":"1224:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2685,"name":"bool","nodeType":"ElementaryTypeName","src":"1224:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2688,"indexed":false,"mutability":"mutable","name":"onlyPremium","nameLocation":"1247:11:14","nodeType":"VariableDeclaration","scope":2690,"src":"1242:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2687,"name":"bool","nodeType":"ElementaryTypeName","src":"1242:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1092:170:14"},"src":"1066:197:14"},{"anonymous":false,"eventSelector":"4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be","id":2692,"name":"ConfigSet","nameLocation":"1272:9:14","nodeType":"EventDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[],"src":"1281:2:14"},"src":"1266:18:14"},{"constant":false,"id":2694,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1304:14:14","nodeType":"VariableDeclaration","scope":3453,"src":"1288:30:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2693,"name":"uint64","nodeType":"ElementaryTypeName","src":"1288:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1339:15:14","nodeType":"VariableDeclaration","scope":3453,"src":"1322:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1379:13:14","nodeType":"VariableDeclaration","scope":3453,"src":"1362:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:3:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2_5Mock.Request","id":2709,"members":[{"constant":false,"id":2702,"mutability":"mutable","name":"subId","nameLocation":"1432:5:14","nodeType":"VariableDeclaration","scope":2709,"src":"1424:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1450:16:14","nodeType":"VariableDeclaration","scope":2709,"src":"1443:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2703,"name":"uint32","nodeType":"ElementaryTypeName","src":"1443:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"numWords","nameLocation":"1479:8:14","nodeType":"VariableDeclaration","scope":2709,"src":"1472:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2705,"name":"uint32","nodeType":"ElementaryTypeName","src":"1472:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"extraArgs","nameLocation":"1499:9:14","nodeType":"VariableDeclaration","scope":2709,"src":"1493:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2707,"name":"bytes","nodeType":"ElementaryTypeName","src":"1493:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Request","nameLocation":"1410:7:14","nodeType":"StructDefinition","scope":3453,"src":"1403:110:14","visibility":"public"},{"constant":false,"id":2714,"mutability":"mutable","name":"s_requests","nameLocation":"1553:10:14","nodeType":"VariableDeclaration","scope":3453,"src":"1516:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2709_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)"},"typeName":{"id":2713,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1524:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1516:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2709_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2712,"nodeType":"UserDefinedTypeName","pathNode":{"id":2711,"name":"Request","nameLocations":["1535:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"1535:7:14"},"referencedDeclaration":2709,"src":"1535:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"}}},"visibility":"internal"},{"body":{"id":2740,"nodeType":"Block","src":"1687:121:14","statements":[{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"i_base_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"1693:10:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2726,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"1706:8:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1693:21:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2728,"nodeType":"ExpressionStatement","src":"1693:21:14"},{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"i_gas_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1720:11:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2730,"name":"_gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"1734:9:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1720:23:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2732,"nodeType":"ExpressionStatement","src":"1720:23:14"},{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"i_wei_per_unit_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"1749:19:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2734,"name":"_weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"1771:15:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1749:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2736,"nodeType":"ExpressionStatement","src":"1749:37:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2737,"name":"setConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"1792:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"ExpressionStatement","src":"1792:11:14"}]},"id":2741,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":2723,"kind":"baseConstructorSpecifier","modifierName":{"id":2722,"name":"SubscriptionAPI","nameLocations":["1669:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":2299,"src":"1669:15:14"},"nodeType":"ModifierInvocation","src":"1669:17:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"_baseFee","nameLocation":"1617:8:14","nodeType":"VariableDeclaration","scope":2741,"src":"1610:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2715,"name":"uint96","nodeType":"ElementaryTypeName","src":"1610:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"_gasPrice","nameLocation":"1634:9:14","nodeType":"VariableDeclaration","scope":2741,"src":"1627:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2717,"name":"uint96","nodeType":"ElementaryTypeName","src":"1627:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"_weiPerUnitLink","nameLocation":"1652:15:14","nodeType":"VariableDeclaration","scope":2741,"src":"1645:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2719,"name":"int256","nodeType":"ElementaryTypeName","src":"1645:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1609:59:14"},"returnParameters":{"id":2724,"nodeType":"ParameterList","parameters":[],"src":"1687:0:14"},"scope":3453,"src":"1598:210:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2764,"nodeType":"Block","src":"1928:359:14","statements":[{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1934:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1989:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2011:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2100:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2142:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2220:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2252:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2748,"name":"Config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"1945:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Config_$1204_storage_ptr_$","typeString":"type(struct SubscriptionAPI.Config storage pointer)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1960:27:14","1998:11:14","2020:16:14","2047:26:14","2084:14:14","2113:27:14","2151:33:14","2195:23:14","2229:21:14"],"names":["minimumRequestConfirmations","maxGasLimit","stalenessSeconds","gasAfterPaymentCalculation","reentrancyLock","fulfillmentFlatFeeNativePPM","fulfillmentFlatFeeLinkDiscountPPM","nativePremiumPercentage","linkPremiumPercentage"],"nodeType":"FunctionCall","src":"1945:315:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_memory_ptr","typeString":"struct SubscriptionAPI.Config memory"}},"src":"1934:326:14","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":2760,"nodeType":"ExpressionStatement","src":"1934:326:14"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2761,"name":"ConfigSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"2271:9:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2763,"nodeType":"EmitStatement","src":"2266:16:14"}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"1812:75:14","text":" @notice Sets the configuration of the vrfv2 mock coordinator"},"functionSelector":"8b673e7a","id":2765,"implemented":true,"kind":"function","modifiers":[{"id":2745,"kind":"modifierInvocation","modifierName":{"id":2744,"name":"onlyOwner","nameLocations":["1918:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"1918:9:14"},"nodeType":"ModifierInvocation","src":"1918:9:14"}],"name":"setConfig","nameLocation":"1899:9:14","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[],"src":"1908:2:14"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[],"src":"1928:0:14"},"scope":3453,"src":"1890:397:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2781,"nodeType":"Block","src":"2378:55:14","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2774,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2391:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":2776,"indexExpression":{"id":2775,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2403:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2391:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":2778,"indexExpression":{"id":2777,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2414:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2391:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":2779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2422:6:14","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"2391:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2773,"id":2780,"nodeType":"Return","src":"2384:44:14"}]},"functionSelector":"953e9c75","id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"consumerIsAdded","nameLocation":"2300:15:14","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"_subId","nameLocation":"2324:6:14","nodeType":"VariableDeclaration","scope":2782,"src":"2316:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"_consumer","nameLocation":"2340:9:14","nodeType":"VariableDeclaration","scope":2782,"src":"2332:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2315:35:14"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2782,"src":"2372:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2771,"name":"bool","nodeType":"ElementaryTypeName","src":"2372:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2371:6:14"},"scope":3453,"src":"2291:142:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2801,"nodeType":"Block","src":"2499:114:14","statements":[{"condition":{"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2509:35:14","subExpression":{"arguments":[{"id":2789,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"2526:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2790,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2534:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2788,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"2510:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2799,"nodeType":"IfStatement","src":"2505:97:14","trueBody":{"id":2798,"nodeType":"Block","src":"2546:56:14","statements":[{"errorCall":{"arguments":[{"id":2794,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"2577:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2795,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"2585:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2793,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"2561:15:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2561:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"RevertStatement","src":"2554:41:14"}]}},{"id":2800,"nodeType":"PlaceholderStatement","src":"2607:1:14"}]},"id":2802,"name":"onlyValidConsumer","nameLocation":"2446:17:14","nodeType":"ModifierDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"_subId","nameLocation":"2472:6:14","nodeType":"VariableDeclaration","scope":2802,"src":"2464:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2464:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"_consumer","nameLocation":"2488:9:14","nodeType":"VariableDeclaration","scope":2802,"src":"2480:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"2480:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2463:35:14"},"src":"2437:176:14","virtual":false,"visibility":"internal"},{"body":{"id":2822,"nodeType":"Block","src":"3256:82:14","statements":[{"expression":{"arguments":[{"id":2813,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"3293:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2814,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3305:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3330:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3316:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ArrayTypeName","src":"3320:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3316:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2812,"name":"fulfillRandomWordsWithOverride","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"3262:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[] memory)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2821,"nodeType":"ExpressionStatement","src":"3262:71:14"}]},"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"2617:547:14","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":2823,"implemented":true,"kind":"function","modifiers":[{"id":2810,"kind":"modifierInvocation","modifierName":{"id":2809,"name":"nonReentrant","nameLocations":["3243:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"3243:12:14"},"nodeType":"ModifierInvocation","src":"3243:12:14"}],"name":"fulfillRandomWords","nameLocation":"3176:18:14","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"_requestId","nameLocation":"3203:10:14","nodeType":"VariableDeclaration","scope":2823,"src":"3195:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3195:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"_consumer","nameLocation":"3223:9:14","nodeType":"VariableDeclaration","scope":2823,"src":"3215:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"3215:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3194:39:14"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[],"src":"3256:0:14"},"scope":3453,"src":"3167:171:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3023,"nodeType":"Block","src":"3729:1316:14","statements":[{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"startGas","nameLocation":"3743:8:14","nodeType":"VariableDeclaration","scope":3023,"src":"3735:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3735:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2836,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3754:7:14","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3754:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3735:28:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2839,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"3773:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2709_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":2841,"indexExpression":{"id":2840,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3784:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3773:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"id":2842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3796:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2702,"src":"3773:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3805:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3773:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2849,"nodeType":"IfStatement","src":"3769:77:14","trueBody":{"id":2848,"nodeType":"Block","src":"3808:38:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2845,"name":"InvalidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3823:14:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"RevertStatement","src":"3816:23:14"}]}},{"assignments":[2852],"declarations":[{"constant":false,"id":2852,"mutability":"mutable","name":"req","nameLocation":"3866:3:14","nodeType":"VariableDeclaration","scope":3023,"src":"3851:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"},"typeName":{"id":2851,"nodeType":"UserDefinedTypeName","pathNode":{"id":2850,"name":"Request","nameLocations":["3851:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"3851:7:14"},"referencedDeclaration":2709,"src":"3851:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request"}},"visibility":"internal"}],"id":2856,"initialValue":{"baseExpression":{"id":2853,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"3872:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2709_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":2855,"indexExpression":{"id":2854,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3883:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3872:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3851:43:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2857,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"3905:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3912:6:14","memberName":"length","nodeType":"MemberAccess","src":"3905:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3922:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3905:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2899,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"4112:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4119:6:14","memberName":"length","nodeType":"MemberAccess","src":"4112:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2901,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4129:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4133:8:14","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"4129:12:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4112:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"nodeType":"IfStatement","src":"4108:77:14","trueBody":{"id":2907,"nodeType":"Block","src":"4143:42:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2904,"name":"InvalidRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4158:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2906,"nodeType":"RevertStatement","src":"4151:27:14"}]}},"id":2909,"nodeType":"IfStatement","src":"3901:284:14","trueBody":{"id":2898,"nodeType":"Block","src":"3925:177:14","statements":[{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2861,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"3933:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2865,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"3956:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3960:8:14","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"3956:12:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3942:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2863,"nodeType":"ArrayTypeName","src":"3946:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3942:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3933:36:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2869,"nodeType":"ExpressionStatement","src":"3933:36:14"},{"body":{"id":2896,"nodeType":"Block","src":"4020:76:14","statements":[{"expression":{"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2881,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"4030:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2883,"indexExpression":{"id":2882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4037:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4030:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":2889,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4071:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4083:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2887,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4060:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4064:6:14","memberName":"encode","nodeType":"MemberAccess","src":"4060:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4060:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2886,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4050:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4050:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4042:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4042:7:14","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4030:57:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2895,"nodeType":"ExpressionStatement","src":"4030:57:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3997:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2875,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4001:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4005:8:14","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"4001:12:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3997:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2897,"initializationExpression":{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"i","nameLocation":"3990:1:14","nodeType":"VariableDeclaration","scope":2897,"src":"3982:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2873,"initialValue":{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3982:13:14"},"loopExpression":{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4015:3:14","subExpression":{"id":2878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4015:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2880,"nodeType":"ExpressionStatement","src":"4015:3:14"},"nodeType":"ForStatement","src":"3977:119:14"}]}},{"assignments":[2912],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"v","nameLocation":"4213:1:14","nodeType":"VariableDeclaration","scope":3023,"src":"4191:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2462","typeString":"contract VRFConsumerBaseV2Plus"},"typeName":{"id":2911,"nodeType":"UserDefinedTypeName","pathNode":{"id":2910,"name":"VRFConsumerBaseV2Plus","nameLocations":["4191:21:14"],"nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"4191:21:14"},"referencedDeclaration":2462,"src":"4191:21:14","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2462","typeString":"contract VRFConsumerBaseV2Plus"}},"visibility":"internal"}],"id":2913,"nodeType":"VariableDeclarationStatement","src":"4191:23:14"},{"assignments":[2915],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"callReq","nameLocation":"4233:7:14","nodeType":"VariableDeclaration","scope":3023,"src":"4220:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2914,"name":"bytes","nodeType":"ElementaryTypeName","src":"4220:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2924,"initialValue":{"arguments":[{"expression":{"expression":{"id":2918,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"4266:1:14","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2Plus_$2462","typeString":"contract VRFConsumerBaseV2Plus"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4268:21:14","memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"4266:23:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:8:14","memberName":"selector","nodeType":"MemberAccess","src":"4266:32:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2921,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4300:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2922,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"4312:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4243:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4247:18:14","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4243:22:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4220:99:14"},{"expression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2925,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"4325:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":2927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4334:14:14","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"4325:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4351:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4325:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2930,"nodeType":"ExpressionStatement","src":"4325:30:14"},{"assignments":[2932,null],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"success","nameLocation":"4438:7:14","nodeType":"VariableDeclaration","scope":3023,"src":"4433:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2931,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2940,"initialValue":{"arguments":[{"id":2938,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"4493:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2933,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"4451:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4461:4:14","memberName":"call","nodeType":"MemberAccess","src":"4451:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2935,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4471:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4475:16:14","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2704,"src":"4471:20:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"4451:41:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4432:69:14"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2941,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"4507:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$1204_storage","typeString":"struct SubscriptionAPI.Config storage ref"}},"id":2943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4516:14:14","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"4507:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4533:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4507:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"ExpressionStatement","src":"4507:31:14"},{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"nativePayment","nameLocation":"4550:13:14","nodeType":"VariableDeclaration","scope":3023,"src":"4545:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2947,"name":"bool","nodeType":"ElementaryTypeName","src":"4545:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2962,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"expression":{"id":2951,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4572:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4576:9:14","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"4572:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2958,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2953,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4586:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":2954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4590:9:14","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"4586:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4600:6:14","memberName":"length","nodeType":"MemberAccess","src":"4586:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4609:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4586:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4572:39:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4566:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2949,"name":"uint8","nodeType":"ElementaryTypeName","src":"4566:5:14","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4566:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4616:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4566:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4545:72:14"},{"assignments":[2964],"declarations":[{"constant":false,"id":2964,"mutability":"mutable","name":"rawPayment","nameLocation":"4632:10:14","nodeType":"VariableDeclaration","scope":3023,"src":"4624:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2975,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"i_base_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4645:10:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4660:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2967,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4671:7:14","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4660:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4659:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2971,"name":"i_gas_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"4684:11:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4659:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4658:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4645:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4624:72:14"},{"condition":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4706:14:14","subExpression":{"id":2976,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4707:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"4702:98:14","trueBody":{"id":2990,"nodeType":"Block","src":"4722:78:14","statements":[{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2978,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"4730:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4744:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2980,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"4751:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4744:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4743:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":2985,"name":"i_wei_per_unit_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"4773:19:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4765:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"4765:7:14","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4765:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4743:50:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4730:63:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"4730:63:14"}]}},{"assignments":[2993],"declarations":[{"constant":false,"id":2993,"mutability":"mutable","name":"payment","nameLocation":"4812:7:14","nodeType":"VariableDeclaration","scope":3023,"src":"4805:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2992,"name":"uint96","nodeType":"ElementaryTypeName","src":"4805:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2998,"initialValue":{"arguments":[{"id":2996,"name":"rawPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"4829:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4822:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2994,"name":"uint96","nodeType":"ElementaryTypeName","src":"4822:6:14","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4822:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4805:35:14"},{"expression":{"arguments":[{"id":3000,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"4862:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3001,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4871:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3002,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4886:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4890:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2702,"src":"4886:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2999,"name":"_chargePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4847:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint96_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint96,bool,uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4847:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"ExpressionStatement","src":"4847:49:14"},{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4903:31:14","subExpression":{"components":[{"baseExpression":{"id":3006,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"4911:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2709_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":3008,"indexExpression":{"id":3007,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4922:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4911:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}}],"id":3009,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4910:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3011,"nodeType":"ExpressionStatement","src":"4903:31:14"},{"eventCall":{"arguments":[{"id":3013,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4966:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3014,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4978:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3015,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"4990:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"id":3016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4994:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2702,"src":"4990:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3017,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"5001:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3018,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"5010:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3019,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"5025:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66616c7365","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5034:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3012,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"4945:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$_t_bool_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint256,uint96,bool,bool,bool)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4945:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"EmitStatement","src":"4940:100:14"}]},"documentation":{"id":2824,"nodeType":"StructuredDocumentation","src":"3342:273:14","text":" @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"},"functionSelector":"08e3898e","id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWordsWithOverride","nameLocation":"3627:30:14","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"_requestId","nameLocation":"3666:10:14","nodeType":"VariableDeclaration","scope":3024,"src":"3658:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3658:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"_consumer","nameLocation":"3686:9:14","nodeType":"VariableDeclaration","scope":3024,"src":"3678:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"3678:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"_words","nameLocation":"3714:6:14","nodeType":"VariableDeclaration","scope":3024,"src":"3697:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ArrayTypeName","src":"3697:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3657:64:14"},"returnParameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"3729:0:14"},"scope":3453,"src":"3618:1427:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3094,"nodeType":"Block","src":"5133:538:14","statements":[{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"subcription","nameLocation":"5160:11:14","nodeType":"VariableDeclaration","scope":3094,"src":"5139:32:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"},"typeName":{"id":3034,"nodeType":"UserDefinedTypeName","pathNode":{"id":3033,"name":"Subscription","nameLocations":["5139:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1080,"src":"5139:12:14"},"referencedDeclaration":1080,"src":"5139:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription"}},"visibility":"internal"}],"id":3039,"initialValue":{"baseExpression":{"id":3036,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"5174:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":3038,"indexExpression":{"id":3037,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"5190:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5174:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5139:57:14"},{"condition":{"id":3040,"name":"nativePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"5206:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3092,"nodeType":"Block","src":"5453:214:14","statements":[{"assignments":[3068],"declarations":[{"constant":false,"id":3068,"mutability":"mutable","name":"prevBal","nameLocation":"5468:7:14","nodeType":"VariableDeclaration","scope":3092,"src":"5461:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3067,"name":"uint96","nodeType":"ElementaryTypeName","src":"5461:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3071,"initialValue":{"expression":{"id":3069,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"5478:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5490:7:14","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"5478:19:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5461:36:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"5509:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3073,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5519:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5509:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3079,"nodeType":"IfStatement","src":"5505:70:14","trueBody":{"id":3078,"nodeType":"Block","src":"5528:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3075,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"5545:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3077,"nodeType":"RevertStatement","src":"5538:28:14"}]}},{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3080,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"5582:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5594:7:14","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"5582:19:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"5604:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3084,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5614:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5604:17:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5582:39:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3087,"nodeType":"ExpressionStatement","src":"5582:39:14"},{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3088,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5629:20:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3089,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5653:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5629:31:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3091,"nodeType":"ExpressionStatement","src":"5629:31:14"}]},"id":3093,"nodeType":"IfStatement","src":"5202:465:14","trueBody":{"id":3066,"nodeType":"Block","src":"5221:226:14","statements":[{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"prevBal","nameLocation":"5236:7:14","nodeType":"VariableDeclaration","scope":3066,"src":"5229:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3041,"name":"uint96","nodeType":"ElementaryTypeName","src":"5229:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3045,"initialValue":{"expression":{"id":3043,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"5246:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5258:13:14","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"5246:25:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5229:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"5283:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3047,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5293:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5283:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"IfStatement","src":"5279:70:14","trueBody":{"id":3052,"nodeType":"Block","src":"5302:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3049,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"5319:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3051,"nodeType":"RevertStatement","src":"5312:28:14"}]}},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3054,"name":"subcription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"5356:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage_ptr","typeString":"struct SubscriptionAPI.Subscription storage pointer"}},"id":3056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5368:13:14","memberName":"nativeBalance","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"5356:25:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"prevBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"5384:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3058,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5394:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5384:17:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5356:45:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3061,"nodeType":"ExpressionStatement","src":"5356:45:14"},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"s_withdrawableNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"5409:20:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3063,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5433:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5409:31:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3065,"nodeType":"ExpressionStatement","src":"5409:31:14"}]}}]},"id":3095,"implemented":true,"kind":"function","modifiers":[],"name":"_chargePayment","nameLocation":"5058:14:14","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"payment","nameLocation":"5080:7:14","nodeType":"VariableDeclaration","scope":3095,"src":"5073:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3025,"name":"uint96","nodeType":"ElementaryTypeName","src":"5073:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"nativePayment","nameLocation":"5094:13:14","nodeType":"VariableDeclaration","scope":3095,"src":"5089:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3027,"name":"bool","nodeType":"ElementaryTypeName","src":"5089:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"subId","nameLocation":"5117:5:14","nodeType":"VariableDeclaration","scope":3095,"src":"5109:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5072:51:14"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[],"src":"5133:0:14"},"scope":3453,"src":"5049:622:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"5939:332:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3103,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"5949:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3105,"indexExpression":{"id":3104,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"5971:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5949:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5979:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"5949:35:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5996:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5988:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"5988:7:14","typeDescriptions":{}}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5988:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5949:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3116,"nodeType":"IfStatement","src":"5945:98:14","trueBody":{"id":3115,"nodeType":"Block","src":"6000:43:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3112,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"6015:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3114,"nodeType":"RevertStatement","src":"6008:28:14"}]}},{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"oldBalance","nameLocation":"6056:10:14","nodeType":"VariableDeclaration","scope":3149,"src":"6048:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"6048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3123,"initialValue":{"expression":{"baseExpression":{"id":3119,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"6069:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":3121,"indexExpression":{"id":3120,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6085:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6069:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":3122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6093:7:14","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"6069:31:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"6048:52:14"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3124,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"6106:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Subscription_$1080_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.Subscription storage ref)"}},"id":3126,"indexExpression":{"id":3125,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6122:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6106:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$1080_storage","typeString":"struct SubscriptionAPI.Subscription storage ref"}},"id":3127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6130:7:14","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"6106:31:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3130,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"6148:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6141:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3128,"name":"uint96","nodeType":"ElementaryTypeName","src":"6141:6:14","typeDescriptions":{}}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6106:50:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3133,"nodeType":"ExpressionStatement","src":"6106:50:14"},{"expression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"6162:14:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3137,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"6187:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6180:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3135,"name":"uint96","nodeType":"ElementaryTypeName","src":"6180:6:14","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6180:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"6162:33:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3140,"nodeType":"ExpressionStatement","src":"6162:33:14"},{"eventCall":{"arguments":[{"id":3142,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6225:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3143,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"6233:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"6245:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3145,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"6258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6245:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6206:18:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6206:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"EmitStatement","src":"6201:65:14"}]},"documentation":{"id":3096,"nodeType":"StructuredDocumentation","src":"5675:195:14","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"115e3c0d","id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"5882:16:14","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"_subId","nameLocation":"5907:6:14","nodeType":"VariableDeclaration","scope":3150,"src":"5899:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"_amount","nameLocation":"5923:7:14","nodeType":"VariableDeclaration","scope":3150,"src":"5915:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5898:33:14"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[],"src":"5939:0:14"},"scope":3453,"src":"5873:398:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3191,"nodeType":"Block","src":"6514:273:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3159,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6524:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6534:6:14","memberName":"length","nodeType":"MemberAccess","src":"6524:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6544:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6524:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3169,"nodeType":"IfStatement","src":"6520:100:14","trueBody":{"id":3168,"nodeType":"Block","src":"6547:73:14","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6606:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3163,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6562:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6578:11:14","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2596,"src":"6562:27:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2596_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6591:13:14"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"6562:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}},"functionReturnParameters":3158,"id":3167,"nodeType":"Return","src":"6555:58:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3172,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6636:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3170,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6629:6:14","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6629:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3174,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6650:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6666:17:14","memberName":"EXTRA_ARGS_V1_TAG","nodeType":"MemberAccess","referencedDeclaration":2593,"src":"6650:33:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6629:54:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3180,"nodeType":"IfStatement","src":"6625:88:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3177,"name":"InvalidExtraArgsTag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6692:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6692:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"RevertStatement","src":"6685:28:14"}},{"expression":{"arguments":[{"baseExpression":{"id":3183,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"6737:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"6737:13:14","startExpression":{"hexValue":"34","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"expression":{"id":3186,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6753:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6769:11:14","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2596,"src":"6753:27:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2596_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}}],"id":3188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6752:29:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2596_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2596_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}],"expression":{"id":3181,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6726:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6730:6:14","memberName":"decode","nodeType":"MemberAccess","src":"6726:10:14","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6726:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}},"functionReturnParameters":3158,"id":3190,"nodeType":"Return","src":"6719:63:14"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"6275:131:14","text":"@dev Convert the extra args bytes into a struct\n @param extraArgs The extra args bytes\n @return The extra args struct"},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"_fromBytes","nameLocation":"6418:10:14","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"extraArgs","nameLocation":"6444:9:14","nodeType":"VariableDeclaration","scope":3192,"src":"6429:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3152,"name":"bytes","nodeType":"ElementaryTypeName","src":"6429:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6428:26:14"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"6478:34:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"},"typeName":{"id":3156,"nodeType":"UserDefinedTypeName","pathNode":{"id":3155,"name":"VRFV2PlusClient.ExtraArgsV1","nameLocations":["6478:15:14","6494:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2596,"src":"6478:27:14"},"referencedDeclaration":2596,"src":"6478:27:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_storage_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1"}},"visibility":"internal"}],"src":"6477:36:14"},"scope":3453,"src":"6409:378:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[2479],"body":{"id":3283,"nodeType":"Block","src":"6968:749:14","statements":[{"assignments":[3210],"declarations":[{"constant":false,"id":3210,"mutability":"mutable","name":"subId","nameLocation":"6982:5:14","nodeType":"VariableDeclaration","scope":3283,"src":"6974:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"6974:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3213,"initialValue":{"expression":{"id":3211,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6990:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6995:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"6990:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6974:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3214,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"7010:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3216,"indexExpression":{"id":3215,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"7032:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7010:28:14","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"7010:34:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7056:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7048:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"7048:7:14","typeDescriptions":{}}},"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7048:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7010:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3227,"nodeType":"IfStatement","src":"7006:97:14","trueBody":{"id":3226,"nodeType":"Block","src":"7060:43:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3223,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"7075:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7075:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"RevertStatement","src":"7068:28:14"}]}},{"assignments":[3229],"declarations":[{"constant":false,"id":3229,"mutability":"mutable","name":"requestId","nameLocation":"7117:9:14","nodeType":"VariableDeclaration","scope":3283,"src":"7109:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"7109:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3232,"initialValue":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7129:17:14","subExpression":{"id":3230,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"7129:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7109:37:14"},{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"preSeed","nameLocation":"7160:7:14","nodeType":"VariableDeclaration","scope":3283,"src":"7152:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"7152:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3237,"initialValue":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7170:15:14","subExpression":{"id":3235,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7170:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7152:33:14"},{"assignments":[3239],"declarations":[{"constant":false,"id":3239,"mutability":"mutable","name":"extraArgsBytes","nameLocation":"7205:14:14","nodeType":"VariableDeclaration","scope":3283,"src":"7192:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3238,"name":"bytes","nodeType":"ElementaryTypeName","src":"7192:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3247,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3243,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7262:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7267:9:14","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2608,"src":"7262:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3242,"name":"_fromBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7251:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_struct$_ExtraArgsV1_$2596_memory_ptr_$","typeString":"function (bytes calldata) pure returns (struct VRFV2PlusClient.ExtraArgsV1 memory)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":3240,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"7222:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7238:12:14","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"7222:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2596_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7222:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7192:86:14"},{"expression":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3248,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"7284:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$2709_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request storage ref)"}},"id":3250,"indexExpression":{"id":3249,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"7295:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3252,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7331:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7336:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"7331:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3254,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7367:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7372:16:14","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2604,"src":"7367:21:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3256,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7406:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7411:8:14","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"7406:13:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3258,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7438:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7443:9:14","memberName":"extraArgs","nodeType":"MemberAccess","referencedDeclaration":2608,"src":"7438:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3251,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"7308:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$2709_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2_5Mock.Request storage pointer)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7324:5:14","7349:16:14","7396:8:14","7427:9:14"],"names":["subId","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"7308:151:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_memory_ptr","typeString":"struct VRFCoordinatorV2_5Mock.Request memory"}},"src":"7284:175:14","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$2709_storage","typeString":"struct VRFCoordinatorV2_5Mock.Request storage ref"}},"id":3262,"nodeType":"ExpressionStatement","src":"7284:175:14"},{"eventCall":{"arguments":[{"expression":{"id":3264,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7499:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7504:7:14","memberName":"keyHash","nodeType":"MemberAccess","referencedDeclaration":2598,"src":"7499:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3266,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"7519:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3267,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"7536:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3268,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7551:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7556:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"7551:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3270,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7569:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7574:20:14","memberName":"requestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2602,"src":"7569:25:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3272,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7602:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7607:16:14","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2604,"src":"7602:21:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3274,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7631:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7636:8:14","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2606,"src":"7631:13:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3276,"name":"extraArgsBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"7652:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7674:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7678:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7674:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3263,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"7471:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,uint16,uint32,uint32,bytes memory,address)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7471:219:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3280,"nodeType":"EmitStatement","src":"7466:224:14"},{"expression":{"id":3281,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"7703:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3208,"id":3282,"nodeType":"Return","src":"7696:16:14"}]},"functionSelector":"9b1c385e","id":3284,"implemented":true,"kind":"function","modifiers":[{"id":3199,"kind":"modifierInvocation","modifierName":{"id":3198,"name":"nonReentrant","nameLocations":["6895:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"6895:12:14"},"nodeType":"ModifierInvocation","src":"6895:12:14"},{"arguments":[{"expression":{"id":3201,"name":"_req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6926:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest calldata"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6931:5:14","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2600,"src":"6926:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6938:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6942:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6938:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3205,"kind":"modifierInvocation","modifierName":{"id":3200,"name":"onlyValidConsumer","nameLocations":["6908:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":2802,"src":"6908:17:14"},"nodeType":"ModifierInvocation","src":"6908:41:14"}],"name":"requestRandomWords","nameLocation":"6800:18:14","nodeType":"FunctionDefinition","overrides":{"id":3197,"nodeType":"OverrideSpecifier","overrides":[],"src":"6886:8:14"},"parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"_req","nameLocation":"6868:4:14","nodeType":"VariableDeclaration","scope":3284,"src":"6824:48:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_calldata_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"},"typeName":{"id":3194,"nodeType":"UserDefinedTypeName","pathNode":{"id":3193,"name":"VRFV2PlusClient.RandomWordsRequest","nameLocations":["6824:15:14","6840:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2609,"src":"6824:34:14"},"referencedDeclaration":2609,"src":"6824:34:14","typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_storage_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest"}},"visibility":"internal"}],"src":"6818:58:14"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3284,"src":"6959:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6958:9:14"},"scope":3453,"src":"6791:926:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2513],"body":{"id":3390,"nodeType":"Block","src":"7933:634:14","statements":[{"condition":{"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7943:38:14","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3302,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"7944:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":3304,"indexExpression":{"id":3303,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"7956:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7944:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":3306,"indexExpression":{"id":3305,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"7967:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7944:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":3307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7975:6:14","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"7944:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3315,"nodeType":"IfStatement","src":"7939:100:14","trueBody":{"id":3314,"nodeType":"Block","src":"7983:56:14","statements":[{"errorCall":{"arguments":[{"id":3310,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"8014:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3311,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8022:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3309,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"7998:15:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3313,"nodeType":"RevertStatement","src":"7991:41:14"}]}},{"assignments":[3320],"declarations":[{"constant":false,"id":3320,"mutability":"mutable","name":"consumers","nameLocation":"8061:9:14","nodeType":"VariableDeclaration","scope":3390,"src":"8044:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"8044:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3319,"nodeType":"ArrayTypeName","src":"8044:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3325,"initialValue":{"expression":{"baseExpression":{"id":3321,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8073:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3323,"indexExpression":{"id":3322,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"8095:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8073:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8103:9:14","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"8073:39:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8044:68:14"},{"assignments":[3327],"declarations":[{"constant":false,"id":3327,"mutability":"mutable","name":"lastConsumerIndex","nameLocation":"8126:17:14","nodeType":"VariableDeclaration","scope":3390,"src":"8118:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"8118:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3332,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3328,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"8146:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8156:6:14","memberName":"length","nodeType":"MemberAccess","src":"8146:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8165:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8146:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8118:48:14"},{"body":{"id":3374,"nodeType":"Block","src":"8219:236:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3344,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"8231:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3346,"indexExpression":{"id":3345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8241:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8231:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3347,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8247:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8231:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3373,"nodeType":"IfStatement","src":"8227:222:14","trueBody":{"id":3372,"nodeType":"Block","src":"8258:191:14","statements":[{"assignments":[3350],"declarations":[{"constant":false,"id":3350,"mutability":"mutable","name":"last","nameLocation":"8276:4:14","nodeType":"VariableDeclaration","scope":3372,"src":"8268:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"8268:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3354,"initialValue":{"baseExpression":{"id":3351,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"8283:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3353,"indexExpression":{"id":3352,"name":"lastConsumerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"8293:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8283:28:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8268:43:14"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3355,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8321:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3357,"indexExpression":{"id":3356,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"8343:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8321:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8351:9:14","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"8321:39:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3360,"indexExpression":{"id":3359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8361:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8321:42:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3361,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"8366:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8321:49:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3363,"nodeType":"ExpressionStatement","src":"8321:49:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":3364,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"8380:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SubscriptionConfig_$1088_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig storage ref)"}},"id":3366,"indexExpression":{"id":3365,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"8402:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8380:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$1088_storage","typeString":"struct SubscriptionAPI.SubscriptionConfig storage ref"}},"id":3367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8410:9:14","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":1087,"src":"8380:39:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8420:3:14","memberName":"pop","nodeType":"MemberAccess","src":"8380:43:14","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3370,"nodeType":"ExpressionStatement","src":"8380:45:14"},{"id":3371,"nodeType":"Break","src":"8435:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8192:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3338,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"8196:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8206:6:14","memberName":"length","nodeType":"MemberAccess","src":"8196:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8192:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3375,"initializationExpression":{"assignments":[3334],"declarations":[{"constant":false,"id":3334,"mutability":"mutable","name":"i","nameLocation":"8185:1:14","nodeType":"VariableDeclaration","scope":3375,"src":"8177:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"8177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"initialValue":{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8189:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8177:13:14"},"loopExpression":{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8214:3:14","subExpression":{"id":3341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8216:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"8214:3:14"},"nodeType":"ForStatement","src":"8172:283:14"},{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":3376,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"8460:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref))"}},"id":3379,"indexExpression":{"id":3377,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8472:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8460:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ConsumerConfig_$1095_storage_$","typeString":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig storage ref)"}},"id":3380,"indexExpression":{"id":3378,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"8483:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8460:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_ConsumerConfig_$1095_storage","typeString":"struct SubscriptionAPI.ConsumerConfig storage ref"}},"id":3381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8491:6:14","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"8460:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8500:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8460:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"nodeType":"ExpressionStatement","src":"8460:45:14"},{"eventCall":{"arguments":[{"id":3386,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"8544:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3387,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8552:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3385,"name":"SubscriptionConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8516:27:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8516:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3389,"nodeType":"EmitStatement","src":"8511:51:14"}]},"documentation":{"id":3285,"nodeType":"StructuredDocumentation","src":"7721:49:14","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"cb631797","id":3391,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3293,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"7875:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3294,"kind":"modifierInvocation","modifierName":{"id":3292,"name":"onlySubOwner","nameLocations":["7862:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"7862:12:14"},"nodeType":"ModifierInvocation","src":"7862:20:14"},{"arguments":[{"id":3296,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"7901:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3297,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"7909:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3298,"kind":"modifierInvocation","modifierName":{"id":3295,"name":"onlyValidConsumer","nameLocations":["7883:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":2802,"src":"7883:17:14"},"nodeType":"ModifierInvocation","src":"7883:36:14"},{"id":3300,"kind":"modifierInvocation","modifierName":{"id":3299,"name":"nonReentrant","nameLocations":["7920:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"7920:12:14"},"nodeType":"ModifierInvocation","src":"7920:12:14"}],"name":"removeConsumer","nameLocation":"7782:14:14","nodeType":"FunctionDefinition","overrides":{"id":3291,"nodeType":"OverrideSpecifier","overrides":[],"src":"7853:8:14"},"parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"_subId","nameLocation":"7810:6:14","nodeType":"VariableDeclaration","scope":3391,"src":"7802:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"7802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"_consumer","nameLocation":"7830:9:14","nodeType":"VariableDeclaration","scope":3391,"src":"7822:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3288,"name":"address","nodeType":"ElementaryTypeName","src":"7822:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7796:47:14"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[],"src":"7933:0:14"},"scope":3453,"src":"7773:794:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2521],"body":{"id":3439,"nodeType":"Block","src":"8732:277:14","statements":[{"assignments":[3406,3408],"declarations":[{"constant":false,"id":3406,"mutability":"mutable","name":"balance","nameLocation":"8746:7:14","nodeType":"VariableDeclaration","scope":3439,"src":"8739:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3405,"name":"uint96","nodeType":"ElementaryTypeName","src":"8739:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"nativeBalance","nameLocation":"8762:13:14","nodeType":"VariableDeclaration","scope":3439,"src":"8755:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3407,"name":"uint96","nodeType":"ElementaryTypeName","src":"8755:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"id":3410,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"8799:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3409,"name":"_deleteSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"8779:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint96_$_t_uint96_$","typeString":"function (uint256) returns (uint96,uint96)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8779:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint96_$","typeString":"tuple(uint96,uint96)"}},"nodeType":"VariableDeclarationStatement","src":"8738:68:14"},{"assignments":[3414,null],"declarations":[{"constant":false,"id":3414,"mutability":"mutable","name":"success","nameLocation":"8819:7:14","nodeType":"VariableDeclaration","scope":3439,"src":"8814:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3413,"name":"bool","nodeType":"ElementaryTypeName","src":"8814:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3424,"initialValue":{"arguments":[{"hexValue":"","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8872:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3415,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"8832:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8836:4:14","memberName":"call","nodeType":"MemberAccess","src":"8832:8:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":3419,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8856:13:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"8848:7:14","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8848:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8832:39:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8832:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8813:62:14"},{"condition":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8885:8:14","subExpression":{"id":3425,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"8886:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3431,"nodeType":"IfStatement","src":"8881:56:14","trueBody":{"id":3430,"nodeType":"Block","src":"8895:42:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3427,"name":"FailedToSendNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"8910:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8910:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3429,"nodeType":"RevertStatement","src":"8903:27:14"}]}},{"eventCall":{"arguments":[{"id":3433,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"8968:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3434,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"8976:3:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3435,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"8981:7:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3436,"name":"nativeBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"8990:13:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3432,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"8947:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"EmitStatement","src":"8942:62:14"}]},"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"8571:49:14","text":" @inheritdoc IVRFSubscriptionV2Plus"},"functionSelector":"0ae09540","id":3440,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3400,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"8711:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3401,"kind":"modifierInvocation","modifierName":{"id":3399,"name":"onlySubOwner","nameLocations":["8698:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2247,"src":"8698:12:14"},"nodeType":"ModifierInvocation","src":"8698:20:14"},{"id":3403,"kind":"modifierInvocation","modifierName":{"id":3402,"name":"nonReentrant","nameLocations":["8719:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"8719:12:14"},"nodeType":"ModifierInvocation","src":"8719:12:14"}],"name":"cancelSubscription","nameLocation":"8632:18:14","nodeType":"FunctionDefinition","overrides":{"id":3398,"nodeType":"OverrideSpecifier","overrides":[],"src":"8689:8:14"},"parameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"_subId","nameLocation":"8659:6:14","nodeType":"VariableDeclaration","scope":3440,"src":"8651:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8651:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"_to","nameLocation":"8675:3:14","nodeType":"VariableDeclaration","scope":3440,"src":"8667:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3395,"name":"address","nodeType":"ElementaryTypeName","src":"8667:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8650:29:14"},"returnParameters":{"id":3404,"nodeType":"ParameterList","parameters":[],"src":"8732:0:14"},"scope":3453,"src":"8623:386:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2565],"body":{"id":3451,"nodeType":"Block","src":"9098:34:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3448,"name":"NotImplemented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"9111:14:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9111:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3450,"nodeType":"RevertStatement","src":"9104:23:14"}]},"functionSelector":"41af6c87","id":3452,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"9022:20:14","nodeType":"FunctionDefinition","overrides":{"id":3444,"nodeType":"OverrideSpecifier","overrides":[],"src":"9074:8:14"},"parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3452,"src":"9043:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"9043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9042:19:14"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3452,"src":"9092:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3445,"name":"bool","nodeType":"ElementaryTypeName","src":"9092:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9091:6:14"},"scope":3453,"src":"9013:119:14","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":3454,"src":"476:8658:14","usedErrors":[1021,1023,1029,1031,1033,1035,1039,1041,1045,1051,1065,1067,1069,1071,1073,1209,2648,2650,2652,2654]}],"src":"94:9041:14"},"id":14},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"AutomationCompatibleInterface":[18],"ConfirmedOwner":[39],"IVRFCoordinatorV2Plus":[2480],"IVRFMigratableConsumerV2Plus":[2494],"IVRFSubscriptionV2Plus":[2583],"Raffle":[3886],"Raffle__NOTOpen":[3466],"Raffle__NotEnoughETHEntered":[3462],"Raffle__TransferFailed":[3464],"Raffle__UpkeepNotNeeded":[3474],"SubscriptionAPI":[2299],"VRFConsumerBaseV2Plus":[2462],"VRFCoordinatorV2_5Mock":[3453],"VRFV2PlusClient":[2625]},"id":3887,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3455,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","file":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","id":3456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3887,"sourceUnit":3454,"src":"221:76:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol","id":3457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3887,"sourceUnit":2463,"src":"391:73:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","id":3458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3887,"sourceUnit":19,"src":"465:95:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","file":"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol","id":3460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3887,"sourceUnit":2626,"src":"561:100:15","symbolAliases":[{"foreign":{"id":3459,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"569:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"errorSelector":"bd4e0695","id":3462,"name":"Raffle__NotEnoughETHEntered","nameLocation":"669:27:15","nodeType":"ErrorDefinition","parameters":{"id":3461,"nodeType":"ParameterList","parameters":[],"src":"696:2:15"},"src":"663:36:15"},{"errorSelector":"a1d04b39","id":3464,"name":"Raffle__TransferFailed","nameLocation":"725:22:15","nodeType":"ErrorDefinition","parameters":{"id":3463,"nodeType":"ParameterList","parameters":[],"src":"747:2:15"},"src":"719:31:15"},{"errorSelector":"7459aab5","id":3466,"name":"Raffle__NOTOpen","nameLocation":"773:15:15","nodeType":"ErrorDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[],"src":"788:2:15"},"src":"767:24:15"},{"errorSelector":"584327aa","id":3474,"name":"Raffle__UpkeepNotNeeded","nameLocation":"817:23:15","nodeType":"ErrorDefinition","parameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"currentBalance","nameLocation":"854:14:15","nodeType":"VariableDeclaration","scope":3474,"src":"846:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"numPlayers","nameLocation":"882:10:15","nodeType":"VariableDeclaration","scope":3474,"src":"874:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"raffleState","nameLocation":"906:11:15","nodeType":"VariableDeclaration","scope":3474,"src":"898:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"840:79:15"},"src":"811:109:15"},{"abstract":false,"baseContracts":[{"baseName":{"id":3475,"name":"VRFConsumerBaseV2Plus","nameLocations":["941:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"941:21:15"},"id":3476,"nodeType":"InheritanceSpecifier","src":"941:21:15"},{"baseName":{"id":3477,"name":"AutomationCompatibleInterface","nameLocations":["964:29:15"],"nodeType":"IdentifierPath","referencedDeclaration":18,"src":"964:29:15"},"id":3478,"nodeType":"InheritanceSpecifier","src":"964:29:15"}],"canonicalName":"Raffle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3886,"linearizedBaseContracts":[3886,18,2462,39,202,276,2494],"name":"Raffle","nameLocation":"931:6:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":3481,"members":[{"id":3479,"name":"OPEN","nameLocation":"1050:4:15","nodeType":"EnumValue","src":"1050:4:15"},{"id":3480,"name":"CALCULATING","nameLocation":"1069:11:15","nodeType":"EnumValue","src":"1069:11:15"}],"name":"RaffleState","nameLocation":"1028:11:15","nodeType":"EnumDefinition","src":"1023:68:15"},{"constant":false,"id":3483,"mutability":"immutable","name":"i_entranceFee","nameLocation":"1178:13:15","nodeType":"VariableDeclaration","scope":3886,"src":"1152:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3486,"mutability":"mutable","name":"s_players","nameLocation":"1249:9:15","nodeType":"VariableDeclaration","scope":3886,"src":"1223:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"1223:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3485,"nodeType":"ArrayTypeName","src":"1223:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":3489,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"1343:16:15","nodeType":"VariableDeclaration","scope":3886,"src":"1302:57:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_5Mock_$3453","typeString":"contract VRFCoordinatorV2_5Mock"},"typeName":{"id":3488,"nodeType":"UserDefinedTypeName","pathNode":{"id":3487,"name":"VRFCoordinatorV2_5Mock","nameLocations":["1302:22:15"],"nodeType":"IdentifierPath","referencedDeclaration":3453,"src":"1302:22:15"},"referencedDeclaration":3453,"src":"1302:22:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_5Mock_$3453","typeString":"contract VRFCoordinatorV2_5Mock"}},"visibility":"private"},{"constant":true,"id":3492,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1427:21:15","nodeType":"VariableDeclaration","scope":3886,"src":"1403:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3490,"name":"uint16","nodeType":"ElementaryTypeName","src":"1403:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1451:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":3494,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1520:18:15","nodeType":"VariableDeclaration","scope":3886,"src":"1495:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3493,"name":"uint32","nodeType":"ElementaryTypeName","src":"1495:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":false,"id":3496,"mutability":"immutable","name":"i_gasLane","nameLocation":"1631:9:15","nodeType":"VariableDeclaration","scope":3886,"src":"1605:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1605:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3498,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1708:16:15","nodeType":"VariableDeclaration","scope":3886,"src":"1682:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":3501,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1754:9:15","nodeType":"VariableDeclaration","scope":3886,"src":"1730:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3499,"name":"uint16","nodeType":"ElementaryTypeName","src":"1730:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1766:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":3503,"mutability":"mutable","name":"s_recentWinner","nameLocation":"1812:14:15","nodeType":"VariableDeclaration","scope":3886,"src":"1796:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3506,"mutability":"mutable","name":"s_raffleState","nameLocation":"1871:13:15","nodeType":"VariableDeclaration","scope":3886,"src":"1851:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"},"typeName":{"id":3505,"nodeType":"UserDefinedTypeName","pathNode":{"id":3504,"name":"RaffleState","nameLocations":["1851:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3481,"src":"1851:11:15"},"referencedDeclaration":3481,"src":"1851:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"visibility":"private"},{"constant":false,"id":3508,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1922:15:15","nodeType":"VariableDeclaration","scope":3886,"src":"1906:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3510,"mutability":"immutable","name":"i_interval","nameLocation":"1969:10:15","nodeType":"VariableDeclaration","scope":3886,"src":"1943:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d4","id":3514,"name":"RaffleEnter","nameLocation":"2063:11:15","nodeType":"EventDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2091:6:15","nodeType":"VariableDeclaration","scope":3514,"src":"2075:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3511,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2074:24:15"},"src":"2057:42:15"},{"anonymous":false,"eventSelector":"cd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b","id":3518,"name":"RequestedRaffleWinner","nameLocation":"2110:21:15","nodeType":"EventDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"2148:9:15","nodeType":"VariableDeclaration","scope":3518,"src":"2132:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2131:27:15"},"src":"2104:55:15"},{"anonymous":false,"eventSelector":"5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df","id":3522,"name":"WinnerPicked","nameLocation":"2170:12:15","nodeType":"EventDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2199:6:15","nodeType":"VariableDeclaration","scope":3522,"src":"2183:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2182:24:15"},"src":"2164:43:15"},{"body":{"id":3576,"nodeType":"Block","src":"2603:357:15","statements":[{"expression":{"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3540,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"2613:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3541,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"2629:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2613:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3543,"nodeType":"ExpressionStatement","src":"2613:27:15"},{"expression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3544,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2650:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_5Mock_$3453","typeString":"contract VRFCoordinatorV2_5Mock"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3546,"name":"vrfCoordinatorV2_5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"2692:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3545,"name":"VRFCoordinatorV2_5Mock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"2669:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2_5Mock_$3453_$","typeString":"type(contract VRFCoordinatorV2_5Mock)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2669:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_5Mock_$3453","typeString":"contract VRFCoordinatorV2_5Mock"}},"src":"2650:61:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_5Mock_$3453","typeString":"contract VRFCoordinatorV2_5Mock"}},"id":3549,"nodeType":"ExpressionStatement","src":"2650:61:15"},{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3550,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2721:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3551,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"2733:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2721:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3553,"nodeType":"ExpressionStatement","src":"2721:19:15"},{"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3554,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"2750:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3555,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"2769:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2750:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3557,"nodeType":"ExpressionStatement","src":"2750:24:15"},{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3558,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"2784:18:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3559,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"2805:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2784:37:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3561,"nodeType":"ExpressionStatement","src":"2784:37:15"},{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3562,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"2831:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3563,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"2847:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$3481_$","typeString":"type(enum Raffle.RaffleState)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2859:4:15","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"2847:16:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"src":"2831:32:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"id":3566,"nodeType":"ExpressionStatement","src":"2831:32:15"},{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"2873:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3568,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2891:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"2891:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2873:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3571,"nodeType":"ExpressionStatement","src":"2873:33:15"},{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2916:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3573,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"2929:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3575,"nodeType":"ExpressionStatement","src":"2916:21:15"}]},"id":3577,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3537,"name":"vrfCoordinatorV2_5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"2583:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3538,"kind":"baseConstructorSpecifier","modifierName":{"id":3536,"name":"VRFConsumerBaseV2Plus","nameLocations":["2561:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"2561:21:15"},"nodeType":"ModifierInvocation","src":"2561:41:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"vrfCoordinatorV2_5","nameLocation":"2379:18:15","nodeType":"VariableDeclaration","scope":3577,"src":"2371:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"2371:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"entranceFee","nameLocation":"2436:11:15","nodeType":"VariableDeclaration","scope":3577,"src":"2428:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"keyHash","nameLocation":"2465:7:15","nodeType":"VariableDeclaration","scope":3577,"src":"2457:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2457:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"subId","nameLocation":"2490:5:15","nodeType":"VariableDeclaration","scope":3577,"src":"2482:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2512:16:15","nodeType":"VariableDeclaration","scope":3577,"src":"2505:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3531,"name":"uint32","nodeType":"ElementaryTypeName","src":"2505:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"interval","nameLocation":"2546:8:15","nodeType":"VariableDeclaration","scope":3577,"src":"2538:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2538:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2361:199:15"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[],"src":"2603:0:15"},"scope":3886,"src":"2350:610:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3613,"nodeType":"Block","src":"3004:501:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3181:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:5:15","memberName":"value","nodeType":"MemberAccess","src":"3181:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3582,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"3193:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3181:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3588,"nodeType":"IfStatement","src":"3177:92:15","trueBody":{"id":3587,"nodeType":"Block","src":"3208:61:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3584,"name":"Raffle__NotEnoughETHEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"3229:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3229:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3586,"nodeType":"RevertStatement","src":"3222:36:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"3331:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3590,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"3348:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$3481_$","typeString":"type(enum Raffle.RaffleState)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3360:4:15","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"3348:16:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"src":"3331:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3597,"nodeType":"IfStatement","src":"3327:88:15","trueBody":{"id":3596,"nodeType":"Block","src":"3366:49:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3593,"name":"Raffle__NOTOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"3387:15:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3387:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3595,"nodeType":"RevertStatement","src":"3380:24:15"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3448:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3452:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3448:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3440:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"3440:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3440:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":3598,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"3425:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3435:4:15","memberName":"push","nodeType":"MemberAccess","src":"3425:14:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3607,"nodeType":"ExpressionStatement","src":"3425:35:15"},{"eventCall":{"arguments":[{"expression":{"id":3609,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3487:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3491:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3487:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3608,"name":"RaffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"3475:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3612,"nodeType":"EmitStatement","src":"3470:28:15"}]},"functionSelector":"2cfcc539","id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"2975:11:15","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[],"src":"2986:2:15"},"returnParameters":{"id":3579,"nodeType":"ParameterList","parameters":[],"src":"3004:0:15"},"scope":3886,"src":"2966:539:15","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[11],"body":{"id":3674,"nodeType":"Block","src":"4104:354:15","statements":[{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"timePassed","nameLocation":"4119:10:15","nodeType":"VariableDeclaration","scope":3674,"src":"4114:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3625,"name":"bool","nodeType":"ElementaryTypeName","src":"4114:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3634,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3627,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4133:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4139:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"4133:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3629,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"4151:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4133:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4132:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3632,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4170:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4132:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4114:66:15"},{"assignments":[3636],"declarations":[{"constant":false,"id":3636,"mutability":"mutable","name":"hasPlayers","nameLocation":"4195:10:15","nodeType":"VariableDeclaration","scope":3674,"src":"4190:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3635,"name":"bool","nodeType":"ElementaryTypeName","src":"4190:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3641,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3637,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4208:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4218:6:15","memberName":"length","nodeType":"MemberAccess","src":"4208:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4227:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4208:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4190:38:15"},{"assignments":[3643],"declarations":[{"constant":false,"id":3643,"mutability":"mutable","name":"hasBalance","nameLocation":"4243:10:15","nodeType":"VariableDeclaration","scope":3674,"src":"4238:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3642,"name":"bool","nodeType":"ElementaryTypeName","src":"4238:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3646,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4264:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$3886","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$3886","typeString":"contract Raffle"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4256:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"4256:7:15","typeDescriptions":{}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4270:7:15","memberName":"balance","nodeType":"MemberAccess","src":"4256:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4256:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4238:43:15"},{"assignments":[3653],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"isOpen","nameLocation":"4296:6:15","nodeType":"VariableDeclaration","scope":3674,"src":"4291:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3652,"name":"bool","nodeType":"ElementaryTypeName","src":"4291:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3658,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"4305:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3655,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4322:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$3481_$","typeString":"type(enum Raffle.RaffleState)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:4:15","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"4322:16:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"src":"4305:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4291:47:15"},{"expression":{"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3659,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"4348:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"4364:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3661,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"4378:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4364:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3663,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"4392:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4364:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3665,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"4406:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4364:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4363:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4348:65:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3669,"nodeType":"ExpressionStatement","src":"4348:65:15"},{"expression":{"components":[{"id":3670,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"4431:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"307830","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4445:5:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""},"value":"0x0"}],"id":3672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4430:21:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_$","typeString":"tuple(bool,literal_string \"0x0\")"}},"functionReturnParameters":3624,"id":3673,"nodeType":"Return","src":"4423:28:15"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"3511:408:15","text":" This is the function that the Chainlink Automation node\n calls to check if the upkeep is needed.\n The following should be true for this to return true:\n 1. The time interval has passed between raffle runs\n 2. The lottery should have at leat one player and have some TTH\n 3. Our subscription is funded with LINK\n 4. The lottery should be in an open state"},"functionSelector":"6e04ff0d","id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"3933:11:15","nodeType":"FunctionDefinition","overrides":{"id":3619,"nodeType":"OverrideSpecifier","overrides":[],"src":"4025:8:15"},"parameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3675,"src":"3954:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3616,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3944:44:15"},"returnParameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4056:12:15","nodeType":"VariableDeclaration","scope":3675,"src":"4051:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3620,"name":"bool","nodeType":"ElementaryTypeName","src":"4051:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3675,"src":"4070:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3622,"name":"bytes","nodeType":"ElementaryTypeName","src":"4070:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4050:49:15"},"scope":3886,"src":"3924:534:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[17],"body":{"id":3735,"nodeType":"Block","src":"4577:879:15","statements":[{"assignments":[3682,null],"declarations":[{"constant":false,"id":3682,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4593:12:15","nodeType":"VariableDeclaration","scope":3735,"src":"4588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3681,"name":"bool","nodeType":"ElementaryTypeName","src":"4588:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3686,"initialValue":{"arguments":[{"hexValue":"","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4623:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3683,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"4611:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4611:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4587:39:15"},{"condition":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4640:13:15","subExpression":{"id":3687,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"4641:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"nodeType":"IfStatement","src":"4636:201:15","trueBody":{"id":3703,"nodeType":"Block","src":"4655:182:15","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3692,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4725:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$3886","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$3886","typeString":"contract Raffle"}],"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4717:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3690,"name":"address","nodeType":"ElementaryTypeName","src":"4717:7:15","typeDescriptions":{}}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4731:7:15","memberName":"balance","nodeType":"MemberAccess","src":"4717:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3695,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4756:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:6:15","memberName":"length","nodeType":"MemberAccess","src":"4756:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3699,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"4798:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}],"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4790:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"4790:7:15","typeDescriptions":{}}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3689,"name":"Raffle__UpkeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"4676:23:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4676:150:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3702,"nodeType":"RevertStatement","src":"4669:157:15"}]}},{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3705,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"4847:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3706,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4863:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$3481_$","typeString":"type(enum Raffle.RaffleState)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4875:11:15","memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"4863:23:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"src":"4847:39:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"id":3709,"nodeType":"ExpressionStatement","src":"4847:39:15"},{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"requestId","nameLocation":"4904:9:15","nodeType":"VariableDeclaration","scope":3735,"src":"4896:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3730,"initialValue":{"arguments":[{"arguments":[{"id":3716,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"5027:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3717,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"5061:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3718,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5117:21:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3719,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5174:18:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3720,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"5220:9:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"arguments":[{"hexValue":"66616c7365","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5352:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3723,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"5308:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5324:11:15","memberName":"ExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":2596,"src":"5308:27:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExtraArgsV1_$2596_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.ExtraArgsV1 storage pointer)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5337:13:15"],"names":["nativePayment"],"nodeType":"FunctionCall","src":"5308:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExtraArgsV1_$2596_memory_ptr","typeString":"struct VRFV2PlusClient.ExtraArgsV1 memory"}],"expression":{"id":3721,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"5258:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5274:12:15","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"5258:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ExtraArgsV1_$2596_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct VRFV2PlusClient.ExtraArgsV1 memory) pure returns (bytes memory)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:119:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3714,"name":"VRFV2PlusClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4965:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFV2PlusClient_$2625_$","typeString":"type(library VRFV2PlusClient)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4981:18:15","memberName":"RandomWordsRequest","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"4965:34:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RandomWordsRequest_$2609_storage_ptr_$","typeString":"type(struct VRFV2PlusClient.RandomWordsRequest storage pointer)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5018:7:15","5054:5:15","5095:20:15","5156:16:15","5210:8:15","5247:9:15"],"names":["keyHash","subId","requestConfirmations","callbackGasLimit","numWords","extraArgs"],"nodeType":"FunctionCall","src":"4965:427:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RandomWordsRequest_$2609_memory_ptr","typeString":"struct VRFV2PlusClient.RandomWordsRequest memory"}],"expression":{"id":3712,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"4916:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_5Mock_$3453","typeString":"contract VRFCoordinatorV2_5Mock"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4933:18:15","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":3284,"src":"4916:35:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RandomWordsRequest_$2609_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct VRFV2PlusClient.RandomWordsRequest memory) external returns (uint256)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:486:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4896:506:15"},{"eventCall":{"arguments":[{"id":3732,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"5439:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3731,"name":"RequestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"5417:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5417:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"EmitStatement","src":"5412:37:15"}]},"functionSelector":"4585e33b","id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"4513:13:15","nodeType":"FunctionDefinition","overrides":{"id":3679,"nodeType":"OverrideSpecifier","overrides":[],"src":"4568:8:15"},"parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"4527:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3676,"name":"bytes","nodeType":"ElementaryTypeName","src":"4527:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4526:32:15"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[],"src":"4577:0:15"},"scope":3886,"src":"4504:952:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2368],"body":{"id":3806,"nodeType":"Block","src":"5609:629:15","statements":[{"assignments":[3746],"declarations":[{"constant":false,"id":3746,"mutability":"mutable","name":"indexOfWinner","nameLocation":"5627:13:15","nodeType":"VariableDeclaration","scope":3806,"src":"5619:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"5619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3753,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3747,"name":"_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5643:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3749,"indexExpression":{"hexValue":"30","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5643:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":3750,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5661:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5671:6:15","memberName":"length","nodeType":"MemberAccess","src":"5661:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5643:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5619:58:15"},{"assignments":[3755],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"recentWinner","nameLocation":"5703:12:15","nodeType":"VariableDeclaration","scope":3806,"src":"5687:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3754,"name":"address","nodeType":"ElementaryTypeName","src":"5687:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":3759,"initialValue":{"baseExpression":{"id":3756,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5718:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3758,"indexExpression":{"id":3757,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"5728:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5718:24:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"5687:55:15"},{"expression":{"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"5752:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3761,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"5768:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$3481_$","typeString":"type(enum Raffle.RaffleState)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5780:4:15","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"5768:16:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"src":"5752:32:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"id":3764,"nodeType":"ExpressionStatement","src":"5752:32:15"},{"expression":{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"5794:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3766,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5812:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5818:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"5812:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3769,"nodeType":"ExpressionStatement","src":"5794:33:15"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3770,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5926:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5960:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5938:21:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"5942:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3772,"nodeType":"ArrayTypeName","src":"5942:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5938:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"5926:36:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3777,"nodeType":"ExpressionStatement","src":"5926:36:15"},{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3778,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"5972:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3779,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"5989:12:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5972:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3781,"nodeType":"ExpressionStatement","src":"5972:29:15"},{"assignments":[3783,null],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"success","nameLocation":"6047:7:15","nodeType":"VariableDeclaration","scope":3806,"src":"6042:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3782,"name":"bool","nodeType":"ElementaryTypeName","src":"6042:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3794,"initialValue":{"arguments":[{"hexValue":"","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6108:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3784,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"6060:12:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6073:4:15","memberName":"call","nodeType":"MemberAccess","src":"6060:17:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":3788,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6093:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$3886","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$3886","typeString":"contract Raffle"}],"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6085:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3786,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:15","typeDescriptions":{}}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6085:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6099:7:15","memberName":"balance","nodeType":"MemberAccess","src":"6085:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6060:47:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6060:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6041:70:15"},{"condition":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6125:8:15","subExpression":{"id":3795,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"6126:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3801,"nodeType":"IfStatement","src":"6121:70:15","trueBody":{"id":3800,"nodeType":"Block","src":"6135:56:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3797,"name":"Raffle__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"6156:22:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3799,"nodeType":"RevertStatement","src":"6149:31:15"}]}},{"eventCall":{"arguments":[{"id":3803,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"6218:12:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3802,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"6205:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6205:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3805,"nodeType":"EmitStatement","src":"6200:31:15"}]},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"5493:18:15","nodeType":"FunctionDefinition","overrides":{"id":3743,"nodeType":"OverrideSpecifier","overrides":[],"src":"5600:8:15"},"parameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"5521:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"5521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"_randomWords","nameLocation":"5572:12:15","nodeType":"VariableDeclaration","scope":3807,"src":"5553:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"5553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3740,"nodeType":"ArrayTypeName","src":"5553:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5511:79:15"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"5609:0:15"},"scope":3886,"src":"5484:754:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3814,"nodeType":"Block","src":"6364:37:15","statements":[{"expression":{"id":3812,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"6381:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3811,"id":3813,"nodeType":"Return","src":"6374:20:15"}]},"functionSelector":"09bc33a7","id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"getEntranceFee","nameLocation":"6317:14:15","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[],"src":"6331:2:15"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"6355:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6355:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6354:9:15"},"scope":3886,"src":"6308:93:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3826,"nodeType":"Block","src":"6471:40:15","statements":[{"expression":{"baseExpression":{"id":3822,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"6488:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3824,"indexExpression":{"id":3823,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"6498:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6488:16:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":3821,"id":3825,"nodeType":"Return","src":"6481:23:15"}]},"functionSelector":"e55ae4e8","id":3827,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"6416:9:15","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"index","nameLocation":"6434:5:15","nodeType":"VariableDeclaration","scope":3827,"src":"6426:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6426:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6425:15:15"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3827,"src":"6462:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"6462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6461:9:15"},"scope":3886,"src":"6407:104:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3834,"nodeType":"Block","src":"6574:38:15","statements":[{"expression":{"id":3832,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"6591:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3831,"id":3833,"nodeType":"Return","src":"6584:21:15"}]},"functionSelector":"473f1ddc","id":3835,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"6526:15:15","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[],"src":"6541:2:15"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"6565:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3829,"name":"address","nodeType":"ElementaryTypeName","src":"6565:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6564:9:15"},"scope":3886,"src":"6517:95:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3843,"nodeType":"Block","src":"6678:37:15","statements":[{"expression":{"id":3841,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"6695:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"functionReturnParameters":3840,"id":3842,"nodeType":"Return","src":"6688:20:15"}]},"functionSelector":"115cbaf5","id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffleState","nameLocation":"6627:14:15","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"6641:2:15"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"6665:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"},"typeName":{"id":3838,"nodeType":"UserDefinedTypeName","pathNode":{"id":3837,"name":"RaffleState","nameLocations":["6665:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3481,"src":"6665:11:15"},"referencedDeclaration":3481,"src":"6665:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$3481","typeString":"enum Raffle.RaffleState"}},"visibility":"internal"}],"src":"6664:13:15"},"scope":3886,"src":"6618:97:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3851,"nodeType":"Block","src":"6773:33:15","statements":[{"expression":{"id":3849,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"6790:9:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3848,"id":3850,"nodeType":"Return","src":"6783:16:15"}]},"functionSelector":"53a2c19a","id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"6730:11:15","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[],"src":"6741:2:15"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3852,"src":"6765:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3846,"name":"uint16","nodeType":"ElementaryTypeName","src":"6765:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6764:8:15"},"scope":3886,"src":"6721:85:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3860,"nodeType":"Block","src":"6872:40:15","statements":[{"expression":{"expression":{"id":3857,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"6889:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6899:6:15","memberName":"length","nodeType":"MemberAccess","src":"6889:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3856,"id":3859,"nodeType":"Return","src":"6882:23:15"}]},"functionSelector":"fd6673f5","id":3861,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayers","nameLocation":"6821:18:15","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[],"src":"6839:2:15"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"6863:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"6863:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6862:9:15"},"scope":3886,"src":"6812:100:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3868,"nodeType":"Block","src":"6978:39:15","statements":[{"expression":{"id":3866,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"6995:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3865,"id":3867,"nodeType":"Return","src":"6988:22:15"}]},"functionSelector":"320229eb","id":3869,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestTimeStamp","nameLocation":"6927:18:15","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"6945:2:15"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"6969:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"6969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6968:9:15"},"scope":3886,"src":"6918:99:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3876,"nodeType":"Block","src":"7088:45:15","statements":[{"expression":{"id":3874,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7105:21:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3873,"id":3875,"nodeType":"Return","src":"7098:28:15"}]},"functionSelector":"5f1b0fd8","id":3877,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmations","nameLocation":"7032:23:15","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[],"src":"7055:2:15"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3877,"src":"7079:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"7079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7078:9:15"},"scope":3886,"src":"7023:110:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3884,"nodeType":"Block","src":"7192:34:15","statements":[{"expression":{"id":3882,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"7209:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3881,"id":3883,"nodeType":"Return","src":"7202:17:15"}]},"functionSelector":"91ad27b4","id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"7148:11:15","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[],"src":"7159:2:15"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"7183:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"7183:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7182:9:15"},"scope":3886,"src":"7139:87:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3887,"src":"922:6306:15","usedErrors":[2318,2326,2328,3462,3464,3466,3474]}],"src":"32:7422:15"},"id":15},"contracts/test/VRFCoordinatorV2_5Mock.sol":{"ast":{"absolutePath":"contracts/test/VRFCoordinatorV2_5Mock.sol","exportedSymbols":{"IVRFCoordinatorV2Plus":[2480],"IVRFSubscriptionV2Plus":[2583],"SubscriptionAPI":[2299],"VRFConsumerBaseV2Plus":[2462],"VRFCoordinatorV2_5Mock":[3453],"VRFV2PlusClient":[2625]},"id":3890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3888,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:16"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","file":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol","id":3889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3890,"sourceUnit":3454,"src":"58:76:16","symbolAliases":[],"unitAlias":""}],"src":"32:103:16"},"id":16}},"contracts":{"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":303,"id":180,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":948,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":747,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":608,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":603,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3327:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"759:80:17","statements":[{"nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:17"},"nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:17"},"nodeType":"YulFunctionCall","src":"800:33:17"},"nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nodeType":"YulBlock","src":"922:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:17"},"nodeType":"YulFunctionCall","src":"970:79:17"},"nodeType":"YulExpressionStatement","src":"970:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:17"},"nodeType":"YulFunctionCall","src":"939:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:17"},"nodeType":"YulFunctionCall","src":"935:32:17"},"nodeType":"YulIf","src":"932:119:17"},{"nodeType":"YulBlock","src":"1061:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:17"},"nodeType":"YulFunctionCall","src":"1147:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:17"},"nodeType":"YulFunctionCall","src":"1115:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:17","type":""}],"src":"845:351:17"},{"body":{"nodeType":"YulBlock","src":"1298:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1315:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1320:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:17"},"nodeType":"YulFunctionCall","src":"1308:19:17"},"nodeType":"YulExpressionStatement","src":"1308:19:17"},{"nodeType":"YulAssignment","src":"1336:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1355:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1360:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:17"},"nodeType":"YulFunctionCall","src":"1351:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1336:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1270:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1275:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1286:11:17","type":""}],"src":"1202:169:17"},{"body":{"nodeType":"YulBlock","src":"1483:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1505:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1513:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1501:3:17"},"nodeType":"YulFunctionCall","src":"1501:14:17"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1517:26:17","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1494:6:17"},"nodeType":"YulFunctionCall","src":"1494:50:17"},"nodeType":"YulExpressionStatement","src":"1494:50:17"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1475:6:17","type":""}],"src":"1377:174:17"},{"body":{"nodeType":"YulBlock","src":"1703:220:17","statements":[{"nodeType":"YulAssignment","src":"1713:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1779:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1720:58:17"},"nodeType":"YulFunctionCall","src":"1720:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1713:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1885:3:17"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1796:88:17"},"nodeType":"YulFunctionCall","src":"1796:93:17"},"nodeType":"YulExpressionStatement","src":"1796:93:17"},{"nodeType":"YulAssignment","src":"1898:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1909:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:17"},"nodeType":"YulFunctionCall","src":"1905:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1898:3:17"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1699:3:17","type":""}],"src":"1557:366:17"},{"body":{"nodeType":"YulBlock","src":"2100:248:17","statements":[{"nodeType":"YulAssignment","src":"2110:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:17"},"nodeType":"YulFunctionCall","src":"2118:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2110:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2157:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2168:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:17"},"nodeType":"YulFunctionCall","src":"2153:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2176:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:17"},"nodeType":"YulFunctionCall","src":"2172:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2146:6:17"},"nodeType":"YulFunctionCall","src":"2146:47:17"},"nodeType":"YulExpressionStatement","src":"2146:47:17"},{"nodeType":"YulAssignment","src":"2202:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2336:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2210:124:17"},"nodeType":"YulFunctionCall","src":"2210:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2080:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2095:4:17","type":""}],"src":"1929:419:17"},{"body":{"nodeType":"YulBlock","src":"2460:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2482:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2490:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2478:3:17"},"nodeType":"YulFunctionCall","src":"2478:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2494:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:17"},"nodeType":"YulFunctionCall","src":"2471:49:17"},"nodeType":"YulExpressionStatement","src":"2471:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2452:6:17","type":""}],"src":"2354:173:17"},{"body":{"nodeType":"YulBlock","src":"2679:220:17","statements":[{"nodeType":"YulAssignment","src":"2689:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2755:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2760:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2696:58:17"},"nodeType":"YulFunctionCall","src":"2696:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2689:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2861:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2772:88:17"},"nodeType":"YulFunctionCall","src":"2772:93:17"},"nodeType":"YulExpressionStatement","src":"2772:93:17"},{"nodeType":"YulAssignment","src":"2874:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2885:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:17"},"nodeType":"YulFunctionCall","src":"2881:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2874:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2667:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2675:3:17","type":""}],"src":"2533:366:17"},{"body":{"nodeType":"YulBlock","src":"3076:248:17","statements":[{"nodeType":"YulAssignment","src":"3086:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3109:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:17"},"nodeType":"YulFunctionCall","src":"3094:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:17"},"nodeType":"YulFunctionCall","src":"3129:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3152:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3148:3:17"},"nodeType":"YulFunctionCall","src":"3148:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3122:6:17"},"nodeType":"YulFunctionCall","src":"3122:47:17"},"nodeType":"YulExpressionStatement","src":"3122:47:17"},{"nodeType":"YulAssignment","src":"3178:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3312:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3186:124:17"},"nodeType":"YulFunctionCall","src":"3186:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3178:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3056:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3071:4:17","type":""}],"src":"2905:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a40380380610a40833981810160405281019061003291906102be565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009a90610348565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610127576101268161012f60201b60201c565b5b5050506103d4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610194906103b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028b82610260565b9050919050565b61029b81610280565b81146102a657600080fd5b50565b6000815190506102b881610292565b92915050565b6000602082840312156102d4576102d361025b565b5b60006102e2848285016102a9565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103326018836102eb565b915061033d826102fc565b602082019050919050565b6000602082019050818103600083015261036181610325565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061039e6017836102eb565b91506103a982610368565b602082019050919050565b600060208201905081810360008301526103cd81610391565b9050919050565b61065d806103e36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea26469706673582212202ef76306a636d311a6e94b72c76875d3efc773fea60f72fac2e93f4ad8446f8e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA40 CODESIZE SUB DUP1 PUSH2 0xA40 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH2 0x126 DUP2 PUSH2 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B DUP3 PUSH2 0x260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x280 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B8 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x25B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH1 0x18 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x33D DUP3 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361 DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E PUSH1 0x17 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9 DUP3 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD DUP2 PUSH2 0x391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xF7 PUSH4 0x6A636D3 GT 0xA6 0xE9 0x4B PUSH19 0xC76875D3EFC773FEA60F72FAC2E93F4AD8446F DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"240:141:1:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;240:141;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;240:141:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_180":{"entryPoint":748,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":604,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":138,"id":146,"parameterSlots":0,"returnSlots":0},"@owner_156":{"entryPoint":543,"id":156,"parameterSlots":0,"returnSlots":1},"@transferOwnership_110":{"entryPoint":584,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:17","statements":[{"nodeType":"YulAssignment","src":"62:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:17"},"nodeType":"YulFunctionCall","src":"73:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:126:17"},{"body":{"nodeType":"YulBlock","src":"184:51:17","statements":[{"nodeType":"YulAssignment","src":"194:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:17"},"nodeType":"YulFunctionCall","src":"205:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:17","type":""}],"src":"139:96:17"},{"body":{"nodeType":"YulBlock","src":"306:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:17"},"nodeType":"YulFunctionCall","src":"328:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:17"},"nodeType":"YulFunctionCall","src":"316:37:17"},"nodeType":"YulExpressionStatement","src":"316:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:17","type":""}],"src":"241:118:17"},{"body":{"nodeType":"YulBlock","src":"463:124:17","statements":[{"nodeType":"YulAssignment","src":"473:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:17"},"nodeType":"YulFunctionCall","src":"481:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:17"},"nodeType":"YulFunctionCall","src":"562:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:17"},"nodeType":"YulFunctionCall","src":"509:71:17"},"nodeType":"YulExpressionStatement","src":"509:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:17","type":""}],"src":"365:222:17"},{"body":{"nodeType":"YulBlock","src":"633:35:17","statements":[{"nodeType":"YulAssignment","src":"643:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:17"},"nodeType":"YulFunctionCall","src":"653:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:17","type":""}],"src":"593:75:17"},{"body":{"nodeType":"YulBlock","src":"763:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:17"},"nodeType":"YulFunctionCall","src":"773:12:17"},"nodeType":"YulExpressionStatement","src":"773:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:17"},{"body":{"nodeType":"YulBlock","src":"886:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:17"},"nodeType":"YulFunctionCall","src":"896:12:17"},"nodeType":"YulExpressionStatement","src":"896:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:17"},{"body":{"nodeType":"YulBlock","src":"963:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:17"},"nodeType":"YulFunctionCall","src":"1022:12:17"},"nodeType":"YulExpressionStatement","src":"1022:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:17"},"nodeType":"YulFunctionCall","src":"993:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:17"},"nodeType":"YulFunctionCall","src":"983:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:17"},"nodeType":"YulFunctionCall","src":"976:43:17"},"nodeType":"YulIf","src":"973:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:17","type":""}],"src":"920:122:17"},{"body":{"nodeType":"YulBlock","src":"1100:87:17","statements":[{"nodeType":"YulAssignment","src":"1110:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:17"},"nodeType":"YulFunctionCall","src":"1119:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:17"},"nodeType":"YulFunctionCall","src":"1148:33:17"},"nodeType":"YulExpressionStatement","src":"1148:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:17","type":""}],"src":"1048:139:17"},{"body":{"nodeType":"YulBlock","src":"1259:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:17"},"nodeType":"YulFunctionCall","src":"1307:79:17"},"nodeType":"YulExpressionStatement","src":"1307:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:17"},"nodeType":"YulFunctionCall","src":"1276:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:32:17"},"nodeType":"YulIf","src":"1269:119:17"},{"nodeType":"YulBlock","src":"1398:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:17"},"nodeType":"YulFunctionCall","src":"1473:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:17"},"nodeType":"YulFunctionCall","src":"1452:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:17","type":""}],"src":"1193:329:17"},{"body":{"nodeType":"YulBlock","src":"1624:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:17"},"nodeType":"YulFunctionCall","src":"1634:19:17"},"nodeType":"YulExpressionStatement","src":"1634:19:17"},{"nodeType":"YulAssignment","src":"1662:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:17"},"nodeType":"YulFunctionCall","src":"1677:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:17","type":""}],"src":"1528:169:17"},{"body":{"nodeType":"YulBlock","src":"1809:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:17"},"nodeType":"YulFunctionCall","src":"1827:14:17"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:17","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:17"},"nodeType":"YulFunctionCall","src":"1820:48:17"},"nodeType":"YulExpressionStatement","src":"1820:48:17"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:17","type":""}],"src":"1703:172:17"},{"body":{"nodeType":"YulBlock","src":"2027:220:17","statements":[{"nodeType":"YulAssignment","src":"2037:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:17"},"nodeType":"YulFunctionCall","src":"2044:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:17"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:17"},"nodeType":"YulFunctionCall","src":"2120:93:17"},"nodeType":"YulExpressionStatement","src":"2120:93:17"},{"nodeType":"YulAssignment","src":"2222:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:17"},"nodeType":"YulFunctionCall","src":"2229:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:17"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:17","type":""}],"src":"1881:366:17"},{"body":{"nodeType":"YulBlock","src":"2424:248:17","statements":[{"nodeType":"YulAssignment","src":"2434:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:17"},"nodeType":"YulFunctionCall","src":"2442:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:17"},"nodeType":"YulFunctionCall","src":"2477:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:17"},"nodeType":"YulFunctionCall","src":"2496:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:17"},"nodeType":"YulFunctionCall","src":"2470:47:17"},"nodeType":"YulExpressionStatement","src":"2470:47:17"},{"nodeType":"YulAssignment","src":"2526:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:17"},"nodeType":"YulFunctionCall","src":"2534:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:17","type":""}],"src":"2253:419:17"},{"body":{"nodeType":"YulBlock","src":"2784:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:17"},"nodeType":"YulFunctionCall","src":"2802:14:17"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:17","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:17"},"nodeType":"YulFunctionCall","src":"2795:48:17"},"nodeType":"YulExpressionStatement","src":"2795:48:17"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:17","type":""}],"src":"2678:172:17"},{"body":{"nodeType":"YulBlock","src":"3002:220:17","statements":[{"nodeType":"YulAssignment","src":"3012:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:17"},"nodeType":"YulFunctionCall","src":"3019:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:17"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:17"},"nodeType":"YulFunctionCall","src":"3095:93:17"},"nodeType":"YulExpressionStatement","src":"3095:93:17"},{"nodeType":"YulAssignment","src":"3197:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:17"},"nodeType":"YulFunctionCall","src":"3204:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:17"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:17","type":""}],"src":"2856:366:17"},{"body":{"nodeType":"YulBlock","src":"3399:248:17","statements":[{"nodeType":"YulAssignment","src":"3409:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:17"},"nodeType":"YulFunctionCall","src":"3417:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:17"},"nodeType":"YulFunctionCall","src":"3452:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:17"},"nodeType":"YulFunctionCall","src":"3471:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:17"},"nodeType":"YulFunctionCall","src":"3445:47:17"},"nodeType":"YulExpressionStatement","src":"3445:47:17"},{"nodeType":"YulAssignment","src":"3501:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:17"},"nodeType":"YulFunctionCall","src":"3509:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:17","type":""}],"src":"3228:419:17"},{"body":{"nodeType":"YulBlock","src":"3759:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:17"},"nodeType":"YulFunctionCall","src":"3777:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:17"},"nodeType":"YulFunctionCall","src":"3770:49:17"},"nodeType":"YulExpressionStatement","src":"3770:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:17","type":""}],"src":"3653:173:17"},{"body":{"nodeType":"YulBlock","src":"3978:220:17","statements":[{"nodeType":"YulAssignment","src":"3988:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:17"},"nodeType":"YulFunctionCall","src":"3995:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:17"},"nodeType":"YulFunctionCall","src":"4071:93:17"},"nodeType":"YulExpressionStatement","src":"4071:93:17"},{"nodeType":"YulAssignment","src":"4173:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:17"},"nodeType":"YulFunctionCall","src":"4180:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:17","type":""}],"src":"3832:366:17"},{"body":{"nodeType":"YulBlock","src":"4375:248:17","statements":[{"nodeType":"YulAssignment","src":"4385:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:17"},"nodeType":"YulFunctionCall","src":"4393:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:17"},"nodeType":"YulFunctionCall","src":"4428:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:17"},"nodeType":"YulFunctionCall","src":"4447:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:17"},"nodeType":"YulFunctionCall","src":"4421:47:17"},"nodeType":"YulExpressionStatement","src":"4421:47:17"},{"nodeType":"YulAssignment","src":"4477:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:17"},"nodeType":"YulFunctionCall","src":"4485:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:17","type":""}],"src":"4204:419:17"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea26469706673582212202ef76306a636d311a6e94b72c76875d3efc773fea60f72fac2e93f4ad8446f8e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xF7 PUSH4 0x6A636D3 GT 0xA6 0xE9 0x4B PUSH19 0xC76875D3EFC773FEA60F72FAC2E93F4AD8446F DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"240:141:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316:2;;;:::i;:::-;;1382:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1026:316;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;1382:81::-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":300,"id":180,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":600,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":655,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3483:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"759:80:17","statements":[{"nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:17"},"nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:17"},"nodeType":"YulFunctionCall","src":"800:33:17"},"nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nodeType":"YulBlock","src":"939:413:17","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:17"},"nodeType":"YulFunctionCall","src":"987:79:17"},"nodeType":"YulExpressionStatement","src":"987:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:17"},"nodeType":"YulFunctionCall","src":"956:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:17"},"nodeType":"YulFunctionCall","src":"952:32:17"},"nodeType":"YulIf","src":"949:119:17"},{"nodeType":"YulBlock","src":"1078:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:17"},"nodeType":"YulFunctionCall","src":"1164:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:17"},"nodeType":"YulFunctionCall","src":"1132:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:17"}]}]},{"nodeType":"YulBlock","src":"1216:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:17"},"nodeType":"YulFunctionCall","src":"1303:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:17"},"nodeType":"YulFunctionCall","src":"1271:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:17","type":""}],"src":"845:507:17"},{"body":{"nodeType":"YulBlock","src":"1454:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:17"},"nodeType":"YulFunctionCall","src":"1464:19:17"},"nodeType":"YulExpressionStatement","src":"1464:19:17"},{"nodeType":"YulAssignment","src":"1492:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:17"},"nodeType":"YulFunctionCall","src":"1507:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:17","type":""}],"src":"1358:169:17"},{"body":{"nodeType":"YulBlock","src":"1639:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:17"},"nodeType":"YulFunctionCall","src":"1657:14:17"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1673:26:17","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:17"},"nodeType":"YulFunctionCall","src":"1650:50:17"},"nodeType":"YulExpressionStatement","src":"1650:50:17"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:17","type":""}],"src":"1533:174:17"},{"body":{"nodeType":"YulBlock","src":"1859:220:17","statements":[{"nodeType":"YulAssignment","src":"1869:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1935:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1940:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1876:58:17"},"nodeType":"YulFunctionCall","src":"1876:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1869:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:17"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1952:88:17"},"nodeType":"YulFunctionCall","src":"1952:93:17"},"nodeType":"YulExpressionStatement","src":"1952:93:17"},{"nodeType":"YulAssignment","src":"2054:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2065:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2070:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:17"},"nodeType":"YulFunctionCall","src":"2061:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2054:3:17"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1847:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1855:3:17","type":""}],"src":"1713:366:17"},{"body":{"nodeType":"YulBlock","src":"2256:248:17","statements":[{"nodeType":"YulAssignment","src":"2266:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:17"},"nodeType":"YulFunctionCall","src":"2274:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2266:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:17"},"nodeType":"YulFunctionCall","src":"2309:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2332:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2338:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2328:3:17"},"nodeType":"YulFunctionCall","src":"2328:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2302:6:17"},"nodeType":"YulFunctionCall","src":"2302:47:17"},"nodeType":"YulExpressionStatement","src":"2302:47:17"},{"nodeType":"YulAssignment","src":"2358:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2492:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2366:124:17"},"nodeType":"YulFunctionCall","src":"2366:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2358:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2236:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2251:4:17","type":""}],"src":"2085:419:17"},{"body":{"nodeType":"YulBlock","src":"2616:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2646:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:17"},"nodeType":"YulFunctionCall","src":"2634:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2650:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:17"},"nodeType":"YulFunctionCall","src":"2627:49:17"},"nodeType":"YulExpressionStatement","src":"2627:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2608:6:17","type":""}],"src":"2510:173:17"},{"body":{"nodeType":"YulBlock","src":"2835:220:17","statements":[{"nodeType":"YulAssignment","src":"2845:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2911:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2852:58:17"},"nodeType":"YulFunctionCall","src":"2852:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2845:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3017:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2928:88:17"},"nodeType":"YulFunctionCall","src":"2928:93:17"},"nodeType":"YulExpressionStatement","src":"2928:93:17"},{"nodeType":"YulAssignment","src":"3030:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3041:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3046:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:17"},"nodeType":"YulFunctionCall","src":"3037:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3030:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2823:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2831:3:17","type":""}],"src":"2689:366:17"},{"body":{"nodeType":"YulBlock","src":"3232:248:17","statements":[{"nodeType":"YulAssignment","src":"3242:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3254:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3265:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:17"},"nodeType":"YulFunctionCall","src":"3250:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3242:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3300:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3285:3:17"},"nodeType":"YulFunctionCall","src":"3285:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3308:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3304:3:17"},"nodeType":"YulFunctionCall","src":"3304:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:17"},"nodeType":"YulFunctionCall","src":"3278:47:17"},"nodeType":"YulExpressionStatement","src":"3278:47:17"},{"nodeType":"YulAssignment","src":"3334:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3468:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3342:124:17"},"nodeType":"YulFunctionCall","src":"3342:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3334:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3227:4:17","type":""}],"src":"3061:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a50380380610a50833981810160405281019061003291906102bb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610358565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610125576101248161012c60201b60201c565b5b50506103e4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610191906103c4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102888261025d565b9050919050565b6102988161027d565b81146102a357600080fd5b50565b6000815190506102b58161028f565b92915050565b600080604083850312156102d2576102d1610258565b5b60006102e0858286016102a6565b92505060206102f1858286016102a6565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103426018836102fb565b915061034d8261030c565b602082019050919050565b6000602082019050818103600083015261037181610335565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103ae6017836102fb565b91506103b982610378565b602082019050919050565b600060208201905081810360008301526103dd816103a1565b9050919050565b61065d806103f36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220d9459065998d3afb2bc08a0624d6e4c39e97a3a63ef92ce2a9a34b891119838e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA50 CODESIZE SUB DUP1 PUSH2 0xA50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH2 0x124 DUP2 PUSH2 0x12C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B5 DUP2 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D2 JUMPI PUSH2 0x2D1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x18 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH1 0x17 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3F3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 GASLIMIT SWAP1 PUSH6 0x998D3AFB2BC0 DUP11 MOD 0x24 0xD6 0xE4 0xC3 SWAP15 SWAP8 LOG3 0xA6 RETURNDATACOPY 0xF9 0x2C 0xE2 0xA9 LOG3 0x4B DUP10 GT NOT DUP4 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"216:1893:2:-:0;;;481:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;618:1;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;216:1893;;1536:239;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;216:1893:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_180":{"entryPoint":748,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":604,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":138,"id":146,"parameterSlots":0,"returnSlots":0},"@owner_156":{"entryPoint":543,"id":156,"parameterSlots":0,"returnSlots":1},"@transferOwnership_110":{"entryPoint":584,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:17","statements":[{"nodeType":"YulAssignment","src":"62:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:17"},"nodeType":"YulFunctionCall","src":"73:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:126:17"},{"body":{"nodeType":"YulBlock","src":"184:51:17","statements":[{"nodeType":"YulAssignment","src":"194:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:17"},"nodeType":"YulFunctionCall","src":"205:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:17","type":""}],"src":"139:96:17"},{"body":{"nodeType":"YulBlock","src":"306:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:17"},"nodeType":"YulFunctionCall","src":"328:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:17"},"nodeType":"YulFunctionCall","src":"316:37:17"},"nodeType":"YulExpressionStatement","src":"316:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:17","type":""}],"src":"241:118:17"},{"body":{"nodeType":"YulBlock","src":"463:124:17","statements":[{"nodeType":"YulAssignment","src":"473:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:17"},"nodeType":"YulFunctionCall","src":"481:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:17"},"nodeType":"YulFunctionCall","src":"562:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:17"},"nodeType":"YulFunctionCall","src":"509:71:17"},"nodeType":"YulExpressionStatement","src":"509:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:17","type":""}],"src":"365:222:17"},{"body":{"nodeType":"YulBlock","src":"633:35:17","statements":[{"nodeType":"YulAssignment","src":"643:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:17"},"nodeType":"YulFunctionCall","src":"653:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:17","type":""}],"src":"593:75:17"},{"body":{"nodeType":"YulBlock","src":"763:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:17"},"nodeType":"YulFunctionCall","src":"773:12:17"},"nodeType":"YulExpressionStatement","src":"773:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:17"},{"body":{"nodeType":"YulBlock","src":"886:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:17"},"nodeType":"YulFunctionCall","src":"896:12:17"},"nodeType":"YulExpressionStatement","src":"896:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:17"},{"body":{"nodeType":"YulBlock","src":"963:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:17"},"nodeType":"YulFunctionCall","src":"1022:12:17"},"nodeType":"YulExpressionStatement","src":"1022:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:17"},"nodeType":"YulFunctionCall","src":"993:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:17"},"nodeType":"YulFunctionCall","src":"983:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:17"},"nodeType":"YulFunctionCall","src":"976:43:17"},"nodeType":"YulIf","src":"973:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:17","type":""}],"src":"920:122:17"},{"body":{"nodeType":"YulBlock","src":"1100:87:17","statements":[{"nodeType":"YulAssignment","src":"1110:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:17"},"nodeType":"YulFunctionCall","src":"1119:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:17"},"nodeType":"YulFunctionCall","src":"1148:33:17"},"nodeType":"YulExpressionStatement","src":"1148:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:17","type":""}],"src":"1048:139:17"},{"body":{"nodeType":"YulBlock","src":"1259:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:17"},"nodeType":"YulFunctionCall","src":"1307:79:17"},"nodeType":"YulExpressionStatement","src":"1307:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:17"},"nodeType":"YulFunctionCall","src":"1276:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:32:17"},"nodeType":"YulIf","src":"1269:119:17"},{"nodeType":"YulBlock","src":"1398:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:17"},"nodeType":"YulFunctionCall","src":"1473:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:17"},"nodeType":"YulFunctionCall","src":"1452:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:17","type":""}],"src":"1193:329:17"},{"body":{"nodeType":"YulBlock","src":"1624:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:17"},"nodeType":"YulFunctionCall","src":"1634:19:17"},"nodeType":"YulExpressionStatement","src":"1634:19:17"},{"nodeType":"YulAssignment","src":"1662:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:17"},"nodeType":"YulFunctionCall","src":"1677:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:17","type":""}],"src":"1528:169:17"},{"body":{"nodeType":"YulBlock","src":"1809:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:17"},"nodeType":"YulFunctionCall","src":"1827:14:17"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:17","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:17"},"nodeType":"YulFunctionCall","src":"1820:48:17"},"nodeType":"YulExpressionStatement","src":"1820:48:17"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:17","type":""}],"src":"1703:172:17"},{"body":{"nodeType":"YulBlock","src":"2027:220:17","statements":[{"nodeType":"YulAssignment","src":"2037:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:17"},"nodeType":"YulFunctionCall","src":"2044:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:17"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:17"},"nodeType":"YulFunctionCall","src":"2120:93:17"},"nodeType":"YulExpressionStatement","src":"2120:93:17"},{"nodeType":"YulAssignment","src":"2222:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:17"},"nodeType":"YulFunctionCall","src":"2229:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:17"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:17","type":""}],"src":"1881:366:17"},{"body":{"nodeType":"YulBlock","src":"2424:248:17","statements":[{"nodeType":"YulAssignment","src":"2434:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:17"},"nodeType":"YulFunctionCall","src":"2442:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:17"},"nodeType":"YulFunctionCall","src":"2477:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:17"},"nodeType":"YulFunctionCall","src":"2496:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:17"},"nodeType":"YulFunctionCall","src":"2470:47:17"},"nodeType":"YulExpressionStatement","src":"2470:47:17"},{"nodeType":"YulAssignment","src":"2526:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:17"},"nodeType":"YulFunctionCall","src":"2534:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:17","type":""}],"src":"2253:419:17"},{"body":{"nodeType":"YulBlock","src":"2784:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:17"},"nodeType":"YulFunctionCall","src":"2802:14:17"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:17","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:17"},"nodeType":"YulFunctionCall","src":"2795:48:17"},"nodeType":"YulExpressionStatement","src":"2795:48:17"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:17","type":""}],"src":"2678:172:17"},{"body":{"nodeType":"YulBlock","src":"3002:220:17","statements":[{"nodeType":"YulAssignment","src":"3012:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:17"},"nodeType":"YulFunctionCall","src":"3019:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:17"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:17"},"nodeType":"YulFunctionCall","src":"3095:93:17"},"nodeType":"YulExpressionStatement","src":"3095:93:17"},{"nodeType":"YulAssignment","src":"3197:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:17"},"nodeType":"YulFunctionCall","src":"3204:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:17"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:17","type":""}],"src":"2856:366:17"},{"body":{"nodeType":"YulBlock","src":"3399:248:17","statements":[{"nodeType":"YulAssignment","src":"3409:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:17"},"nodeType":"YulFunctionCall","src":"3417:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:17"},"nodeType":"YulFunctionCall","src":"3452:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:17"},"nodeType":"YulFunctionCall","src":"3471:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:17"},"nodeType":"YulFunctionCall","src":"3445:47:17"},"nodeType":"YulExpressionStatement","src":"3445:47:17"},{"nodeType":"YulAssignment","src":"3501:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:17"},"nodeType":"YulFunctionCall","src":"3509:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:17","type":""}],"src":"3228:419:17"},{"body":{"nodeType":"YulBlock","src":"3759:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:17"},"nodeType":"YulFunctionCall","src":"3777:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:17"},"nodeType":"YulFunctionCall","src":"3770:49:17"},"nodeType":"YulExpressionStatement","src":"3770:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:17","type":""}],"src":"3653:173:17"},{"body":{"nodeType":"YulBlock","src":"3978:220:17","statements":[{"nodeType":"YulAssignment","src":"3988:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:17"},"nodeType":"YulFunctionCall","src":"3995:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:17"},"nodeType":"YulFunctionCall","src":"4071:93:17"},"nodeType":"YulExpressionStatement","src":"4071:93:17"},{"nodeType":"YulAssignment","src":"4173:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:17"},"nodeType":"YulFunctionCall","src":"4180:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:17","type":""}],"src":"3832:366:17"},{"body":{"nodeType":"YulBlock","src":"4375:248:17","statements":[{"nodeType":"YulAssignment","src":"4385:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:17"},"nodeType":"YulFunctionCall","src":"4393:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:17"},"nodeType":"YulFunctionCall","src":"4428:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:17"},"nodeType":"YulFunctionCall","src":"4447:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:17"},"nodeType":"YulFunctionCall","src":"4421:47:17"},"nodeType":"YulExpressionStatement","src":"4421:47:17"},{"nodeType":"YulAssignment","src":"4477:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:17"},"nodeType":"YulFunctionCall","src":"4485:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:17","type":""}],"src":"4204:419:17"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220d9459065998d3afb2bc08a0624d6e4c39e97a3a63ef92ce2a9a34b891119838e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 GASLIMIT SWAP1 PUSH6 0x998D3AFB2BC0 DUP11 MOD 0x24 0xD6 0xE4 0xC3 SWAP15 SWAP8 LOG3 0xA6 RETURNDATACOPY 0xF9 0x2C 0xE2 0xA9 LOG3 0x4B DUP10 GT NOT DUP4 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"216:1893:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:316;;;:::i;:::-;;1382:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1026:316;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;1382:81::-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;847:98::-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;1809:162::-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"IERC677Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onTokenTransfer(address,uint256,bytes)":"a4c0ed36"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":\"IERC677Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf95f5eec36130441a0faba73c2725bcab96df5b6372ed6b3c19c2a1661a3a0664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP6 CREATE2 0xEE 0xC3 PUSH2 0x3044 BYTE 0xF 0xAB 0xA7 EXTCODECOPY 0x27 0x25 0xBC 0xAB SWAP7 0xDF JUMPDEST PUSH4 0x72ED6B3C NOT 0xC2 LOG1 PUSH7 0x1A3A0664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"1318:11630:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf95f5eec36130441a0faba73c2725bcab96df5b6372ed6b3c19c2a1661a3a0664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SWAP6 CREATE2 0xEE 0xC3 PUSH2 0x3044 BYTE 0xF 0xAB 0xA7 EXTCODECOPY 0x27 0x25 0xBC 0xAB SWAP7 0xDF JUMPDEST PUSH4 0x72ED6B3C NOT 0xC2 LOG1 PUSH7 0x1A3A0664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"1318:11630:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol":{"SubscriptionAPI":{"abi":[{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[],"name":"FailedToSendNative","type":"error"},{"inputs":[],"name":"FailedToTransferLink","type":"error"},{"inputs":[],"name":"IndexOutOfRange","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[],"name":"LinkAlreadySet","type":"error"},{"inputs":[],"name":"LinkNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NativeFundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountNative","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldNativeBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNativeBalance","type":"uint256"}],"name":"SubscriptionFundedWithNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_NATIVE_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"subOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"recoverNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_config","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"bool","name":"reentrancyLock","type":"bool"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeNativePPM","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkDiscountPPM","type":"uint32"},{"internalType":"uint8","name":"nativePremiumPercentage","type":"uint8"},{"internalType":"uint8","name":"linkPremiumPercentage","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_currentSubNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalNativeBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"linkNativeFeed","type":"address"}],"name":"setLINKAndLINKNativeFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","reqCount":"- Requests count of subscription.","subOwner":"- owner of the subscription."}},"ownerCancelSubscription(uint256)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"recoverNativeFunds(address)":{"params":{"to":"address to send native to"}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setLINKAndLINKNativeFeed(address,address)":{"params":{"link":"- address of link token","linkNativeFeed":"address of the link native feed"}}},"stateVariables":{"LINK":{"details":"may not be provided upon construction on some chains due to lack of availability"},"LINK_NATIVE_FEED":{"details":"may not be provided upon construction on some chains due to lack of availability"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"LINK()":"1b6b6d23","LINK_NATIVE_FEED()":"72e9d565","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","owner()":"8da5cb5b","ownerCancelSubscription(uint256)":"aa433aff","pendingRequestExists(uint256)":"41af6c87","recoverFunds(address)":"e72f6e30","recoverNativeFunds(address)":"8402595e","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29","s_config()":"088070f5","s_currentSubNonce()":"9d40a6fd","s_totalBalance()":"86fe91c7","s_totalNativeBalance()":"18e3dd27","setLINKAndLINKNativeFeed(address,address)":"65982744","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9","withdrawNative(address)":"2f622e6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNative\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToTransferLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeFundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLink\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNativeBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNativeBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFundedWithNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_NATIVE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"subOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_config\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"reentrancyLock\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeNativePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkDiscountPPM\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"nativePremiumPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"linkPremiumPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentSubNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalNativeBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkNativeFeed\",\"type\":\"address\"}],\"name\":\"setLINKAndLINKNativeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"reqCount\":\"- Requests count of subscription.\",\"subOwner\":\"- owner of the subscription.\"}},\"ownerCancelSubscription(uint256)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"recoverNativeFunds(address)\":{\"params\":{\"to\":\"address to send native to\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setLINKAndLINKNativeFeed(address,address)\":{\"params\":{\"link\":\"- address of link token\",\"linkNativeFeed\":\"address of the link native feed\"}}},\"stateVariables\":{\"LINK\":{\"details\":\"may not be provided upon construction on some chains due to lack of availability\"},\"LINK_NATIVE_FEED\":{\"details\":\"may not be provided upon construction on some chains due to lack of availability\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint256)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"recoverNativeFunds(address)\":{\"notice\":\"Recover native sent with transfer/call/send instead of fundSubscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setLINKAndLINKNativeFeed(address,address)\":{\"notice\":\"set the LINK token contract and link native feed to be used by this coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":\"SubscriptionAPI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  function _requireSufficientBalance(bool condition) internal pure {\\n    if (!condition) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function _requireValidSubscription(address subOwner) internal pure {\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n  }\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    _requireSufficientBalance(amount > 0);\\n    s_withdrawableTokens = 0;\\n    s_totalBalance -= amount;\\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    uint96 amount = s_withdrawableNative;\\n    _requireSufficientBalance(amount > 0);\\n    // Prevent re-entrancy by updating state before transfer.\\n    s_withdrawableNative = 0;\\n    s_totalNativeBalance -= amount;\\n    _mustSendNative(recipient, amount);\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(oldOwner);\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    _mustSendNative(to, uint256(nativeBalance));\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n\\n  function _mustSendNative(address to, uint256 amount) internal {\\n    (bool success, ) = to.call{value: amount}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3687ca9adb25fa3b7645a1f7840e73f8ca3d87dd5f19ebc93cea76db5866717e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1012,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"LINK","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)371"},{"astId":1016,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"LINK_NATIVE_FEED","offset":0,"slot":"3","type":"t_contract(AggregatorV3Interface)248"},{"astId":1102,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage))"},{"astId":1107,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subscriptionConfigs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(SubscriptionConfig)1088_storage)"},{"astId":1112,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Subscription)1080_storage)"},{"astId":1114,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_currentSubNonce","offset":0,"slot":"7","type":"t_uint64"},{"astId":1117,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_subIds","offset":0,"slot":"8","type":"t_struct(UintSet)854_storage"},{"astId":1119,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_totalBalance","offset":0,"slot":"10","type":"t_uint96"},{"astId":1121,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_totalNativeBalance","offset":12,"slot":"10","type":"t_uint96"},{"astId":1123,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_withdrawableTokens","offset":0,"slot":"11","type":"t_uint96"},{"astId":1125,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_withdrawableNative","offset":12,"slot":"11","type":"t_uint96"},{"astId":1207,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"s_config","offset":0,"slot":"12","type":"t_struct(Config)1204_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)248":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)371":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)","numberOfBytes":"32","value":"t_struct(ConsumerConfig)1095_storage"},"t_mapping(t_uint256,t_struct(Subscription)1080_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1080_storage"},"t_mapping(t_uint256,t_struct(SubscriptionConfig)1088_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)1088_storage"},"t_struct(Config)1204_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Config","members":[{"astId":1187,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":1189,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":1191,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":1193,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":1195,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"},{"astId":1197,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"fulfillmentFlatFeeNativePPM","offset":15,"slot":"0","type":"t_uint32"},{"astId":1199,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"fulfillmentFlatFeeLinkDiscountPPM","offset":19,"slot":"0","type":"t_uint32"},{"astId":1201,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nativePremiumPercentage","offset":23,"slot":"0","type":"t_uint8"},{"astId":1203,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"linkPremiumPercentage","offset":24,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(ConsumerConfig)1095_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.ConsumerConfig","members":[{"astId":1090,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"active","offset":0,"slot":"0","type":"t_bool"},{"astId":1092,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nonce","offset":1,"slot":"0","type":"t_uint64"},{"astId":1094,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"pendingReqCount","offset":9,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Set)382_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":377,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":381,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(Subscription)1080_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Subscription","members":[{"astId":1075,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":1077,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"nativeBalance","offset":12,"slot":"0","type":"t_uint96"},{"astId":1079,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"reqCount","offset":24,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)1088_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.SubscriptionConfig","members":[{"astId":1082,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1084,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1087,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_struct(UintSet)854_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":853,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol:SubscriptionAPI","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)382_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint256)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"recoverNativeFunds(address)":{"notice":"Recover native sent with transfer/call/send instead of fundSubscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."},"setLINKAndLINKNativeFeed(address,address)":{"notice":"set the LINK token contract and link native feed to be used by this coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol":{"VRFConsumerBaseV2Plus":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinatorV2Plus.2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBaseV2Plus, and caninitialize VRFConsumerBaseV2Plus's attributes in their constructor asshown:contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {constructor(<other arguments>, address _vrfCoordinator, address _subOwner)VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create a subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords, extraArgs),see (IVRFCoordinatorV2Plus for a description of the arguments).Once the VRFCoordinatorV2Plus has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":\"VRFConsumerBaseV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2331,"contract":"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol:VRFConsumerBaseV2Plus","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2480"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IVRFCoordinatorV2Plus)2480":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol":{"IVRFCoordinatorV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"params":{"req":"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args"},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"params\":{\"req\":\"- a struct containing following fields for randomness request: keyHash - Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost. subId  - The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash. requestConfirmations - How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200]. callbackGasLimit - How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit] numWords - The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle. extraArgs - abi-encoded extra args\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":\"IVRFCoordinatorV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol":{"IVRFMigratableConsumerV2Plus":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"inputs":[{"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This interface is designed to be used in VRFConsumerBaseV2Plus.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"setCoordinator(address)":"8ea98117"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface is designed to be used in VRFConsumerBaseV2Plus.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"}},\"notice\":\"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":\"IVRFMigratableConsumerV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"}},"notice":"The IVRFMigratableConsumerV2Plus interface defines themethod required to be implemented by all V2Plus consumers.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol":{"IVRFSubscriptionV2Plus":{"abi":[{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","owner":"- owner of the subscription.","reqCount":"- Requests count of subscription."}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","createSubscription()":"a21a23e4","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","pendingRequestExists(uint256)":"41af6c87","removeConsumer(uint256,address)":"cb631797","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- Requests count of subscription.\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"notice\":\"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":\"IVRFSubscriptionV2Plus\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."}},"notice":"The IVRFSubscriptionV2Plus interface defines the subscriptionrelated methods implemented by the V2Plus coordinator.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol":{"VRFV2PlusClient":{"abi":[{"inputs":[],"name":"EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60fe610052600b82828239805160001a607314610045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220405c1e147c77f044c42ceae8d773440e741faf54a308c62c44181607d661cf1764736f6c63430008130033","opcodes":"PUSH1 0xFE PUSH2 0x52 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x45 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x5C 0x1E EQ PUSH29 0x77F044C42CEAE8D773440E741FAF54A308C62C44181607D661CF176473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"82:558:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EXTRA_ARGS_V1_TAG_2593":{"entryPoint":82,"id":2593,"parameterSlots":0,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack_library":{"entryPoint":162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed":{"entryPoint":175,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":118,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:528:17","statements":[{"body":{"nodeType":"YulBlock","src":"51:105:17","statements":[{"nodeType":"YulAssignment","src":"61:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"83:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:17"},"nodeType":"YulFunctionCall","src":"72:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:17","type":""}],"src":"7:149:17"},{"body":{"nodeType":"YulBlock","src":"233:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"250:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"272:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"255:16:17"},"nodeType":"YulFunctionCall","src":"255:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"243:6:17"},"nodeType":"YulFunctionCall","src":"243:36:17"},"nodeType":"YulExpressionStatement","src":"243:36:17"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack_library","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"221:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"228:3:17","type":""}],"src":"162:123:17"},{"body":{"nodeType":"YulBlock","src":"395:130:17","statements":[{"nodeType":"YulAssignment","src":"405:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"417:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"428:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"413:3:17"},"nodeType":"YulFunctionCall","src":"413:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"405:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"491:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"504:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"500:3:17"},"nodeType":"YulFunctionCall","src":"500:17:17"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack_library","nodeType":"YulIdentifier","src":"441:49:17"},"nodeType":"YulFunctionCall","src":"441:77:17"},"nodeType":"YulExpressionStatement","src":"441:77:17"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"367:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"379:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"390:4:17","type":""}],"src":"291:234:17"}]},"contents":"{\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220405c1e147c77f044c42ceae8d773440e741faf54a308c62c44181607d661cf1764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7514AB4 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x5C 0x1E EQ PUSH29 0x77F044C42CEAE8D773440E741FAF54A308C62C44181607D661CF176473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"82:558:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;161:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;211:28;161:79;:::o;7:149:17:-;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:123::-;255:23;272:5;255:23;:::i;:::-;250:3;243:36;162:123;;:::o;291:234::-;390:4;428:2;417:9;413:18;405:26;;441:77;515:1;504:9;500:17;491:6;441:77;:::i;:::-;291:234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"50800","executionCost":"127","totalCost":"50927"},"external":{"EXTRA_ARGS_V1_TAG()":"297"},"internal":{"_argsToBytes(struct VRFV2PlusClient.ExtraArgsV1 memory)":"infinite"}},"methodIdentifiers":{"EXTRA_ARGS_V1_TAG()":"f7514ab4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":\"VRFV2PlusClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol":{"VRFCoordinatorV2_5Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPrice","type":"uint96"},{"internalType":"int256","name":"_weiPerUnitLink","type":"int256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[],"name":"FailedToSendNative","type":"error"},{"inputs":[],"name":"FailedToTransferLink","type":"error"},{"inputs":[],"name":"IndexOutOfRange","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidExtraArgsTag","type":"error"},{"inputs":[],"name":"InvalidRandomWords","type":"error"},{"inputs":[],"name":"InvalidRequest","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[],"name":"LinkAlreadySet","type":"error"},{"inputs":[],"name":"LinkNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"NotImplemented","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[],"name":"ConfigSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NativeFundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"nativePayment","type":"bool"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"bool","name":"onlyPremium","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":false,"internalType":"bytes","name":"extraArgs","type":"bytes"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountLink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountNative","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldNativeBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newNativeBalance","type":"uint256"}],"name":"SubscriptionFundedWithNative","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"subId","type":"uint256"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_NATIVE_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"consumerIsAdded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"},{"internalType":"uint256[]","name":"_words","type":"uint256[]"}],"name":"fulfillRandomWordsWithOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"fundSubscriptionWithNative","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"getActiveSubscriptionIds","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint96","name":"nativeBalance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"subOwner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_base_fee","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_gas_price","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_wei_per_unit_link","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"recoverNativeFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_subId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct VRFV2PlusClient.RandomWordsRequest","name":"_req","type":"tuple"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_config","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"bool","name":"reentrancyLock","type":"bool"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeNativePPM","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkDiscountPPM","type":"uint32"},{"internalType":"uint8","name":"nativePremiumPercentage","type":"uint8"},{"internalType":"uint8","name":"linkPremiumPercentage","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_currentSubNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalNativeBalance","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"linkNativeFeed","type":"address"}],"name":"setLINKAndLINKNativeFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawNative","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint256)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint256,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint256,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);","returns":{"subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill","_words":"user-provided random words"}},"fundSubscription(uint256,uint256)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"fundSubscriptionWithNative(uint256)":{"params":{"subId":"- ID of the subscription"}},"getActiveSubscriptionIds(uint256,uint256)":{"details":"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state","params":{"maxCount":"maximum number of subscriptions to return, 0 to return all","startIndex":"index of the subscription to start from"}},"getSubscription(uint256)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","nativeBalance":"- native balance of the subscription in wei.","reqCount":"- Requests count of subscription.","subOwner":"- owner of the subscription."}},"ownerCancelSubscription(uint256)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"recoverNativeFunds(address)":{"params":{"to":"address to send native to"}},"removeConsumer(uint256,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestSubscriptionOwnerTransfer(uint256,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setLINKAndLINKNativeFeed(address,address)":{"params":{"link":"- address of link token","linkNativeFeed":"address of the link native feed"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1265":{"entryPoint":null,"id":1265,"parameterSlots":0,"returnSlots":0},"@_2741":{"entryPoint":null,"id":2741,"parameterSlots":3,"returnSlots":0},"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":425,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":1239,"id":193,"parameterSlots":0,"returnSlots":0},"@setConfig_2765":{"entryPoint":728,"id":2765,"parameterSlots":0,"returnSlots":0},"abi_decode_t_int256_fromMemory":{"entryPoint":1500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96_fromMemory":{"entryPoint":1441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory":{"entryPoint":1523,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":1673,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1940,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1712,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1826,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_int256":{"entryPoint":1464,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":1391,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1386,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1860,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":1632,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1746,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":1474,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":1415,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4840:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:65:17","statements":[{"nodeType":"YulAssignment","src":"388:49:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:17","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:38:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:109:17"},{"body":{"nodeType":"YulBlock","src":"491:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:17"},"nodeType":"YulFunctionCall","src":"549:12:17"},"nodeType":"YulExpressionStatement","src":"549:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:17"},"nodeType":"YulFunctionCall","src":"521:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:17"},"nodeType":"YulFunctionCall","src":"511:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:17"},"nodeType":"YulFunctionCall","src":"504:42:17"},"nodeType":"YulIf","src":"501:62:17"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:17","type":""}],"src":"449:120:17"},{"body":{"nodeType":"YulBlock","src":"637:79:17","statements":[{"nodeType":"YulAssignment","src":"647:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:17"},"nodeType":"YulFunctionCall","src":"656:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:17"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:17"},"nodeType":"YulFunctionCall","src":"678:32:17"},"nodeType":"YulExpressionStatement","src":"678:32:17"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:17","type":""}],"src":"575:141:17"},{"body":{"nodeType":"YulBlock","src":"766:32:17","statements":[{"nodeType":"YulAssignment","src":"776:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"787:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"776:7:17"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"748:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"758:7:17","type":""}],"src":"722:76:17"},{"body":{"nodeType":"YulBlock","src":"846:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"902:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"914:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"904:6:17"},"nodeType":"YulFunctionCall","src":"904:12:17"},"nodeType":"YulExpressionStatement","src":"904:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"869:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"893:5:17"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"876:16:17"},"nodeType":"YulFunctionCall","src":"876:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"866:2:17"},"nodeType":"YulFunctionCall","src":"866:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"859:6:17"},"nodeType":"YulFunctionCall","src":"859:42:17"},"nodeType":"YulIf","src":"856:62:17"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"839:5:17","type":""}],"src":"804:120:17"},{"body":{"nodeType":"YulBlock","src":"992:79:17","statements":[{"nodeType":"YulAssignment","src":"1002:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1017:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1011:5:17"},"nodeType":"YulFunctionCall","src":"1011:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1002:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1059:5:17"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1033:25:17"},"nodeType":"YulFunctionCall","src":"1033:32:17"},"nodeType":"YulExpressionStatement","src":"1033:32:17"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"970:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"978:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"986:5:17","type":""}],"src":"930:141:17"},{"body":{"nodeType":"YulBlock","src":"1185:549:17","statements":[{"body":{"nodeType":"YulBlock","src":"1231:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1233:77:17"},"nodeType":"YulFunctionCall","src":"1233:79:17"},"nodeType":"YulExpressionStatement","src":"1233:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1206:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1202:3:17"},"nodeType":"YulFunctionCall","src":"1202:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1227:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1198:3:17"},"nodeType":"YulFunctionCall","src":"1198:32:17"},"nodeType":"YulIf","src":"1195:119:17"},{"nodeType":"YulBlock","src":"1324:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1339:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1353:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1343:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1368:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1413:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1424:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1409:3:17"},"nodeType":"YulFunctionCall","src":"1409:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1433:7:17"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1378:30:17"},"nodeType":"YulFunctionCall","src":"1378:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1368:6:17"}]}]},{"nodeType":"YulBlock","src":"1461:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1476:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1490:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1480:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1506:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1551:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1562:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1547:3:17"},"nodeType":"YulFunctionCall","src":"1547:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1571:7:17"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1516:30:17"},"nodeType":"YulFunctionCall","src":"1516:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1506:6:17"}]}]},{"nodeType":"YulBlock","src":"1599:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1614:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1628:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1618:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1644:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1689:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1700:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1685:3:17"},"nodeType":"YulFunctionCall","src":"1685:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1709:7:17"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"1654:30:17"},"nodeType":"YulFunctionCall","src":"1654:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1644:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1139:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1150:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1162:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1170:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1178:6:17","type":""}],"src":"1077:657:17"},{"body":{"nodeType":"YulBlock","src":"1836:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1853:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1858:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1846:6:17"},"nodeType":"YulFunctionCall","src":"1846:19:17"},"nodeType":"YulExpressionStatement","src":"1846:19:17"},{"nodeType":"YulAssignment","src":"1874:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1893:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1898:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1889:3:17"},"nodeType":"YulFunctionCall","src":"1889:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1874:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1808:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1813:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1824:11:17","type":""}],"src":"1740:169:17"},{"body":{"nodeType":"YulBlock","src":"2021:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2043:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2051:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2039:3:17"},"nodeType":"YulFunctionCall","src":"2039:14:17"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"2055:26:17","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:17"},"nodeType":"YulFunctionCall","src":"2032:50:17"},"nodeType":"YulExpressionStatement","src":"2032:50:17"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2013:6:17","type":""}],"src":"1915:174:17"},{"body":{"nodeType":"YulBlock","src":"2241:220:17","statements":[{"nodeType":"YulAssignment","src":"2251:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2317:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2322:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2258:58:17"},"nodeType":"YulFunctionCall","src":"2258:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2251:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2423:3:17"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"2334:88:17"},"nodeType":"YulFunctionCall","src":"2334:93:17"},"nodeType":"YulExpressionStatement","src":"2334:93:17"},{"nodeType":"YulAssignment","src":"2436:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2447:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2452:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2443:3:17"},"nodeType":"YulFunctionCall","src":"2443:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2436:3:17"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2229:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2237:3:17","type":""}],"src":"2095:366:17"},{"body":{"nodeType":"YulBlock","src":"2638:248:17","statements":[{"nodeType":"YulAssignment","src":"2648:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2660:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:17"},"nodeType":"YulFunctionCall","src":"2656:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2648:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2695:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2706:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:17"},"nodeType":"YulFunctionCall","src":"2691:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2714:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2720:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2710:3:17"},"nodeType":"YulFunctionCall","src":"2710:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2684:6:17"},"nodeType":"YulFunctionCall","src":"2684:47:17"},"nodeType":"YulExpressionStatement","src":"2684:47:17"},{"nodeType":"YulAssignment","src":"2740:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2874:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2748:124:17"},"nodeType":"YulFunctionCall","src":"2748:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2740:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2618:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2633:4:17","type":""}],"src":"2467:419:17"},{"body":{"nodeType":"YulBlock","src":"2998:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3020:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3016:3:17"},"nodeType":"YulFunctionCall","src":"3016:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3032:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3009:6:17"},"nodeType":"YulFunctionCall","src":"3009:49:17"},"nodeType":"YulExpressionStatement","src":"3009:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2990:6:17","type":""}],"src":"2892:173:17"},{"body":{"nodeType":"YulBlock","src":"3217:220:17","statements":[{"nodeType":"YulAssignment","src":"3227:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3293:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3298:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3234:58:17"},"nodeType":"YulFunctionCall","src":"3234:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3227:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3399:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"3310:88:17"},"nodeType":"YulFunctionCall","src":"3310:93:17"},"nodeType":"YulExpressionStatement","src":"3310:93:17"},{"nodeType":"YulAssignment","src":"3412:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3423:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3428:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3419:3:17"},"nodeType":"YulFunctionCall","src":"3419:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3412:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3205:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3213:3:17","type":""}],"src":"3071:366:17"},{"body":{"nodeType":"YulBlock","src":"3614:248:17","statements":[{"nodeType":"YulAssignment","src":"3624:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3636:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3647:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3632:3:17"},"nodeType":"YulFunctionCall","src":"3632:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3624:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3671:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3682:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3667:3:17"},"nodeType":"YulFunctionCall","src":"3667:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3690:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3686:3:17"},"nodeType":"YulFunctionCall","src":"3686:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3660:6:17"},"nodeType":"YulFunctionCall","src":"3660:47:17"},"nodeType":"YulExpressionStatement","src":"3660:47:17"},{"nodeType":"YulAssignment","src":"3716:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3850:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3724:124:17"},"nodeType":"YulFunctionCall","src":"3724:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3716:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3594:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3609:4:17","type":""}],"src":"3443:419:17"},{"body":{"nodeType":"YulBlock","src":"3974:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3996:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4004:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3992:3:17"},"nodeType":"YulFunctionCall","src":"3992:14:17"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4008:24:17","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3985:6:17"},"nodeType":"YulFunctionCall","src":"3985:48:17"},"nodeType":"YulExpressionStatement","src":"3985:48:17"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3966:6:17","type":""}],"src":"3868:172:17"},{"body":{"nodeType":"YulBlock","src":"4192:220:17","statements":[{"nodeType":"YulAssignment","src":"4202:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4268:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4209:58:17"},"nodeType":"YulFunctionCall","src":"4209:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4202:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4374:3:17"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"4285:88:17"},"nodeType":"YulFunctionCall","src":"4285:93:17"},"nodeType":"YulExpressionStatement","src":"4285:93:17"},{"nodeType":"YulAssignment","src":"4387:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4398:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4403:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:17"},"nodeType":"YulFunctionCall","src":"4394:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4387:3:17"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4180:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4188:3:17","type":""}],"src":"4046:366:17"},{"body":{"nodeType":"YulBlock","src":"4589:248:17","statements":[{"nodeType":"YulAssignment","src":"4599:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4622:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4607:3:17"},"nodeType":"YulFunctionCall","src":"4607:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4599:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4657:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:17"},"nodeType":"YulFunctionCall","src":"4642:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4665:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4671:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4661:3:17"},"nodeType":"YulFunctionCall","src":"4661:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4635:6:17"},"nodeType":"YulFunctionCall","src":"4635:47:17"},"nodeType":"YulExpressionStatement","src":"4635:47:17"},{"nodeType":"YulAssignment","src":"4691:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4825:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4699:124:17"},"nodeType":"YulFunctionCall","src":"4699:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4691:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4569:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4584:4:17","type":""}],"src":"4418:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96t_int256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040526001600e556064600f553480156200001b57600080fd5b506040516200669a3803806200669a8339818101604052810190620000419190620005f3565b338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ad90620006b0565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200013d576200013c81620001a960201b60201c565b5b505050826bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1681525050816bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff16815250508060c08181525050620001a0620002d860201b60201c565b505050620007b6565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200021a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002119062000722565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b620002e8620004d760201b60201c565b604051806101200160405280600061ffff168152602001600063ffffffff168152602001600015158152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600060ff168152602001600060ff16815250600c60008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160066101000a81548160ff02191690831515021790555060608201518160000160076101000a81548163ffffffff021916908363ffffffff160217905550608082015181600001600b6101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600001600f6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160000160136101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160000160176101000a81548160ff021916908360ff1602179055506101008201518160000160186101000a81548160ff021916908360ff1602179055509050507f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be60405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000568576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200055f9062000794565b60405180910390fd5b565b600080fd5b60006bffffffffffffffffffffffff82169050919050565b62000592816200056f565b81146200059e57600080fd5b50565b600081519050620005b28162000587565b92915050565b6000819050919050565b620005cd81620005b8565b8114620005d957600080fd5b50565b600081519050620005ed81620005c2565b92915050565b6000806000606084860312156200060f576200060e6200056a565b5b60006200061f86828701620005a1565b93505060206200063286828701620005a1565b92505060406200064586828701620005dc565b9150509250925092565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620006986018836200064f565b9150620006a58262000660565b602082019050919050565b60006020820190508181036000830152620006cb8162000689565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200070a6017836200064f565b91506200071782620006d2565b602082019050919050565b600060208201905081810360008301526200073d81620006fb565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006200077c6016836200064f565b9150620007898262000744565b602082019050919050565b60006020820190508181036000830152620007af816200076d565b9050919050565b60805160a05160c051615e9f620007fb60003960008181610d66015261116b015260008181610ce10152613280015260008181610d2601526111d30152615e9f6000f3fe60806040526004361061020f5760003560e01c80638b673e7a11610118578063aefb212f116100a0578063dac83d291161006f578063dac83d2914610748578063dc311dd314610771578063dcab3dcf146107b2578063e72f6e30146107dd578063f2fde38b146108065761020f565b8063aefb212f14610690578063b2a7cac5146106cd578063bec4c08c146106f6578063cb6317971461071f5761020f565b80639b1c385e116100e75780639b1c385e146105ab5780639d40a6fd146105e8578063a21a23e414610613578063a4c0ed361461063e578063aa433aff146106675761020f565b80638b673e7a146105105780638da5cb5b14610527578063953e9c751461055257806395b55cfc1461058f5761020f565b806341af6c871161019b57806372e9d5651161016a57806372e9d5651461045157806379ba50971461047c578063808974ff146104935780638402595e146104bc57806386fe91c7146104e55761020f565b806341af6c871461039757806351cff8d9146103d457806364d51a2a146103fd57806365982744146104285761020f565b806313478329116101e257806313478329146102c257806318e3dd27146102ed5780631b6b6d23146103185780631eebc117146103435780632f622e6b1461036e5761020f565b8063088070f51461021457806308e3898e146102475780630ae0954014610270578063115e3c0d14610299575b600080fd5b34801561022057600080fd5b5061022961082f565b60405161023e9998979695949392919061462a565b60405180910390f35b34801561025357600080fd5b5061026e600480360381019061026991906148b8565b6108f0565b005b34801561027c57600080fd5b5061029760048036038101906102929190614927565b610e69565b005b3480156102a557600080fd5b506102c060048036038101906102bb9190614967565b610f80565b005b3480156102ce57600080fd5b506102d7611169565b6040516102e491906149c0565b60405180910390f35b3480156102f957600080fd5b5061030261118d565b60405161030f9190614a02565b60405180910390f35b34801561032457600080fd5b5061032d6111ab565b60405161033a9190614a7c565b60405180910390f35b34801561034f57600080fd5b506103586111d1565b6040516103659190614a02565b60405180910390f35b34801561037a57600080fd5b5061039560048036038101906103909190614ad5565b6111f5565b005b3480156103a357600080fd5b506103be60048036038101906103b99190614b02565b6112e3565b6040516103cb9190614b2f565b60405180910390f35b3480156103e057600080fd5b506103fb60048036038101906103f69190614b4a565b611317565b005b34801561040957600080fd5b5061041261151d565b60405161041f9190614b77565b60405180910390f35b34801561043457600080fd5b5061044f600480360381019061044a9190614b92565b611522565b005b34801561045d57600080fd5b50610466611638565b6040516104739190614bf3565b60405180910390f35b34801561048857600080fd5b5061049161165e565b005b34801561049f57600080fd5b506104ba60048036038101906104b59190614927565b6117f3565b005b3480156104c857600080fd5b506104e360048036038101906104de9190614ad5565b611853565b005b3480156104f157600080fd5b506104fa6119d0565b6040516105079190614a02565b60405180910390f35b34801561051c57600080fd5b506105256119ee565b005b34801561053357600080fd5b5061053c611be5565b6040516105499190614c1d565b60405180910390f35b34801561055e57600080fd5b5061057960048036038101906105749190614927565b611c0e565b6040516105869190614b2f565b60405180910390f35b6105a960048036038101906105a49190614b02565b611c79565b005b3480156105b757600080fd5b506105d260048036038101906105cd9190614c5c565b611e0c565b6040516105df9190614cb4565b60405180910390f35b3480156105f457600080fd5b506105fd612139565b60405161060a9190614cf2565b60405180910390f35b34801561061f57600080fd5b50610628612153565b6040516106359190614cb4565b60405180910390f35b34801561064a57600080fd5b5061066560048036038101906106609190614d68565b61248b565b005b34801561067357600080fd5b5061068e60048036038101906106899190614b02565b6126f9565b005b34801561069c57600080fd5b506106b760048036038101906106b29190614967565b612753565b6040516106c49190614e9a565b60405180910390f35b3480156106d957600080fd5b506106f460048036038101906106ef9190614b02565b612887565b005b34801561070257600080fd5b5061071d60048036038101906107189190614927565b612a98565b005b34801561072b57600080fd5b5061074660048036038101906107419190614927565b612c36565b005b34801561075457600080fd5b5061076f600480360381019061076a9190614927565b612ff5565b005b34801561077d57600080fd5b5061079860048036038101906107939190614b02565b6130f9565b6040516107a9959493929190614f7a565b60405180910390f35b3480156107be57600080fd5b506107c761327e565b6040516107d49190614a02565b60405180910390f35b3480156107e957600080fd5b5061080460048036038101906107ff9190614b4a565b6132a2565b005b34801561081257600080fd5b5061082d60048036038101906108289190614b4a565b613574565b005b600c8060000160009054906101000a900461ffff16908060000160029054906101000a900463ffffffff16908060000160069054906101000a900460ff16908060000160079054906101000a900463ffffffff169080600001600b9054906101000a900463ffffffff169080600001600f9054906101000a900463ffffffff16908060000160139054906101000a900463ffffffff16908060000160179054906101000a900460ff16908060000160189054906101000a900460ff16905089565b60005a90506000601060008681526020019081526020016000206000015403610945576040517f41abc80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060106000868152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820180546109cb90615003565b80601f01602080910402602001604051908101604052809291908181526020018280546109f790615003565b8015610a445780601f10610a1957610100808354040283529160200191610a44565b820191906000526020600020905b815481529060010190602001808311610a2757829003601f168201915b50505050508152505090506000835103610b2657806040015163ffffffff1667ffffffffffffffff811115610a7c57610a7b614775565b5b604051908082528060200260200182016040528015610aaa5781602001602082028036833780820191505090505b50925060005b816040015163ffffffff16811015610b20578581604051602001610ad5929190615034565b6040516020818303038152906040528051906020012060001c848281518110610b0157610b0061505d565b5b6020026020010181815250508080610b18906150bb565b915050610ab0565b50610b6b565b806040015163ffffffff16835114610b6a576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b8786604051602401610b89929190615103565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001600c60000160066101000a81548160ff02191690831515021790555060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff1683604051610c3891906151a4565b60006040518083038160008787f1925050503d8060008114610c76576040519150601f19603f3d011682016040523d82523d6000602084013e610c7b565b606091505b505090506000600c60000160066101000a81548160ff0219169083151502179055506000600185606001516001876060015151610cb891906151bb565b81518110610cc957610cc861505d565b5b602001015160f81c60f81b60f81c60ff1614905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a88610d1a91906151bb565b610d2491906151ef565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff16610d5d9190615231565b905081610da6577f000000000000000000000000000000000000000000000000000000000000000081670de0b6b3a7640000610d9991906151ef565b610da39190615294565b90505b6000819050610dba81848960000151613588565b601060008c81526020019081526020016000206000808201600090556001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff0219169055600282016000610e14919061449a565b505086600001518b7faeb4b4786571e184246d39587f659abf0e26f41f6a3358692250382c0cdb47b78d8487896000604051610e549594939291906152c5565b60405180910390a35050505050505050505050565b81610e73816137cb565b610e7b613883565b600080610e87856138cf565b9150915060008473ffffffffffffffffffffffffffffffffffffffff16826bffffffffffffffffffffffff16604051610ebf9061533e565b60006040518083038185875af1925050503d8060008114610efc576040519150601f19603f3d011682016040523d82523d6000602084013e610f01565b606091505b5050905080610f3c576040517f950b247900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b857f8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c4868585604051610f7093929190615384565b60405180910390a2505050505050565b600073ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361101c576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006006600084815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050816006600085815260200190815260200160002060000160008282829054906101000a90046bffffffffffffffffffffffff1661109a91906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555081600a60008282829054906101000a90046bffffffffffffffffffffffff166110f191906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550827f1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a82848461114e9190615231565b60405161115c929190615034565b60405180910390a2505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a600c9054906101000a90046bffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6111fd613883565b611205613c29565b6000600b600c9054906101000a90046bffffffffffffffffffffffff16905061123e6000826bffffffffffffffffffffffff1611613cb9565b6000600b600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600a600c8282829054906101000a90046bffffffffffffffffffffffff1661129991906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506112df82826bffffffffffffffffffffffff16613cf3565b5050565b60006040517fd623472500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61131f613883565b611327613c29565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113af576040517fc1f0c0a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60009054906101000a90046bffffffffffffffffffffffff1690506113e86000826bffffffffffffffffffffffff1611613cb9565b6000600b60006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600a60008282829054906101000a90046bffffffffffffffffffffffff1661144391906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611519600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016114d192919061543b565b6020604051808303816000875af11580156114f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115149190615490565b613cb9565b5050565b606481565b61152a613c29565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115b2576040517f2d118a6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e59061551a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6117fb613883565b61184f8282600067ffffffffffffffff81111561181b5761181a614775565b5b6040519080825280602002602001820160405280156118495781602001602082028036833780820191505090505b506108f0565b5050565b61185b613c29565b60004790506000600a600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050818111156118d45780826040517fa99da3020000000000000000000000000000000000000000000000000000000081526004016118cb929190615034565b60405180910390fd5b818110156119cb57600081836118ea91906151bb565b905060008473ffffffffffffffffffffffffffffffffffffffff16826040516119129061533e565b60006040518083038185875af1925050503d806000811461194f576040519150601f19603f3d011682016040523d82523d6000602084013e611954565b606091505b505090508061198f576040517f950b247900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4aed7c8eed0496c8c19ea2681fcca25741c1602342e38b045d9f1e8e905d2e9c85836040516119c092919061555b565b60405180910390a150505b505050565b600a60009054906101000a90046bffffffffffffffffffffffff1681565b6119f6613c29565b604051806101200160405280600061ffff168152602001600063ffffffff168152602001600015158152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600060ff168152602001600060ff16815250600c60008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160066101000a81548160ff02191690831515021790555060608201518160000160076101000a81548163ffffffff021916908363ffffffff160217905550608082015181600001600b6101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600001600f6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160000160136101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160000160176101000a81548160ff021916908360ff1602179055506101008201518160000160186101000a81548160ff021916908360ff1602179055509050507f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be60405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160009054906101000a900460ff16905092915050565b611c81613883565b611cc06005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613d9b565b600060066000838152602001908152602001600020600001600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690503460066000848152602001908152602001600020600001600c8282829054906101000a90046bffffffffffffffffffffffff16611d3e91906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555034600a600c8282829054906101000a90046bffffffffffffffffffffffff16611d9591906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550817f7603b205d03651ee812f803fccde89f1012e545a9c99f0abfea9cedd0fd8e902823484611df29190615231565b604051611e00929190615034565b60405180910390a25050565b6000611e16613883565b816020013533611e268282611c0e565b611e695781816040517f79bfd401000000000000000000000000000000000000000000000000000000008152600401611e60929190615584565b60405180910390fd5b600084602001359050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611f0e576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e6000815480929190611f23906150bb565b9190505590506000600f6000815480929190611f3e906150bb565b9190505590506000611f66611f61898060a00190611f5c91906155bc565b613e04565b613efc565b9050604051806080016040528089602001358152602001896060016020810190611f90919061564b565b63ffffffff168152602001896080016020810190611fae919061564b565b63ffffffff168152602001898060a00190611fc991906155bc565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250601060008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548163ffffffff021916908363ffffffff160217905550606082015181600201908161208f919061581a565b509050503373ffffffffffffffffffffffffffffffffffffffff16886020013589600001357feb0e3652e0f44f417695e6e90f2f42c99b65cd7169074c5a654b16b9748c3a4e86868d60400160208101906120ea9190615918565b8e60600160208101906120fd919061564b565b8f6080016020810190612110919061564b565b896040516121239695949392919061598f565b60405180910390a4829650505050505050919050565b600760009054906101000a900467ffffffffffffffff1681565b600061215d613883565b6000600760009054906101000a900467ffffffffffffffff1690503360014361218691906151bb565b40308360405160200161219c9493929190615aa0565b6040516020818303038152906040528051906020012060001c91506001816121c49190615aee565b600760006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008067ffffffffffffffff81111561220857612207614775565b5b6040519080825280602002602001820160405280156122365781602001602082028036833780820191505090505b509050604051806060016040528060006bffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600067ffffffffffffffff168152506006600085815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060408201518160000160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555090505060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001828152506005600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906124359291906144da565b5090505061244d836008613f9490919063ffffffff16565b50827f1d3015d7ba850fa198dc7b1a3f5d42779313a681035f77c8c03764c61005518d3360405161247e9190614c1d565b60405180910390a2505090565b612493613883565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461251a576040517f44b0e3c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208282905014612557576040517f8129bbcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082828101906125689190614b02565b90506125a96005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613d9b565b60006006600083815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050846006600084815260200190815260200160002060000160008282829054906101000a90046bffffffffffffffffffffffff1661262791906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600a60008282829054906101000a90046bffffffffffffffffffffffff1661267e91906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550817f1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a8287846126db9190615231565b6040516126e9929190615034565b60405180910390a2505050505050565b612701613c29565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061274581613d9b565b61274f8282613fae565b5050565b606060006127616008614142565b905080841061279c576040517f1390f2a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083856127aa9190615231565b9050818111806127ba5750600084145b6127c457806127c6565b815b9050600085826127d691906151bb565b90508067ffffffffffffffff8111156127f2576127f1614775565b5b6040519080825280602002602001820160405280156128205781602001602082028036833780820191505090505b50935060005b8181101561287d5761284d878261283d9190615231565b600861415790919063ffffffff16565b8582815181106128605761285f61505d565b5b60200260200101818152505080612876906150bb565b9050612826565b5050505092915050565b61288f613883565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506128d381613d9b565b3373ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129af576005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fd084e9750000000000000000000000000000000000000000000000000000000081526004016129a69190614c1d565b60405180910390fd5b336005600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006005600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550817fd4114ab6e9af9f597c52041f32d62dc57c5c4e4c0d4427006069635e216c93868233604051612a8c929190615b2a565b60405180910390a25050565b81612aa2816137cb565b612aaa613883565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002090508060000160009054906101000a900460ff1615612b1b5750612c31565b6000600560008681526020019081526020016000206002019050606461ffff16818054905003612b77576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260000160006101000a81548160ff02191690831515021790555080849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550847f1e980d04aa7648e205713e5e8ea3808672ac163d10936d36f91b2c88ac1575e185604051612c269190614c1d565b60405180910390a250505b505050565b81612c40816137cb565b8282612c4c8282611c0e565b612c8f5781816040517f79bfd401000000000000000000000000000000000000000000000000000000008152600401612c86929190615584565b60405180910390fd5b612c97613883565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060000160009054906101000a900460ff16612d3b5784846040517f79bfd401000000000000000000000000000000000000000000000000000000008152600401612d32929190615584565b60405180910390fd5b600060056000878152602001908152602001600020600201805480602002602001604051908101604052809291908181526020018280548015612dd357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612d89575b50505050509050600060018251612dea91906151bb565b905060005b8251811015612f47578673ffffffffffffffffffffffffffffffffffffffff16838281518110612e2257612e2161505d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603612f36576000838381518110612e5a57612e5961505d565b5b6020026020010151905080600560008b81526020019081526020016000206002018381548110612e8d57612e8c61505d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560008a8152602001908152602001600020600201805480612efb57612efa615b53565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550612f47565b80612f40906150bb565b9050612def565b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060000160006101000a81548160ff021916908315150217905550867f32158c6058347c1601b2d12bc696ac6901d8a9a9aa3ba10c27ab0a983e8425a787604051612fe49190614c1d565b60405180910390a250505050505050565b81612fff816137cb565b613007613883565b60006005600085815260200190815260200160002090508273ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146130f357828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550837f21a4dad170a6bf476c31bbcf4a16628295b0e450672eec25d7c93308e05344a133856040516130ea929190615b2a565b60405180910390a25b50505050565b60008060008060606005600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915061314382613d9b565b6006600087815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff1660066000888152602001908152602001600020600001600c9054906101000a90046bffffffffffffffffffffffff166006600089815260200190815260200160002060000160189054906101000a900467ffffffffffffffff1684600560008b81526020019081526020016000206002018080548060200260200160405190810160405280929190818152602001828054801561326457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161321a575b505050505090509450945094509450945091939590929450565b7f000000000000000000000000000000000000000000000000000000000000000081565b6132aa613c29565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603613332576040517fc1f0c0a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161338f9190614c1d565b602060405180830381865afa1580156133ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133d09190615b97565b90506000600a60009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050818111156134465780826040517fa99da30200000000000000000000000000000000000000000000000000000000815260040161343d929190615034565b60405180910390fd5b8181101561356f576000818361345c91906151bb565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016134bb929190615bc4565b6020604051808303816000875af11580156134da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134fe9190615490565b613534576040517f7c07fc4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b4366008482604051613565929190615bc4565b60405180910390a1505b505050565b61357c613c29565b61358581614171565b50565b600060066000838152602001908152602001600020905082156136b757600081600001600c9054906101000a90046bffffffffffffffffffffffff169050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff16101561361c576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848161362891906153fb565b82600001600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600b600c8282829054906101000a90046bffffffffffffffffffffffff1661368391906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550506137c5565b60008160000160009054906101000a90046bffffffffffffffffffffffff169050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff16101561372e576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848161373a91906153fb565b8260000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600b60008282829054906101000a90046bffffffffffffffffffffffff1661379591906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550505b50505050565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061380f81613d9b565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461387f57806040517fd8a3fb520000000000000000000000000000000000000000000000000000000081526004016138769190614c1d565b60405180910390fd5b5050565b600c60000160069054906101000a900460ff16156138cd576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060006005600085815260200190815260200160002060020190506006600085815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff16925060066000858152602001908152602001600020600001600c9054906101000a90046bffffffffffffffffffffffff16915060008180549050905060005b81811015613a4d57600460008483815481106139795761397861505d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549067ffffffffffffffff02191690556000820160096101000a81549067ffffffffffffffff0219169055505080613a46906150bb565b905061395a565b5060056000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000613ac09190614564565b505060066000868152602001908152602001600020600080820160006101000a8154906bffffffffffffffffffffffff021916905560008201600c6101000a8154906bffffffffffffffffffffffff02191690556000820160186101000a81549067ffffffffffffffff02191690555050613b4585600861429d90919063ffffffff16565b506000846bffffffffffffffffffffffff1614613bb45783600a60008282829054906101000a90046bffffffffffffffffffffffff16613b8591906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b6000836bffffffffffffffffffffffff1614613c225782600a600c8282829054906101000a90046bffffffffffffffffffffffff16613bf391906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b5050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613cae90615c39565b60405180910390fd5b565b80613cf0576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051613d199061533e565b60006040518083038185875af1925050503d8060008114613d56576040519150601f19603f3d011682016040523d82523d6000602084013e613d5b565b606091505b5050905080613d96576040517f950b247900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613e01576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b613e0c614585565b60008383905003613e30576040518060200160405280600015158152509050613ef6565b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838390613e7d9190615c90565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614613ed3576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82826004908092613ee693929190615cf9565b810190613ef39190615d8a565b90505b92915050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401613f309190615de2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b6000613fa6836000018360001b6142b7565b905092915050565b600080613fba846138cf565b91509150600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561402c57506000826bffffffffffffffffffffffff1614155b156140e8576140e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856bffffffffffffffffffffffff166040518363ffffffff1660e01b815260040161409f929190615bc4565b6020604051808303816000875af11580156140be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140e29190615490565b613cb9565b5b61410083826bffffffffffffffffffffffff16613cf3565b837f8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c484848460405161413493929190615384565b60405180910390a250505050565b600061415082600001614327565b9050919050565b60006141668360000183614338565b60001c905092915050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036141df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016141d690615e49565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60006142af836000018360001b614363565b905092915050565b60006142c38383614477565b61431c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050614321565b600090505b92915050565b600081600001805490509050919050565b60008260000182815481106143505761434f61505d565b5b9060005260206000200154905092915050565b6000808360010160008481526020019081526020016000205490506000811461446b57600060018261439591906151bb565b90506000600186600001805490506143ad91906151bb565b905081811461441c5760008660000182815481106143ce576143cd61505d565b5b90600052602060002001549050808760000184815481106143f2576143f161505d565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806144305761442f615b53565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050614471565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b5080546144a690615003565b6000825580601f106144b857506144d7565b601f0160209004906000526020600020908101906144d6919061459a565b5b50565b828054828255906000526020600020908101928215614553579160200282015b828111156145525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906144fa565b5b509050614560919061459a565b5090565b5080546000825590600052602060002090810190614582919061459a565b50565b60405180602001604052806000151581525090565b5b808211156145b357600081600090555060010161459b565b5090565b600061ffff82169050919050565b6145ce816145b7565b82525050565b600063ffffffff82169050919050565b6145ed816145d4565b82525050565b60008115159050919050565b614608816145f3565b82525050565b600060ff82169050919050565b6146248161460e565b82525050565b600061012082019050614640600083018c6145c5565b61464d602083018b6145e4565b61465a604083018a6145ff565b61466760608301896145e4565b61467460808301886145e4565b61468160a08301876145e4565b61468e60c08301866145e4565b61469b60e083018561461b565b6146a961010083018461461b565b9a9950505050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6146de816146cb565b81146146e957600080fd5b50565b6000813590506146fb816146d5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061472c82614701565b9050919050565b61473c81614721565b811461474757600080fd5b50565b60008135905061475981614733565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6147ad82614764565b810181811067ffffffffffffffff821117156147cc576147cb614775565b5b80604052505050565b60006147df6146b7565b90506147eb82826147a4565b919050565b600067ffffffffffffffff82111561480b5761480a614775565b5b602082029050602081019050919050565b600080fd5b600061483461482f846147f0565b6147d5565b905080838252602082019050602084028301858111156148575761485661481c565b5b835b81811015614880578061486c88826146ec565b845260208401935050602081019050614859565b5050509392505050565b600082601f83011261489f5761489e61475f565b5b81356148af848260208601614821565b91505092915050565b6000806000606084860312156148d1576148d06146c1565b5b60006148df868287016146ec565b93505060206148f08682870161474a565b925050604084013567ffffffffffffffff811115614911576149106146c6565b5b61491d8682870161488a565b9150509250925092565b6000806040838503121561493e5761493d6146c1565b5b600061494c858286016146ec565b925050602061495d8582860161474a565b9150509250929050565b6000806040838503121561497e5761497d6146c1565b5b600061498c858286016146ec565b925050602061499d858286016146ec565b9150509250929050565b6000819050919050565b6149ba816149a7565b82525050565b60006020820190506149d560008301846149b1565b92915050565b60006bffffffffffffffffffffffff82169050919050565b6149fc816149db565b82525050565b6000602082019050614a1760008301846149f3565b92915050565b6000819050919050565b6000614a42614a3d614a3884614701565b614a1d565b614701565b9050919050565b6000614a5482614a27565b9050919050565b6000614a6682614a49565b9050919050565b614a7681614a5b565b82525050565b6000602082019050614a916000830184614a6d565b92915050565b6000614aa282614701565b9050919050565b614ab281614a97565b8114614abd57600080fd5b50565b600081359050614acf81614aa9565b92915050565b600060208284031215614aeb57614aea6146c1565b5b6000614af984828501614ac0565b91505092915050565b600060208284031215614b1857614b176146c1565b5b6000614b26848285016146ec565b91505092915050565b6000602082019050614b4460008301846145ff565b92915050565b600060208284031215614b6057614b5f6146c1565b5b6000614b6e8482850161474a565b91505092915050565b6000602082019050614b8c60008301846145c5565b92915050565b60008060408385031215614ba957614ba86146c1565b5b6000614bb78582860161474a565b9250506020614bc88582860161474a565b9150509250929050565b6000614bdd82614a49565b9050919050565b614bed81614bd2565b82525050565b6000602082019050614c086000830184614be4565b92915050565b614c1781614721565b82525050565b6000602082019050614c326000830184614c0e565b92915050565b600080fd5b600060c08284031215614c5357614c52614c38565b5b81905092915050565b600060208284031215614c7257614c716146c1565b5b600082013567ffffffffffffffff811115614c9057614c8f6146c6565b5b614c9c84828501614c3d565b91505092915050565b614cae816146cb565b82525050565b6000602082019050614cc96000830184614ca5565b92915050565b600067ffffffffffffffff82169050919050565b614cec81614ccf565b82525050565b6000602082019050614d076000830184614ce3565b92915050565b600080fd5b60008083601f840112614d2857614d2761475f565b5b8235905067ffffffffffffffff811115614d4557614d44614d0d565b5b602083019150836001820283011115614d6157614d6061481c565b5b9250929050565b60008060008060608587031215614d8257614d816146c1565b5b6000614d908782880161474a565b9450506020614da1878288016146ec565b935050604085013567ffffffffffffffff811115614dc257614dc16146c6565b5b614dce87828801614d12565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614e11816146cb565b82525050565b6000614e238383614e08565b60208301905092915050565b6000602082019050919050565b6000614e4782614ddc565b614e518185614de7565b9350614e5c83614df8565b8060005b83811015614e8d578151614e748882614e17565b9750614e7f83614e2f565b925050600181019050614e60565b5085935050505092915050565b60006020820190508181036000830152614eb48184614e3c565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614ef181614721565b82525050565b6000614f038383614ee8565b60208301905092915050565b6000602082019050919050565b6000614f2782614ebc565b614f318185614ec7565b9350614f3c83614ed8565b8060005b83811015614f6d578151614f548882614ef7565b9750614f5f83614f0f565b925050600181019050614f40565b5085935050505092915050565b600060a082019050614f8f60008301886149f3565b614f9c60208301876149f3565b614fa96040830186614ce3565b614fb66060830185614c0e565b8181036080830152614fc88184614f1c565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061501b57607f821691505b60208210810361502e5761502d614fd4565b5b50919050565b60006040820190506150496000830185614ca5565b6150566020830184614ca5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006150c6826146cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036150f8576150f761508c565b5b600182019050919050565b60006040820190506151186000830185614ca5565b818103602083015261512a8184614e3c565b90509392505050565b600081519050919050565b600081905092915050565b60005b8381101561516757808201518184015260208101905061514c565b60008484015250505050565b600061517e82615133565b615188818561513e565b9350615198818560208601615149565b80840191505092915050565b60006151b08284615173565b915081905092915050565b60006151c6826146cb565b91506151d1836146cb565b92508282039050818111156151e9576151e861508c565b5b92915050565b60006151fa826146cb565b9150615205836146cb565b9250828202615213816146cb565b9150828204841483151761522a5761522961508c565b5b5092915050565b600061523c826146cb565b9150615247836146cb565b925082820190508082111561525f5761525e61508c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061529f826146cb565b91506152aa836146cb565b9250826152ba576152b9615265565b5b828204905092915050565b600060a0820190506152da6000830188614ca5565b6152e760208301876149f3565b6152f460408301866145ff565b61530160608301856145ff565b61530e60808301846145ff565b9695505050505050565b50565b600061532860008361513e565b915061533382615318565b600082019050919050565b60006153498261531b565b9150819050919050565b600061536e615369615364846149db565b614a1d565b6146cb565b9050919050565b61537e81615353565b82525050565b60006060820190506153996000830186614c0e565b6153a66020830185615375565b6153b36040830184615375565b949350505050565b60006153c6826149db565b91506153d1836149db565b925082820190506bffffffffffffffffffffffff8111156153f5576153f461508c565b5b92915050565b6000615406826149db565b9150615411836149db565b925082820390506bffffffffffffffffffffffff8111156154355761543461508c565b5b92915050565b60006040820190506154506000830185614c0e565b61545d6020830184615375565b9392505050565b61546d816145f3565b811461547857600080fd5b50565b60008151905061548a81615464565b92915050565b6000602082840312156154a6576154a56146c1565b5b60006154b48482850161547b565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006155046016836154bd565b915061550f826154ce565b602082019050919050565b60006020820190508181036000830152615533816154f7565b9050919050565b600061554582614a49565b9050919050565b6155558161553a565b82525050565b6000604082019050615570600083018561554c565b61557d6020830184614ca5565b9392505050565b60006040820190506155996000830185614ca5565b6155a66020830184614c0e565b9392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126155d9576155d86155ad565b5b80840192508235915067ffffffffffffffff8211156155fb576155fa6155b2565b5b602083019250600182023603831315615617576156166155b7565b5b509250929050565b615628816145d4565b811461563357600080fd5b50565b6000813590506156458161561f565b92915050565b600060208284031215615661576156606146c1565b5b600061566f84828501615636565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026156da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261569d565b6156e4868361569d565b95508019841693508086168417925050509392505050565b600061571761571261570d846146cb565b614a1d565b6146cb565b9050919050565b6000819050919050565b615731836156fc565b61574561573d8261571e565b8484546156aa565b825550505050565b600090565b61575a61574d565b615765818484615728565b505050565b5b818110156157895761577e600082615752565b60018101905061576b565b5050565b601f8211156157ce5761579f81615678565b6157a88461568d565b810160208510156157b7578190505b6157cb6157c38561568d565b83018261576a565b50505b505050565b600082821c905092915050565b60006157f1600019846008026157d3565b1980831691505092915050565b600061580a83836157e0565b9150826002028217905092915050565b61582382615133565b67ffffffffffffffff81111561583c5761583b614775565b5b6158468254615003565b61585182828561578d565b600060209050601f8311600181146158845760008415615872578287015190505b61587c85826157fe565b8655506158e4565b601f19841661589286615678565b60005b828110156158ba57848901518255600182019150602085019450602081019050615895565b868310156158d757848901516158d3601f8916826157e0565b8355505b6001600288020188555050505b505050505050565b6158f5816145b7565b811461590057600080fd5b50565b600081359050615912816158ec565b92915050565b60006020828403121561592e5761592d6146c1565b5b600061593c84828501615903565b91505092915050565b600082825260208201905092915050565b600061596182615133565b61596b8185615945565b935061597b818560208601615149565b61598481614764565b840191505092915050565b600060c0820190506159a46000830189614ca5565b6159b16020830188614ca5565b6159be60408301876145c5565b6159cb60608301866145e4565b6159d860808301856145e4565b81810360a08301526159ea8184615956565b9050979650505050505050565b60008160601b9050919050565b6000615a0f826159f7565b9050919050565b6000615a2182615a04565b9050919050565b615a39615a3482614721565b615a16565b82525050565b6000819050919050565b6000819050919050565b615a64615a5f82615a3f565b615a49565b82525050565b60008160c01b9050919050565b6000615a8282615a6a565b9050919050565b615a9a615a9582614ccf565b615a77565b82525050565b6000615aac8287615a28565b601482019150615abc8286615a53565b602082019150615acc8285615a28565b601482019150615adc8284615a89565b60088201915081905095945050505050565b6000615af982614ccf565b9150615b0483614ccf565b9250828201905067ffffffffffffffff811115615b2457615b2361508c565b5b92915050565b6000604082019050615b3f6000830185614c0e565b615b4c6020830184614c0e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050615b91816146d5565b92915050565b600060208284031215615bad57615bac6146c1565b5b6000615bbb84828501615b82565b91505092915050565b6000604082019050615bd96000830185614c0e565b615be66020830184614ca5565b9392505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000615c236016836154bd565b9150615c2e82615bed565b602082019050919050565b60006020820190508181036000830152615c5281615c16565b9050919050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000615c9c8383615c59565b82615ca78135615c64565b92506004821015615ce757615ce27fffffffff000000000000000000000000000000000000000000000000000000008360040360080261569d565b831692505b505092915050565b600080fd5b600080fd5b60008085851115615d0d57615d0c615cef565b5b83861115615d1e57615d1d615cf4565b5b6001850283019150848603905094509492505050565b600080fd5b600081359050615d4881615464565b92915050565b600060208284031215615d6457615d63615d34565b5b615d6e60206147d5565b90506000615d7e84828501615d39565b60008301525092915050565b600060208284031215615da057615d9f6146c1565b5b6000615dae84828501615d4e565b91505092915050565b615dc0816145f3565b82525050565b602082016000820151615ddc6000850182615db7565b50505050565b6000602082019050615df76000830184615dc6565b92915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000615e336017836154bd565b9150615e3e82615dfd565b602082019050919050565b60006020820190508181036000830152615e6281615e26565b905091905056fea2646970667358221220ae915b2d63584741899877a7d4d1beddcd0646e42da5abcc4d5ed890a32dc39164736f6c63430008130033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xE SSTORE PUSH1 0x64 PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x669A CODESIZE SUB DUP1 PUSH3 0x669A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x5F3 JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x13D JUMPI PUSH3 0x13C DUP2 PUSH3 0x1A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1A0 PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x7B6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x211 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH3 0x2E8 PUSH3 0x4D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x55F SWAP1 PUSH3 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x592 DUP2 PUSH3 0x56F JUMP JUMPDEST DUP2 EQ PUSH3 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5B2 DUP2 PUSH3 0x587 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5CD DUP2 PUSH3 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH3 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5ED DUP2 PUSH3 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x60F JUMPI PUSH3 0x60E PUSH3 0x56A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x61F DUP7 DUP3 DUP8 ADD PUSH3 0x5A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x632 DUP7 DUP3 DUP8 ADD PUSH3 0x5A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x645 DUP7 DUP3 DUP8 ADD PUSH3 0x5DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x698 PUSH1 0x18 DUP4 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x6A5 DUP3 PUSH3 0x660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x6CB DUP2 PUSH3 0x689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70A PUSH1 0x17 DUP4 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x717 DUP3 PUSH3 0x6D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x73D DUP2 PUSH3 0x6FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x77C PUSH1 0x16 DUP4 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x789 DUP3 PUSH3 0x744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7AF DUP2 PUSH3 0x76D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x5E9F PUSH3 0x7FB PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xD66 ADD MSTORE PUSH2 0x116B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xCE1 ADD MSTORE PUSH2 0x3280 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xD26 ADD MSTORE PUSH2 0x11D3 ADD MSTORE PUSH2 0x5E9F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xAEFB212F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDAC83D29 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDAC83D29 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDC311DD3 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0xDCAB3DCF EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x806 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xAEFB212F EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xB2A7CAC5 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xBEC4C08C EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xCB631797 EQ PUSH2 0x71F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x9B1C385E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9B1C385E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x9D40A6FD EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xAA433AFF EQ PUSH2 0x667 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x953E9C75 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x95B55CFC EQ PUSH2 0x58F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x72E9D565 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x72E9D565 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x8402595E EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x86FE91C7 EQ PUSH2 0x4E5 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x65982744 EQ PUSH2 0x428 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x13478329 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13478329 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18E3DD27 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x1EEBC117 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x2F622E6B EQ PUSH2 0x36E JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x88070F5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xAE09540 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x115E3C0D EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x48B8 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x4967 JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x49C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x4A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x4AD5 JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x4B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH2 0x1317 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x4B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x4B92 JUMP JUMPDEST PUSH2 0x1522 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x4BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x17F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x4AD5 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x525 PUSH2 0x19EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x1C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x4B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x1C79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x4C5C JUMP JUMPDEST PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x628 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x4D68 JUMP JUMPDEST PUSH2 0x248B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x26F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x4967 JUMP JUMPDEST PUSH2 0x2753 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x4E9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x2887 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x2A98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x2C36 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x2FF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x798 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x30F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x804 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH2 0x32A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH2 0x3574 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x13 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9CB SWAP1 PUSH2 0x5003 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F7 SWAP1 PUSH2 0x5003 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xB26 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAAA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB01 JUMPI PUSH2 0xB00 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB18 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB0 JUMP JUMPDEST POP PUSH2 0xB6B JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB89 SWAP3 SWAP2 SWAP1 PUSH2 0x5103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x51A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP8 PUSH1 0x60 ADD MLOAD MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCC9 JUMPI PUSH2 0xCC8 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x51EF JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xDA6 JUMPI PUSH32 0x0 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x51EF JUMP JUMPDEST PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x5294 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xDBA DUP2 DUP5 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x3588 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0xE14 SWAP2 SWAP1 PUSH2 0x449A JUMP JUMPDEST POP POP DUP7 PUSH1 0x0 ADD MLOAD DUP12 PUSH32 0xAEB4B4786571E184246D39587F659ABF0E26F41F6A3358692250382C0CDB47B7 DUP14 DUP5 DUP8 DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE54 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xE73 DUP2 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0xE7B PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE87 DUP6 PUSH2 0x38CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xEBF SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF70 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x109A SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F1 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP5 DUP5 PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115C SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x11FD PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x123E PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3CB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12DF DUP3 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3CF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xD623472500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x131F PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x13E8 PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3CB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1519 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP3 SWAP2 SWAP1 PUSH2 0x543B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1514 SWAP2 SWAP1 PUSH2 0x5490 JUMP JUMPDEST PUSH2 0x3CB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x152A PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2D118A6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E5 SWAP1 PUSH2 0x551A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x184F DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1849 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x8F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x185B PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18D4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19CB JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x18EA SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x194F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x4AED7C8EED0496C8C19EA2681FCCA25741C1602342E38B045D9F1E8E905D2E9C DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C0 SWAP3 SWAP2 SWAP1 PUSH2 0x555B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x19F6 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C81 PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1CC0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLVALUE PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D3E SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D95 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x7603B205D03651EE812F803FCCDE89F1012E545A9C99F0ABFEA9CEDD0FD8E902 DUP3 CALLVALUE DUP5 PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E00 SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E16 PUSH2 0x3883 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD CALLDATALOAD CALLER PUSH2 0x1E26 DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x1E69 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E60 SWAP3 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F23 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3E SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1F66 PUSH2 0x1F61 DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1F5C SWAP2 SWAP1 PUSH2 0x55BC JUMP JUMPDEST PUSH2 0x3E04 JUMP JUMPDEST PUSH2 0x3EFC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F90 SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FAE SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1FC9 SWAP2 SWAP1 PUSH2 0x55BC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x208F SWAP2 SWAP1 PUSH2 0x581A JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP10 PUSH1 0x0 ADD CALLDATALOAD PUSH32 0xEB0E3652E0F44F417695E6E90F2F42C99B65CD7169074C5A654B16B9748C3A4E DUP7 DUP7 DUP14 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20EA SWAP2 SWAP1 PUSH2 0x5918 JUMP JUMPDEST DUP15 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20FD SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST DUP16 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2110 SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH2 0x2123 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x598F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215D PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x1 NUMBER PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST BLOCKHASH ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x219C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP2 POP PUSH1 0x1 DUP2 PUSH2 0x21C4 SWAP2 SWAP1 PUSH2 0x5AEE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2208 JUMPI PUSH2 0x2207 PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2236 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2435 SWAP3 SWAP2 SWAP1 PUSH2 0x44DA JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x244D DUP4 PUSH1 0x8 PUSH2 0x3F94 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP3 PUSH32 0x1D3015D7BA850FA198DC7B1A3F5D42779313A681035F77C8C03764C61005518D CALLER PUSH1 0x40 MLOAD PUSH2 0x247E SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2493 PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x251A JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x2568 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST SWAP1 POP PUSH2 0x25A9 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2627 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x267E SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP8 DUP5 PUSH2 0x26DB SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E9 SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2701 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2745 DUP2 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x274F DUP3 DUP3 PUSH2 0x3FAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2761 PUSH1 0x8 PUSH2 0x4142 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x279C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1390F2A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH2 0x27AA SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT DUP1 PUSH2 0x27BA JUMPI POP PUSH1 0x0 DUP5 EQ JUMPDEST PUSH2 0x27C4 JUMPI DUP1 PUSH2 0x27C6 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP3 PUSH2 0x27D6 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F2 JUMPI PUSH2 0x27F1 PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2820 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x287D JUMPI PUSH2 0x284D DUP8 DUP3 PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x4157 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2860 JUMPI PUSH2 0x285F PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x2876 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP1 POP PUSH2 0x2826 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x288F PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x28D3 DUP2 PUSH2 0x3D9B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29AF JUMPI PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A6 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xD4114AB6E9AF9F597C52041F32D62DC57C5C4E4C0D4427006069635E216C9386 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2A8C SWAP3 SWAP2 SWAP1 PUSH2 0x5B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x2AA2 DUP2 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0x2AAA PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2B1B JUMPI POP PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x64 PUSH2 0xFFFF AND DUP2 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x2B77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH32 0x1E980D04AA7648E205713E5E8EA3808672AC163D10936D36F91B2C88AC1575E1 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C26 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2C40 DUP2 PUSH2 0x37CB JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C4C DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x2C8F JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C86 SWAP3 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C97 PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D3B JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D32 SWAP3 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2DD3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2D89 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x2DEA SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2F47 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E22 JUMPI PUSH2 0x2E21 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F36 JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E5A JUMPI PUSH2 0x2E59 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E8D JUMPI PUSH2 0x2E8C PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2EFB JUMPI PUSH2 0x2EFA PUSH2 0x5B53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2F47 JUMP JUMPDEST DUP1 PUSH2 0x2F40 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP1 POP PUSH2 0x2DEF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH32 0x32158C6058347C1601B2D12BC696AC6901D8A9A9AA3BA10C27AB0A983E8425A7 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2FE4 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2FFF DUP2 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0x3007 PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30F3 JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x21A4DAD170A6BF476C31BBCF4A16628295B0E450672EEC25D7C93308E05344A1 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x30EA SWAP3 SWAP2 SWAP1 PUSH2 0x5B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3143 DUP3 PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3264 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x321A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x32AA PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3332 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338F SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33D0 SWAP2 SWAP1 PUSH2 0x5B97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3446 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343D SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x356F JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x345C SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34BB SWAP3 SWAP2 SWAP1 PUSH2 0x5BC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34FE SWAP2 SWAP1 PUSH2 0x5490 JUMP JUMPDEST PUSH2 0x3534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C07FC4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3565 SWAP3 SWAP2 SWAP1 PUSH2 0x5BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x357C PUSH2 0x3C29 JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x4171 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 ISZERO PUSH2 0x36B7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x361C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 PUSH2 0x3628 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xB PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3683 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x372E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 PUSH2 0x373A SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3795 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x380F DUP2 PUSH2 0x3D9B JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x387F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3876 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x38CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A4D JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3979 JUMPI PUSH2 0x3978 PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH2 0x3A46 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP1 POP PUSH2 0x395A JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x3AC0 SWAP2 SWAP1 PUSH2 0x4564 JUMP JUMPDEST POP POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x3B45 DUP6 PUSH1 0x8 PUSH2 0x429D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3BB4 JUMPI DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B85 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C22 JUMPI DUP3 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BF3 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CAE SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x3CF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3D19 SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3D56 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3D5B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3D96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E0C PUSH2 0x4585 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x3E30 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0x3EF6 JUMP JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 DUP4 SWAP1 PUSH2 0x3E7D SWAP2 SWAP1 PUSH2 0x5C90 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x3ED3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5247FDCE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x3EE6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5CF9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3EF3 SWAP2 SWAP1 PUSH2 0x5D8A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3F30 SWAP2 SWAP1 PUSH2 0x5DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA6 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x42B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FBA DUP5 PUSH2 0x38CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x402C JUMPI POP PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x40E8 JUMPI PUSH2 0x40E7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409F SWAP3 SWAP2 SWAP1 PUSH2 0x5BC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E2 SWAP2 SWAP1 PUSH2 0x5490 JUMP JUMPDEST PUSH2 0x3CB9 JUMP JUMPDEST JUMPDEST PUSH2 0x4100 DUP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3CF3 JUMP JUMPDEST DUP4 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4134 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4150 DUP3 PUSH1 0x0 ADD PUSH2 0x4327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4166 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x4338 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x41DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D6 SWAP1 PUSH2 0x5E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AF DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x4363 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C3 DUP4 DUP4 PUSH2 0x4477 JUMP JUMPDEST PUSH2 0x431C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x4321 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4350 JUMPI PUSH2 0x434F PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x446B JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x4395 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x43AD SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x441C JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43CE JUMPI PUSH2 0x43CD PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x43F2 JUMPI PUSH2 0x43F1 PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x4430 JUMPI PUSH2 0x442F PUSH2 0x5B53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4471 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x44A6 SWAP1 PUSH2 0x5003 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x44B8 JUMPI POP PUSH2 0x44D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x44D6 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4553 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4552 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x44FA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x4560 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4582 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x45B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x459B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45CE DUP2 PUSH2 0x45B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45ED DUP2 PUSH2 0x45D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4608 DUP2 PUSH2 0x45F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4624 DUP2 PUSH2 0x460E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x4640 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x45C5 JUMP JUMPDEST PUSH2 0x464D PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x465A PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x45FF JUMP JUMPDEST PUSH2 0x4667 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x4674 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x4681 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x468E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x469B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x461B JUMP JUMPDEST PUSH2 0x46A9 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x461B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46DE DUP2 PUSH2 0x46CB JUMP JUMPDEST DUP2 EQ PUSH2 0x46E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46FB DUP2 PUSH2 0x46D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472C DUP3 PUSH2 0x4701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x473C DUP2 PUSH2 0x4721 JUMP JUMPDEST DUP2 EQ PUSH2 0x4747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4759 DUP2 PUSH2 0x4733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x47AD DUP3 PUSH2 0x4764 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x47CC JUMPI PUSH2 0x47CB PUSH2 0x4775 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47DF PUSH2 0x46B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x47EB DUP3 DUP3 PUSH2 0x47A4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x480B JUMPI PUSH2 0x480A PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4834 PUSH2 0x482F DUP5 PUSH2 0x47F0 JUMP JUMPDEST PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4857 JUMPI PUSH2 0x4856 PUSH2 0x481C JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4880 JUMPI DUP1 PUSH2 0x486C DUP9 DUP3 PUSH2 0x46EC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4859 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x489F JUMPI PUSH2 0x489E PUSH2 0x475F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x48AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4821 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48D1 JUMPI PUSH2 0x48D0 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48DF DUP7 DUP3 DUP8 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x48F0 DUP7 DUP3 DUP8 ADD PUSH2 0x474A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4911 JUMPI PUSH2 0x4910 PUSH2 0x46C6 JUMP JUMPDEST JUMPDEST PUSH2 0x491D DUP7 DUP3 DUP8 ADD PUSH2 0x488A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x493E JUMPI PUSH2 0x493D PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x494C DUP6 DUP3 DUP7 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x495D DUP6 DUP3 DUP7 ADD PUSH2 0x474A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497E JUMPI PUSH2 0x497D PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x498C DUP6 DUP3 DUP7 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x499D DUP6 DUP3 DUP7 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49BA DUP2 PUSH2 0x49A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49FC DUP2 PUSH2 0x49DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A42 PUSH2 0x4A3D PUSH2 0x4A38 DUP5 PUSH2 0x4701 JUMP JUMPDEST PUSH2 0x4A1D JUMP JUMPDEST PUSH2 0x4701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A54 DUP3 PUSH2 0x4A27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A66 DUP3 PUSH2 0x4A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A76 DUP2 PUSH2 0x4A5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA2 DUP3 PUSH2 0x4701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB2 DUP2 PUSH2 0x4A97 JUMP JUMPDEST DUP2 EQ PUSH2 0x4ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4ACF DUP2 PUSH2 0x4AA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AEB JUMPI PUSH2 0x4AEA PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AF9 DUP5 DUP3 DUP6 ADD PUSH2 0x4AC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B18 JUMPI PUSH2 0x4B17 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B26 DUP5 DUP3 DUP6 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B60 JUMPI PUSH2 0x4B5F PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B6E DUP5 DUP3 DUP6 ADD PUSH2 0x474A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BA9 JUMPI PUSH2 0x4BA8 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB7 DUP6 DUP3 DUP7 ADD PUSH2 0x474A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4BC8 DUP6 DUP3 DUP7 ADD PUSH2 0x474A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BDD DUP3 PUSH2 0x4A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BED DUP2 PUSH2 0x4BD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C17 DUP2 PUSH2 0x4721 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C53 JUMPI PUSH2 0x4C52 PUSH2 0x4C38 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C72 JUMPI PUSH2 0x4C71 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C90 JUMPI PUSH2 0x4C8F PUSH2 0x46C6 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9C DUP5 DUP3 DUP6 ADD PUSH2 0x4C3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CAE DUP2 PUSH2 0x46CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CEC DUP2 PUSH2 0x4CCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4D28 JUMPI PUSH2 0x4D27 PUSH2 0x475F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D45 JUMPI PUSH2 0x4D44 PUSH2 0x4D0D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4D61 JUMPI PUSH2 0x4D60 PUSH2 0x481C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4D82 JUMPI PUSH2 0x4D81 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D90 DUP8 DUP3 DUP9 ADD PUSH2 0x474A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4DA1 DUP8 DUP3 DUP9 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DC2 JUMPI PUSH2 0x4DC1 PUSH2 0x46C6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DCE DUP8 DUP3 DUP9 ADD PUSH2 0x4D12 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E11 DUP2 PUSH2 0x46CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E23 DUP4 DUP4 PUSH2 0x4E08 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E47 DUP3 PUSH2 0x4DDC JUMP JUMPDEST PUSH2 0x4E51 DUP2 DUP6 PUSH2 0x4DE7 JUMP JUMPDEST SWAP4 POP PUSH2 0x4E5C DUP4 PUSH2 0x4DF8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E8D JUMPI DUP2 MLOAD PUSH2 0x4E74 DUP9 DUP3 PUSH2 0x4E17 JUMP JUMPDEST SWAP8 POP PUSH2 0x4E7F DUP4 PUSH2 0x4E2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4E60 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EB4 DUP2 DUP5 PUSH2 0x4E3C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EF1 DUP2 PUSH2 0x4721 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F03 DUP4 DUP4 PUSH2 0x4EE8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F27 DUP3 PUSH2 0x4EBC JUMP JUMPDEST PUSH2 0x4F31 DUP2 DUP6 PUSH2 0x4EC7 JUMP JUMPDEST SWAP4 POP PUSH2 0x4F3C DUP4 PUSH2 0x4ED8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F6D JUMPI DUP2 MLOAD PUSH2 0x4F54 DUP9 DUP3 PUSH2 0x4EF7 JUMP JUMPDEST SWAP8 POP PUSH2 0x4F5F DUP4 PUSH2 0x4F0F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4F40 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4F8F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x4F9C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x4FA9 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4CE3 JUMP JUMPDEST PUSH2 0x4FB6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x4FC8 DUP2 DUP5 PUSH2 0x4F1C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x501B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x502E JUMPI PUSH2 0x502D PUSH2 0x4FD4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5049 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x5056 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x50C6 DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x50F8 JUMPI PUSH2 0x50F7 PUSH2 0x508C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5118 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CA5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x512A DUP2 DUP5 PUSH2 0x4E3C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5167 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x514C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517E DUP3 PUSH2 0x5133 JUMP JUMPDEST PUSH2 0x5188 DUP2 DUP6 PUSH2 0x513E JUMP JUMPDEST SWAP4 POP PUSH2 0x5198 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5149 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51B0 DUP3 DUP5 PUSH2 0x5173 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C6 DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x51D1 DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x51E9 JUMPI PUSH2 0x51E8 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51FA DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x5205 DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x5213 DUP2 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x522A JUMPI PUSH2 0x5229 PUSH2 0x508C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523C DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x5247 DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x525F JUMPI PUSH2 0x525E PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x529F DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x52AA DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x52BA JUMPI PUSH2 0x52B9 PUSH2 0x5265 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x52DA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x52E7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x52F4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x45FF JUMP JUMPDEST PUSH2 0x5301 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x45FF JUMP JUMPDEST PUSH2 0x530E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x45FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5328 PUSH1 0x0 DUP4 PUSH2 0x513E JUMP JUMPDEST SWAP2 POP PUSH2 0x5333 DUP3 PUSH2 0x5318 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5349 DUP3 PUSH2 0x531B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x536E PUSH2 0x5369 PUSH2 0x5364 DUP5 PUSH2 0x49DB JUMP JUMPDEST PUSH2 0x4A1D JUMP JUMPDEST PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537E DUP2 PUSH2 0x5353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5399 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x53A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5375 JUMP JUMPDEST PUSH2 0x53B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5375 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C6 DUP3 PUSH2 0x49DB JUMP JUMPDEST SWAP2 POP PUSH2 0x53D1 DUP4 PUSH2 0x49DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53F5 JUMPI PUSH2 0x53F4 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5406 DUP3 PUSH2 0x49DB JUMP JUMPDEST SWAP2 POP PUSH2 0x5411 DUP4 PUSH2 0x49DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5435 JUMPI PUSH2 0x5434 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5450 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x545D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5375 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x546D DUP2 PUSH2 0x45F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x548A DUP2 PUSH2 0x5464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54A6 JUMPI PUSH2 0x54A5 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x54B4 DUP5 DUP3 DUP6 ADD PUSH2 0x547B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5504 PUSH1 0x16 DUP4 PUSH2 0x54BD JUMP JUMPDEST SWAP2 POP PUSH2 0x550F DUP3 PUSH2 0x54CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5533 DUP2 PUSH2 0x54F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5545 DUP3 PUSH2 0x4A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5555 DUP2 PUSH2 0x553A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5570 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x554C JUMP JUMPDEST PUSH2 0x557D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5599 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x55A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C0E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x55D9 JUMPI PUSH2 0x55D8 PUSH2 0x55AD JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x55FB JUMPI PUSH2 0x55FA PUSH2 0x55B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x5617 JUMPI PUSH2 0x5616 PUSH2 0x55B7 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5628 DUP2 PUSH2 0x45D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x5633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5645 DUP2 PUSH2 0x561F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5661 JUMPI PUSH2 0x5660 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x566F DUP5 DUP3 DUP6 ADD PUSH2 0x5636 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x56DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x569D JUMP JUMPDEST PUSH2 0x56E4 DUP7 DUP4 PUSH2 0x569D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5717 PUSH2 0x5712 PUSH2 0x570D DUP5 PUSH2 0x46CB JUMP JUMPDEST PUSH2 0x4A1D JUMP JUMPDEST PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5731 DUP4 PUSH2 0x56FC JUMP JUMPDEST PUSH2 0x5745 PUSH2 0x573D DUP3 PUSH2 0x571E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x56AA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x575A PUSH2 0x574D JUMP JUMPDEST PUSH2 0x5765 DUP2 DUP5 DUP5 PUSH2 0x5728 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5789 JUMPI PUSH2 0x577E PUSH1 0x0 DUP3 PUSH2 0x5752 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x576B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x57CE JUMPI PUSH2 0x579F DUP2 PUSH2 0x5678 JUMP JUMPDEST PUSH2 0x57A8 DUP5 PUSH2 0x568D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x57B7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x57CB PUSH2 0x57C3 DUP6 PUSH2 0x568D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x576A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x57D3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580A DUP4 DUP4 PUSH2 0x57E0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5823 DUP3 PUSH2 0x5133 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x583C JUMPI PUSH2 0x583B PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH2 0x5846 DUP3 SLOAD PUSH2 0x5003 JUMP JUMPDEST PUSH2 0x5851 DUP3 DUP3 DUP6 PUSH2 0x578D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5884 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5872 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x587C DUP6 DUP3 PUSH2 0x57FE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x58E4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5892 DUP7 PUSH2 0x5678 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x58BA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5895 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x58D7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x58D3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x57E0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x58F5 DUP2 PUSH2 0x45B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x5900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5912 DUP2 PUSH2 0x58EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x592E JUMPI PUSH2 0x592D PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x593C DUP5 DUP3 DUP6 ADD PUSH2 0x5903 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5961 DUP3 PUSH2 0x5133 JUMP JUMPDEST PUSH2 0x596B DUP2 DUP6 PUSH2 0x5945 JUMP JUMPDEST SWAP4 POP PUSH2 0x597B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5149 JUMP JUMPDEST PUSH2 0x5984 DUP2 PUSH2 0x4764 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x59A4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x59B1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x59BE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x45C5 JUMP JUMPDEST PUSH2 0x59CB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x59D8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x45E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x59EA DUP2 DUP5 PUSH2 0x5956 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0F DUP3 PUSH2 0x59F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A21 DUP3 PUSH2 0x5A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A39 PUSH2 0x5A34 DUP3 PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x5A16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A64 PUSH2 0x5A5F DUP3 PUSH2 0x5A3F JUMP JUMPDEST PUSH2 0x5A49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A82 DUP3 PUSH2 0x5A6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A9A PUSH2 0x5A95 DUP3 PUSH2 0x4CCF JUMP JUMPDEST PUSH2 0x5A77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AAC DUP3 DUP8 PUSH2 0x5A28 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x5ABC DUP3 DUP7 PUSH2 0x5A53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5ACC DUP3 DUP6 PUSH2 0x5A28 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x5ADC DUP3 DUP5 PUSH2 0x5A89 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AF9 DUP3 PUSH2 0x4CCF JUMP JUMPDEST SWAP2 POP PUSH2 0x5B04 DUP4 PUSH2 0x4CCF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B24 JUMPI PUSH2 0x5B23 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x5B4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C0E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B91 DUP2 PUSH2 0x46D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BAD JUMPI PUSH2 0x5BAC PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BBB DUP5 DUP3 DUP6 ADD PUSH2 0x5B82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5BD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x5BE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C23 PUSH1 0x16 DUP4 PUSH2 0x54BD JUMP JUMPDEST SWAP2 POP PUSH2 0x5C2E DUP3 PUSH2 0x5BED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C52 DUP2 PUSH2 0x5C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C9C DUP4 DUP4 PUSH2 0x5C59 JUMP JUMPDEST DUP3 PUSH2 0x5CA7 DUP2 CALLDATALOAD PUSH2 0x5C64 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x5CE7 JUMPI PUSH2 0x5CE2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x569D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x5D0D JUMPI PUSH2 0x5D0C PUSH2 0x5CEF JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x5D1E JUMPI PUSH2 0x5D1D PUSH2 0x5CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D48 DUP2 PUSH2 0x5464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D64 JUMPI PUSH2 0x5D63 PUSH2 0x5D34 JUMP JUMPDEST JUMPDEST PUSH2 0x5D6E PUSH1 0x20 PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D7E DUP5 DUP3 DUP6 ADD PUSH2 0x5D39 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DA0 JUMPI PUSH2 0x5D9F PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5DAE DUP5 DUP3 DUP6 ADD PUSH2 0x5D4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DC0 DUP2 PUSH2 0x45F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5DDC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5DB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5DC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E33 PUSH1 0x17 DUP4 PUSH2 0x54BD JUMP JUMPDEST SWAP2 POP PUSH2 0x5E3E DUP3 PUSH2 0x5DFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E62 DUP2 PUSH2 0x5E26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE SWAP2 JUMPDEST 0x2D PUSH4 0x58474189 SWAP9 PUSH24 0xA7D4D1BEDDCD0646E42DA5ABCC4D5ED890A32DC39164736F PUSH13 0x63430008130033000000000000 ","sourceMap":"476:8658:14:-:0;;;1357:1;1322:36;;1395:3;1362:36;;1598:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8338:10:8;355:8:1;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;1706:8:14::1;1693:21;;;;;;;;::::0;::::1;1734:9;1720:23;;;;;;;;::::0;::::1;1771:15;1749:37;;;;::::0;::::1;1792:11;:9;;;:11;;:::i;:::-;1598:210:::0;;;476:8658;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;1890:397:14:-;2075:20:2;:18;;;:20;;:::i;:::-;1945:315:14::1;;;;;;;;1989:1;1945:315;;;;;;2011:1;1945:315;;;;;;2100:5;1945:315;;;;;;2038:1;1945:315;;;;;;2075:1;1945:315;;;;;;2142:1;1945:315;;;;;;2186:1;1945:315;;;;;;2220:1;1945:315;;;;;;2252:1;1945:315;;;;::::0;1934:8:::1;:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2271:11;;;;;;;;;;1890:397::o:0;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;88:117:17:-;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:76::-;758:7;787:5;776:16;;722:76;;;:::o;804:120::-;876:23;893:5;876:23;:::i;:::-;869:5;866:34;856:62;;914:1;911;904:12;856:62;804:120;:::o;930:141::-;986:5;1017:6;1011:13;1002:22;;1033:32;1059:5;1033:32;:::i;:::-;930:141;;;;:::o;1077:657::-;1162:6;1170;1178;1227:2;1215:9;1206:7;1202:23;1198:32;1195:119;;;1233:79;;:::i;:::-;1195:119;1353:1;1378:63;1433:7;1424:6;1413:9;1409:22;1378:63;:::i;:::-;1368:73;;1324:127;1490:2;1516:63;1571:7;1562:6;1551:9;1547:22;1516:63;:::i;:::-;1506:73;;1461:128;1628:2;1654:63;1709:7;1700:6;1689:9;1685:22;1654:63;:::i;:::-;1644:73;;1599:128;1077:657;;;;;:::o;1740:169::-;1824:11;1858:6;1853:3;1846:19;1898:4;1893:3;1889:14;1874:29;;1740:169;;;;:::o;1915:174::-;2055:26;2051:1;2043:6;2039:14;2032:50;1915:174;:::o;2095:366::-;2237:3;2258:67;2322:2;2317:3;2258:67;:::i;:::-;2251:74;;2334:93;2423:3;2334:93;:::i;:::-;2452:2;2447:3;2443:12;2436:19;;2095:366;;;:::o;2467:419::-;2633:4;2671:2;2660:9;2656:18;2648:26;;2720:9;2714:4;2710:20;2706:1;2695:9;2691:17;2684:47;2748:131;2874:4;2748:131;:::i;:::-;2740:139;;2467:419;;;:::o;2892:173::-;3032:25;3028:1;3020:6;3016:14;3009:49;2892:173;:::o;3071:366::-;3213:3;3234:67;3298:2;3293:3;3234:67;:::i;:::-;3227:74;;3310:93;3399:3;3310:93;:::i;:::-;3428:2;3423:3;3419:12;3412:19;;3071:366;;;:::o;3443:419::-;3609:4;3647:2;3636:9;3632:18;3624:26;;3696:9;3690:4;3686:20;3682:1;3671:9;3667:17;3660:47;3724:131;3850:4;3724:131;:::i;:::-;3716:139;;3443:419;;;:::o;3868:172::-;4008:24;4004:1;3996:6;3992:14;3985:48;3868:172;:::o;4046:366::-;4188:3;4209:67;4273:2;4268:3;4209:67;:::i;:::-;4202:74;;4285:93;4374:3;4285:93;:::i;:::-;4403:2;4398:3;4394:12;4387:19;;4046:366;;;:::o;4418:419::-;4584:4;4622:2;4611:9;4607:18;4599:26;;4671:9;4665:4;4661:20;4657:1;4646:9;4642:17;4635:47;4699:131;4825:4;4699:131;:::i;:::-;4691:139;;4418:419;;;:::o;476:8658:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@LINK_1012":{"entryPoint":4523,"id":1012,"parameterSlots":0,"returnSlots":0},"@LINK_NATIVE_FEED_1016":{"entryPoint":5688,"id":1016,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_1019":{"entryPoint":5405,"id":1019,"parameterSlots":0,"returnSlots":0},"@_add_424":{"entryPoint":17079,"id":424,"parameterSlots":2,"returnSlots":1},"@_argsToBytes_2624":{"entryPoint":16124,"id":2624,"parameterSlots":1,"returnSlots":1},"@_at_558":{"entryPoint":17208,"id":558,"parameterSlots":2,"returnSlots":1},"@_cancelSubscriptionHelper_2237":{"entryPoint":16302,"id":2237,"parameterSlots":2,"returnSlots":0},"@_chargePayment_3095":{"entryPoint":13704,"id":3095,"parameterSlots":3,"returnSlots":0},"@_contains_527":{"entryPoint":17527,"id":527,"parameterSlots":2,"returnSlots":1},"@_deleteSubscription_2180":{"entryPoint":14543,"id":2180,"parameterSlots":1,"returnSlots":2},"@_fromBytes_3192":{"entryPoint":15876,"id":3192,"parameterSlots":2,"returnSlots":1},"@_length_541":{"entryPoint":17191,"id":541,"parameterSlots":1,"returnSlots":1},"@_mustSendNative_2298":{"entryPoint":15603,"id":2298,"parameterSlots":2,"returnSlots":0},"@_nonReentrant_1227":{"entryPoint":14467,"id":1227,"parameterSlots":0,"returnSlots":0},"@_onlySubOwner_2274":{"entryPoint":14283,"id":2274,"parameterSlots":1,"returnSlots":0},"@_remove_508":{"entryPoint":17251,"id":508,"parameterSlots":2,"returnSlots":1},"@_requireSufficientBalance_1240":{"entryPoint":15545,"id":1240,"parameterSlots":1,"returnSlots":0},"@_requireValidSubscription_1257":{"entryPoint":15771,"id":1257,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":16753,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":15401,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":5726,"id":146,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_2017":{"entryPoint":10375,"id":2017,"parameterSlots":1,"returnSlots":0},"@addConsumer_2082":{"entryPoint":10904,"id":2082,"parameterSlots":2,"returnSlots":0},"@add_875":{"entryPoint":16276,"id":875,"parameterSlots":2,"returnSlots":1},"@at_953":{"entryPoint":16727,"id":953,"parameterSlots":2,"returnSlots":1},"@cancelSubscription_3440":{"entryPoint":3689,"id":3440,"parameterSlots":2,"returnSlots":0},"@consumerIsAdded_2782":{"entryPoint":7182,"id":2782,"parameterSlots":2,"returnSlots":1},"@createSubscription_1914":{"entryPoint":8531,"id":1914,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWordsWithOverride_3024":{"entryPoint":2288,"id":3024,"parameterSlots":3,"returnSlots":0},"@fulfillRandomWords_2823":{"entryPoint":6131,"id":2823,"parameterSlots":2,"returnSlots":0},"@fundSubscriptionWithNative_1688":{"entryPoint":7289,"id":1688,"parameterSlots":1,"returnSlots":0},"@fundSubscription_3150":{"entryPoint":3968,"id":3150,"parameterSlots":2,"returnSlots":0},"@getActiveSubscriptionIds_1821":{"entryPoint":10067,"id":1821,"parameterSlots":2,"returnSlots":1},"@getSubscription_1737":{"entryPoint":12537,"id":1737,"parameterSlots":1,"returnSlots":5},"@i_base_fee_2642":{"entryPoint":4561,"id":2642,"parameterSlots":0,"returnSlots":0},"@i_gas_price_2644":{"entryPoint":12926,"id":2644,"parameterSlots":0,"returnSlots":0},"@i_wei_per_unit_link_2646":{"entryPoint":4457,"id":2646,"parameterSlots":0,"returnSlots":0},"@length_932":{"entryPoint":16706,"id":932,"parameterSlots":1,"returnSlots":1},"@onTokenTransfer_1636":{"entryPoint":9355,"id":1636,"parameterSlots":4,"returnSlots":0},"@ownerCancelSubscription_1327":{"entryPoint":9977,"id":1327,"parameterSlots":1,"returnSlots":0},"@owner_156":{"entryPoint":7141,"id":156,"parameterSlots":0,"returnSlots":1},"@pendingRequestExists_3452":{"entryPoint":4835,"id":3452,"parameterSlots":1,"returnSlots":1},"@recoverFunds_1404":{"entryPoint":12962,"id":1404,"parameterSlots":1,"returnSlots":0},"@recoverNativeFunds_1470":{"entryPoint":6227,"id":1470,"parameterSlots":1,"returnSlots":0},"@removeConsumer_3391":{"entryPoint":11318,"id":3391,"parameterSlots":2,"returnSlots":0},"@remove_896":{"entryPoint":17053,"id":896,"parameterSlots":2,"returnSlots":1},"@requestRandomWords_3284":{"entryPoint":7692,"id":3284,"parameterSlots":1,"returnSlots":1},"@requestSubscriptionOwnerTransfer_1955":{"entryPoint":12277,"id":1955,"parameterSlots":2,"returnSlots":0},"@s_config_1207":{"entryPoint":2095,"id":1207,"parameterSlots":0,"returnSlots":0},"@s_currentSubNonce_1114":{"entryPoint":8505,"id":1114,"parameterSlots":0,"returnSlots":0},"@s_totalBalance_1119":{"entryPoint":6608,"id":1119,"parameterSlots":0,"returnSlots":0},"@s_totalNativeBalance_1121":{"entryPoint":4493,"id":1121,"parameterSlots":0,"returnSlots":0},"@setConfig_2765":{"entryPoint":6638,"id":2765,"parameterSlots":0,"returnSlots":0},"@setLINKAndLINKNativeFeed_1302":{"entryPoint":5410,"id":1302,"parameterSlots":2,"returnSlots":0},"@transferOwnership_110":{"entryPoint":13684,"id":110,"parameterSlots":1,"returnSlots":0},"@withdrawNative_1553":{"entryPoint":4597,"id":1553,"parameterSlots":1,"returnSlots":0},"@withdraw_1520":{"entryPoint":4887,"id":1520,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18465,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":18250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":19136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":23865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":21627,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":19730,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_ExtraArgsV1_$2596_memory_ptr":{"entryPoint":23886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_RandomWordsRequest_$2609_calldata_ptr":{"entryPoint":19517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":22787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":18156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":23426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":22070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":19274,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":19157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":19346,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":19816,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":21648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr":{"entryPoint":23946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_RandomWordsRequest_$2609_calldata_ptr":{"entryPoint":19548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":22808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":19202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":23447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":18727,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18616,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":18791,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint32":{"entryPoint":22091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":20215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":19991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_fromStack":{"entryPoint":21836,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":20200,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":19470,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":23080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":20252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":20028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":23991,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":17919,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":23123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":22870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack":{"entryPoint":19428,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack":{"entryPoint":19053,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":18865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":21751,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":23574,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":24102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack":{"entryPoint":24006,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":17861,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":19976,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":19621,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":17892,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":19683,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack":{"entryPoint":23177,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":17947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":21365,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":18931,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed":{"entryPoint":23200,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":19485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":21851,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":23338,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":23492,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":21563,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21380,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":20122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":19247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$248__to_t_address__fromStack_reversed":{"entryPoint":19443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_LinkTokenInterface_$371__to_t_address__fromStack_reversed":{"entryPoint":19068,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":18880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23609,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr__to_t_struct$_ExtraArgsV1_$2596_memory_ptr__fromStack_reversed":{"entryPoint":24034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":19319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":17962,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":19636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":21892,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":20739,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":20532,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":22927,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed":{"entryPoint":21189,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":19698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":18946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":20346,"id":null,"parameterSlots":6,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":21948,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":18389,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":18103,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18416,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20184,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19960,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":22136,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20156,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19932,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_calldata_ptr":{"entryPoint":23641,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":20787,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20239,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":20015,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":20167,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":19943,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":22853,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20798,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":21693,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":23801,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":21041,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":23278,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":21435,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":21140,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20975,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20923,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":21499,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":22413,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":18209,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":19095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":17907,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":23103,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":23652,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":18855,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":17847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":18177,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":18123,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":17876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":19663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17934,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":18907,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":22378,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4":{"entryPoint":23696,"id":null,"parameterSlots":2,"returnSlots":1},"convert_t_address_payable_to_t_address":{"entryPoint":21818,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$248_to_t_address":{"entryPoint":19410,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_LinkTokenInterface_$371_to_t_address":{"entryPoint":19035,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":19017,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":18983,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":22268,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":21331,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":22554,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":20809,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":22157,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":20483,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":22526,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":18340,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18973,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":20667,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":23062,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":23113,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":23044,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint64":{"entryPoint":23159,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":22496,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20620,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":21093,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":20436,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":23379,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20573,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":18293,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":22302,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":19725,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":18271,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":21938,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":19512,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":23860,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":21933,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c":{"entryPoint":23796,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a":{"entryPoint":23791,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":18460,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":21943,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":18118,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":18113,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":18276,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_192":{"entryPoint":23146,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":23031,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":22173,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":22483,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":22354,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":21710,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":23533,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":21272,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":24061,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":22186,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":22312,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":18227,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":19113,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":21604,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":22764,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":18133,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":22047,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":22349,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47504:17","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:17","statements":[{"nodeType":"YulAssignment","src":"61:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:17"},"nodeType":"YulFunctionCall","src":"72:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:17","type":""}],"src":"7:89:17"},{"body":{"nodeType":"YulBlock","src":"165:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:17"},"nodeType":"YulFunctionCall","src":"187:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:17"},"nodeType":"YulFunctionCall","src":"175:36:17"},"nodeType":"YulExpressionStatement","src":"175:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:17","type":""}],"src":"102:115:17"},{"body":{"nodeType":"YulBlock","src":"267:49:17","statements":[{"nodeType":"YulAssignment","src":"277:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:17","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:17"},"nodeType":"YulFunctionCall","src":"288:22:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:17"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:17","type":""}],"src":"223:93:17"},{"body":{"nodeType":"YulBlock","src":"385:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:17"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:17"},"nodeType":"YulFunctionCall","src":"407:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:17"},"nodeType":"YulFunctionCall","src":"395:36:17"},"nodeType":"YulExpressionStatement","src":"395:36:17"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:17","type":""}],"src":"322:115:17"},{"body":{"nodeType":"YulBlock","src":"485:48:17","statements":[{"nodeType":"YulAssignment","src":"495:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"520:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"513:6:17"},"nodeType":"YulFunctionCall","src":"513:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"506:6:17"},"nodeType":"YulFunctionCall","src":"506:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"495:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"467:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"477:7:17","type":""}],"src":"443:90:17"},{"body":{"nodeType":"YulBlock","src":"598:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"615:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"635:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"620:14:17"},"nodeType":"YulFunctionCall","src":"620:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"608:6:17"},"nodeType":"YulFunctionCall","src":"608:34:17"},"nodeType":"YulExpressionStatement","src":"608:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"586:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"593:3:17","type":""}],"src":"539:109:17"},{"body":{"nodeType":"YulBlock","src":"697:43:17","statements":[{"nodeType":"YulAssignment","src":"707:27:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"722:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"729:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"718:3:17"},"nodeType":"YulFunctionCall","src":"718:16:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"707:7:17"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"679:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"689:7:17","type":""}],"src":"654:86:17"},{"body":{"nodeType":"YulBlock","src":"807:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"824:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"845:5:17"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"829:15:17"},"nodeType":"YulFunctionCall","src":"829:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"817:6:17"},"nodeType":"YulFunctionCall","src":"817:35:17"},"nodeType":"YulExpressionStatement","src":"817:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"795:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"802:3:17","type":""}],"src":"746:112:17"},{"body":{"nodeType":"YulBlock","src":"1160:760:17","statements":[{"nodeType":"YulAssignment","src":"1170:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1182:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1193:3:17","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1178:3:17"},"nodeType":"YulFunctionCall","src":"1178:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1170:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1249:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1262:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1273:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1258:3:17"},"nodeType":"YulFunctionCall","src":"1258:17:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"1207:41:17"},"nodeType":"YulFunctionCall","src":"1207:69:17"},"nodeType":"YulExpressionStatement","src":"1207:69:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1328:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1341:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1352:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1337:3:17"},"nodeType":"YulFunctionCall","src":"1337:18:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1286:41:17"},"nodeType":"YulFunctionCall","src":"1286:70:17"},"nodeType":"YulExpressionStatement","src":"1286:70:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1404:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1428:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1413:3:17"},"nodeType":"YulFunctionCall","src":"1413:18:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1366:37:17"},"nodeType":"YulFunctionCall","src":"1366:66:17"},"nodeType":"YulExpressionStatement","src":"1366:66:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1484:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1497:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1508:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1493:3:17"},"nodeType":"YulFunctionCall","src":"1493:18:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1442:41:17"},"nodeType":"YulFunctionCall","src":"1442:70:17"},"nodeType":"YulExpressionStatement","src":"1442:70:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1564:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1577:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1588:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:17"},"nodeType":"YulFunctionCall","src":"1573:19:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1522:41:17"},"nodeType":"YulFunctionCall","src":"1522:71:17"},"nodeType":"YulExpressionStatement","src":"1522:71:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1645:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1658:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1669:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:17"},"nodeType":"YulFunctionCall","src":"1654:19:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1603:41:17"},"nodeType":"YulFunctionCall","src":"1603:71:17"},"nodeType":"YulExpressionStatement","src":"1603:71:17"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"1726:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1739:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1750:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1735:3:17"},"nodeType":"YulFunctionCall","src":"1735:19:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1684:41:17"},"nodeType":"YulFunctionCall","src":"1684:71:17"},"nodeType":"YulExpressionStatement","src":"1684:71:17"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"1805:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1818:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1829:3:17","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1814:3:17"},"nodeType":"YulFunctionCall","src":"1814:19:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1765:39:17"},"nodeType":"YulFunctionCall","src":"1765:69:17"},"nodeType":"YulExpressionStatement","src":"1765:69:17"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"1884:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1897:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1908:3:17","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1893:3:17"},"nodeType":"YulFunctionCall","src":"1893:19:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1844:39:17"},"nodeType":"YulFunctionCall","src":"1844:69:17"},"nodeType":"YulExpressionStatement","src":"1844:69:17"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:17","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1080:6:17","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1088:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1096:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1104:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1112:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1120:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1128:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1136:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1144:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1155:4:17","type":""}],"src":"864:1056:17"},{"body":{"nodeType":"YulBlock","src":"1966:35:17","statements":[{"nodeType":"YulAssignment","src":"1976:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1992:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1986:5:17"},"nodeType":"YulFunctionCall","src":"1986:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1976:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1959:6:17","type":""}],"src":"1926:75:17"},{"body":{"nodeType":"YulBlock","src":"2096:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2113:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2116:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2106:6:17"},"nodeType":"YulFunctionCall","src":"2106:12:17"},"nodeType":"YulExpressionStatement","src":"2106:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2007:117:17"},{"body":{"nodeType":"YulBlock","src":"2219:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2236:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2239:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2229:6:17"},"nodeType":"YulFunctionCall","src":"2229:12:17"},"nodeType":"YulExpressionStatement","src":"2229:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2130:117:17"},{"body":{"nodeType":"YulBlock","src":"2298:32:17","statements":[{"nodeType":"YulAssignment","src":"2308:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2319:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2308:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2280:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2290:7:17","type":""}],"src":"2253:77:17"},{"body":{"nodeType":"YulBlock","src":"2379:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2436:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2445:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2448:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2438:6:17"},"nodeType":"YulFunctionCall","src":"2438:12:17"},"nodeType":"YulExpressionStatement","src":"2438:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2402:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2427:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2409:17:17"},"nodeType":"YulFunctionCall","src":"2409:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2399:2:17"},"nodeType":"YulFunctionCall","src":"2399:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2392:6:17"},"nodeType":"YulFunctionCall","src":"2392:43:17"},"nodeType":"YulIf","src":"2389:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2372:5:17","type":""}],"src":"2336:122:17"},{"body":{"nodeType":"YulBlock","src":"2516:87:17","statements":[{"nodeType":"YulAssignment","src":"2526:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2548:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2535:12:17"},"nodeType":"YulFunctionCall","src":"2535:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2526:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2591:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2564:26:17"},"nodeType":"YulFunctionCall","src":"2564:33:17"},"nodeType":"YulExpressionStatement","src":"2564:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2494:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2502:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2510:5:17","type":""}],"src":"2464:139:17"},{"body":{"nodeType":"YulBlock","src":"2654:81:17","statements":[{"nodeType":"YulAssignment","src":"2664:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2679:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2686:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2675:3:17"},"nodeType":"YulFunctionCall","src":"2675:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2664:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2636:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2646:7:17","type":""}],"src":"2609:126:17"},{"body":{"nodeType":"YulBlock","src":"2786:51:17","statements":[{"nodeType":"YulAssignment","src":"2796:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2825:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2807:17:17"},"nodeType":"YulFunctionCall","src":"2807:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2796:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2768:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2778:7:17","type":""}],"src":"2741:96:17"},{"body":{"nodeType":"YulBlock","src":"2886:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2943:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2952:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2945:6:17"},"nodeType":"YulFunctionCall","src":"2945:12:17"},"nodeType":"YulExpressionStatement","src":"2945:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2909:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2934:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2916:17:17"},"nodeType":"YulFunctionCall","src":"2916:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2906:2:17"},"nodeType":"YulFunctionCall","src":"2906:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2899:6:17"},"nodeType":"YulFunctionCall","src":"2899:43:17"},"nodeType":"YulIf","src":"2896:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2879:5:17","type":""}],"src":"2843:122:17"},{"body":{"nodeType":"YulBlock","src":"3023:87:17","statements":[{"nodeType":"YulAssignment","src":"3033:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3055:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3042:12:17"},"nodeType":"YulFunctionCall","src":"3042:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3033:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3098:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3071:26:17"},"nodeType":"YulFunctionCall","src":"3071:33:17"},"nodeType":"YulExpressionStatement","src":"3071:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3001:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3009:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3017:5:17","type":""}],"src":"2971:139:17"},{"body":{"nodeType":"YulBlock","src":"3205:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3222:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3225:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3215:6:17"},"nodeType":"YulFunctionCall","src":"3215:12:17"},"nodeType":"YulExpressionStatement","src":"3215:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3116:117:17"},{"body":{"nodeType":"YulBlock","src":"3287:54:17","statements":[{"nodeType":"YulAssignment","src":"3297:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3315:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3322:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3311:3:17"},"nodeType":"YulFunctionCall","src":"3311:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3331:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3327:3:17"},"nodeType":"YulFunctionCall","src":"3327:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3307:3:17"},"nodeType":"YulFunctionCall","src":"3307:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3297:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3270:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3280:6:17","type":""}],"src":"3239:102:17"},{"body":{"nodeType":"YulBlock","src":"3375:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3392:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3395:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3385:6:17"},"nodeType":"YulFunctionCall","src":"3385:88:17"},"nodeType":"YulExpressionStatement","src":"3385:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3489:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3492:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3482:6:17"},"nodeType":"YulFunctionCall","src":"3482:15:17"},"nodeType":"YulExpressionStatement","src":"3482:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3513:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3516:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3506:6:17"},"nodeType":"YulFunctionCall","src":"3506:15:17"},"nodeType":"YulExpressionStatement","src":"3506:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3347:180:17"},{"body":{"nodeType":"YulBlock","src":"3576:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3608:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3638:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3616:21:17"},"nodeType":"YulFunctionCall","src":"3616:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:17"},"nodeType":"YulFunctionCall","src":"3604:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3590:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3755:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3757:16:17"},"nodeType":"YulFunctionCall","src":"3757:18:17"},"nodeType":"YulExpressionStatement","src":"3757:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3698:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3710:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3695:2:17"},"nodeType":"YulFunctionCall","src":"3695:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3734:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3746:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3731:2:17"},"nodeType":"YulFunctionCall","src":"3731:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3692:2:17"},"nodeType":"YulFunctionCall","src":"3692:62:17"},"nodeType":"YulIf","src":"3689:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3793:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3797:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3786:6:17"},"nodeType":"YulFunctionCall","src":"3786:22:17"},"nodeType":"YulExpressionStatement","src":"3786:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3562:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3570:4:17","type":""}],"src":"3533:281:17"},{"body":{"nodeType":"YulBlock","src":"3861:88:17","statements":[{"nodeType":"YulAssignment","src":"3871:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3881:18:17"},"nodeType":"YulFunctionCall","src":"3881:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3871:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3930:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"3938:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3910:19:17"},"nodeType":"YulFunctionCall","src":"3910:33:17"},"nodeType":"YulExpressionStatement","src":"3910:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3845:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3854:6:17","type":""}],"src":"3820:129:17"},{"body":{"nodeType":"YulBlock","src":"4037:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"4142:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4144:16:17"},"nodeType":"YulFunctionCall","src":"4144:18:17"},"nodeType":"YulExpressionStatement","src":"4144:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4114:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4122:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4111:2:17"},"nodeType":"YulFunctionCall","src":"4111:30:17"},"nodeType":"YulIf","src":"4108:56:17"},{"nodeType":"YulAssignment","src":"4174:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4186:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4194:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4182:3:17"},"nodeType":"YulFunctionCall","src":"4182:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4174:4:17"}]},{"nodeType":"YulAssignment","src":"4236:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4248:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4254:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4244:3:17"},"nodeType":"YulFunctionCall","src":"4244:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4236:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4021:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4032:4:17","type":""}],"src":"3955:311:17"},{"body":{"nodeType":"YulBlock","src":"4361:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4378:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4381:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4371:6:17"},"nodeType":"YulFunctionCall","src":"4371:12:17"},"nodeType":"YulExpressionStatement","src":"4371:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4272:117:17"},{"body":{"nodeType":"YulBlock","src":"4514:608:17","statements":[{"nodeType":"YulAssignment","src":"4524:90:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4606:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4549:56:17"},"nodeType":"YulFunctionCall","src":"4549:64:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4533:15:17"},"nodeType":"YulFunctionCall","src":"4533:81:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4524:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"4623:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"4634:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4627:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4656:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4663:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4649:6:17"},"nodeType":"YulFunctionCall","src":"4649:21:17"},"nodeType":"YulExpressionStatement","src":"4649:21:17"},{"nodeType":"YulAssignment","src":"4679:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4690:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4697:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4686:3:17"},"nodeType":"YulFunctionCall","src":"4686:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4679:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"4712:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4730:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4742:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4750:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4738:3:17"},"nodeType":"YulFunctionCall","src":"4738:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4726:3:17"},"nodeType":"YulFunctionCall","src":"4726:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4716:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4784:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4798:77:17"},"nodeType":"YulFunctionCall","src":"4798:79:17"},"nodeType":"YulExpressionStatement","src":"4798:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4771:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"4779:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4768:2:17"},"nodeType":"YulFunctionCall","src":"4768:15:17"},"nodeType":"YulIf","src":"4765:122:17"},{"body":{"nodeType":"YulBlock","src":"4972:144:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4987:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"5005:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"4991:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5029:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5055:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"5067:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5034:20:17"},"nodeType":"YulFunctionCall","src":"5034:37:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5022:6:17"},"nodeType":"YulFunctionCall","src":"5022:50:17"},"nodeType":"YulExpressionStatement","src":"5022:50:17"},{"nodeType":"YulAssignment","src":"5085:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5096:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:17"},"nodeType":"YulFunctionCall","src":"5092:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5085:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4925:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4930:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4922:2:17"},"nodeType":"YulFunctionCall","src":"4922:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4938:25:17","statements":[{"nodeType":"YulAssignment","src":"4940:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4951:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4956:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4947:3:17"},"nodeType":"YulFunctionCall","src":"4947:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4940:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4900:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4902:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"4913:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4906:3:17","type":""}]}]},"src":"4896:220:17"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4484:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4492:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4500:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4508:5:17","type":""}],"src":"4412:710:17"},{"body":{"nodeType":"YulBlock","src":"5222:293:17","statements":[{"body":{"nodeType":"YulBlock","src":"5271:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5273:77:17"},"nodeType":"YulFunctionCall","src":"5273:79:17"},"nodeType":"YulExpressionStatement","src":"5273:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5250:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5258:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5246:3:17"},"nodeType":"YulFunctionCall","src":"5246:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"5265:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5242:3:17"},"nodeType":"YulFunctionCall","src":"5242:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5235:6:17"},"nodeType":"YulFunctionCall","src":"5235:35:17"},"nodeType":"YulIf","src":"5232:122:17"},{"nodeType":"YulVariableDeclaration","src":"5363:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5390:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5377:12:17"},"nodeType":"YulFunctionCall","src":"5377:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5367:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5406:103:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5482:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5490:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5478:3:17"},"nodeType":"YulFunctionCall","src":"5478:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5497:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5505:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5415:62:17"},"nodeType":"YulFunctionCall","src":"5415:94:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5406:5:17"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5200:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5208:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5216:5:17","type":""}],"src":"5145:370:17"},{"body":{"nodeType":"YulBlock","src":"5646:704:17","statements":[{"body":{"nodeType":"YulBlock","src":"5692:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5694:77:17"},"nodeType":"YulFunctionCall","src":"5694:79:17"},"nodeType":"YulExpressionStatement","src":"5694:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5667:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5676:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5663:3:17"},"nodeType":"YulFunctionCall","src":"5663:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5688:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5659:3:17"},"nodeType":"YulFunctionCall","src":"5659:32:17"},"nodeType":"YulIf","src":"5656:119:17"},{"nodeType":"YulBlock","src":"5785:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5800:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5814:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5804:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5829:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5864:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5875:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5860:3:17"},"nodeType":"YulFunctionCall","src":"5860:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5884:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5839:20:17"},"nodeType":"YulFunctionCall","src":"5839:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5829:6:17"}]}]},{"nodeType":"YulBlock","src":"5912:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5927:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5941:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5931:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5957:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5992:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6003:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5988:3:17"},"nodeType":"YulFunctionCall","src":"5988:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6012:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5967:20:17"},"nodeType":"YulFunctionCall","src":"5967:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5957:6:17"}]}]},{"nodeType":"YulBlock","src":"6040:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6055:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6086:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6097:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6082:3:17"},"nodeType":"YulFunctionCall","src":"6082:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6069:12:17"},"nodeType":"YulFunctionCall","src":"6069:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6059:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6148:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6150:77:17"},"nodeType":"YulFunctionCall","src":"6150:79:17"},"nodeType":"YulExpressionStatement","src":"6150:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6120:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6128:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6117:2:17"},"nodeType":"YulFunctionCall","src":"6117:30:17"},"nodeType":"YulIf","src":"6114:117:17"},{"nodeType":"YulAssignment","src":"6245:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6305:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6316:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:17"},"nodeType":"YulFunctionCall","src":"6301:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6325:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6255:45:17"},"nodeType":"YulFunctionCall","src":"6255:78:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6245:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5600:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5611:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5623:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5631:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5639:6:17","type":""}],"src":"5521:829:17"},{"body":{"nodeType":"YulBlock","src":"6439:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"6485:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6487:77:17"},"nodeType":"YulFunctionCall","src":"6487:79:17"},"nodeType":"YulExpressionStatement","src":"6487:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6460:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6469:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6456:3:17"},"nodeType":"YulFunctionCall","src":"6456:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6481:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6452:3:17"},"nodeType":"YulFunctionCall","src":"6452:32:17"},"nodeType":"YulIf","src":"6449:119:17"},{"nodeType":"YulBlock","src":"6578:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6593:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6607:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6597:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6622:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6657:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6668:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6653:3:17"},"nodeType":"YulFunctionCall","src":"6653:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6677:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6632:20:17"},"nodeType":"YulFunctionCall","src":"6632:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6622:6:17"}]}]},{"nodeType":"YulBlock","src":"6705:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6720:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6734:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6724:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6750:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6785:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6781:3:17"},"nodeType":"YulFunctionCall","src":"6781:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6805:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6760:20:17"},"nodeType":"YulFunctionCall","src":"6760:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6750:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6401:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6412:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6424:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6432:6:17","type":""}],"src":"6356:474:17"},{"body":{"nodeType":"YulBlock","src":"6919:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"6965:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6967:77:17"},"nodeType":"YulFunctionCall","src":"6967:79:17"},"nodeType":"YulExpressionStatement","src":"6967:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6940:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6949:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6936:3:17"},"nodeType":"YulFunctionCall","src":"6936:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6961:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6932:3:17"},"nodeType":"YulFunctionCall","src":"6932:32:17"},"nodeType":"YulIf","src":"6929:119:17"},{"nodeType":"YulBlock","src":"7058:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7073:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7087:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7077:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7102:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7137:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7133:3:17"},"nodeType":"YulFunctionCall","src":"7133:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7157:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7112:20:17"},"nodeType":"YulFunctionCall","src":"7112:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7102:6:17"}]}]},{"nodeType":"YulBlock","src":"7185:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7200:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7214:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7204:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7230:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7265:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7276:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:17"},"nodeType":"YulFunctionCall","src":"7261:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7285:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7240:20:17"},"nodeType":"YulFunctionCall","src":"7240:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7230:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6881:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6892:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6904:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6912:6:17","type":""}],"src":"6836:474:17"},{"body":{"nodeType":"YulBlock","src":"7360:32:17","statements":[{"nodeType":"YulAssignment","src":"7370:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7381:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7370:7:17"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7342:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7352:7:17","type":""}],"src":"7316:76:17"},{"body":{"nodeType":"YulBlock","src":"7461:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7478:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7500:5:17"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"7483:16:17"},"nodeType":"YulFunctionCall","src":"7483:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7471:6:17"},"nodeType":"YulFunctionCall","src":"7471:36:17"},"nodeType":"YulExpressionStatement","src":"7471:36:17"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7449:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7456:3:17","type":""}],"src":"7398:115:17"},{"body":{"nodeType":"YulBlock","src":"7615:122:17","statements":[{"nodeType":"YulAssignment","src":"7625:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7648:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7633:3:17"},"nodeType":"YulFunctionCall","src":"7633:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7625:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7703:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7716:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7727:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7712:3:17"},"nodeType":"YulFunctionCall","src":"7712:17:17"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"7661:41:17"},"nodeType":"YulFunctionCall","src":"7661:69:17"},"nodeType":"YulExpressionStatement","src":"7661:69:17"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7587:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7599:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7610:4:17","type":""}],"src":"7519:218:17"},{"body":{"nodeType":"YulBlock","src":"7787:65:17","statements":[{"nodeType":"YulAssignment","src":"7797:49:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7812:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7819:26:17","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7808:3:17"},"nodeType":"YulFunctionCall","src":"7808:38:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7797:7:17"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7769:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7779:7:17","type":""}],"src":"7743:109:17"},{"body":{"nodeType":"YulBlock","src":"7921:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7938:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7960:5:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"7943:16:17"},"nodeType":"YulFunctionCall","src":"7943:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7931:6:17"},"nodeType":"YulFunctionCall","src":"7931:36:17"},"nodeType":"YulExpressionStatement","src":"7931:36:17"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7909:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7916:3:17","type":""}],"src":"7858:115:17"},{"body":{"nodeType":"YulBlock","src":"8075:122:17","statements":[{"nodeType":"YulAssignment","src":"8085:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8097:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8108:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:17"},"nodeType":"YulFunctionCall","src":"8093:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8085:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8163:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8176:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8187:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8172:3:17"},"nodeType":"YulFunctionCall","src":"8172:17:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"8121:41:17"},"nodeType":"YulFunctionCall","src":"8121:69:17"},"nodeType":"YulExpressionStatement","src":"8121:69:17"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8047:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8059:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8070:4:17","type":""}],"src":"7979:218:17"},{"body":{"nodeType":"YulBlock","src":"8235:28:17","statements":[{"nodeType":"YulAssignment","src":"8245:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"8252:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8245:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8221:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8231:3:17","type":""}],"src":"8203:60:17"},{"body":{"nodeType":"YulBlock","src":"8329:82:17","statements":[{"nodeType":"YulAssignment","src":"8339:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8397:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8379:17:17"},"nodeType":"YulFunctionCall","src":"8379:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"8370:8:17"},"nodeType":"YulFunctionCall","src":"8370:34:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8352:17:17"},"nodeType":"YulFunctionCall","src":"8352:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8339:9:17"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8309:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8319:9:17","type":""}],"src":"8269:142:17"},{"body":{"nodeType":"YulBlock","src":"8477:66:17","statements":[{"nodeType":"YulAssignment","src":"8487:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8531:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"8500:30:17"},"nodeType":"YulFunctionCall","src":"8500:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8487:9:17"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8457:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8467:9:17","type":""}],"src":"8417:126:17"},{"body":{"nodeType":"YulBlock","src":"8635:66:17","statements":[{"nodeType":"YulAssignment","src":"8645:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8689:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"8658:30:17"},"nodeType":"YulFunctionCall","src":"8658:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8645:9:17"}]}]},"name":"convert_t_contract$_LinkTokenInterface_$371_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8615:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8625:9:17","type":""}],"src":"8549:152:17"},{"body":{"nodeType":"YulBlock","src":"8798:92:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8815:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8877:5:17"}],"functionName":{"name":"convert_t_contract$_LinkTokenInterface_$371_to_t_address","nodeType":"YulIdentifier","src":"8820:56:17"},"nodeType":"YulFunctionCall","src":"8820:63:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8808:6:17"},"nodeType":"YulFunctionCall","src":"8808:76:17"},"nodeType":"YulExpressionStatement","src":"8808:76:17"}]},"name":"abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8786:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8793:3:17","type":""}],"src":"8707:183:17"},{"body":{"nodeType":"YulBlock","src":"9020:150:17","statements":[{"nodeType":"YulAssignment","src":"9030:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9042:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9053:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:17"},"nodeType":"YulFunctionCall","src":"9038:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9030:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9136:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9149:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9160:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9145:3:17"},"nodeType":"YulFunctionCall","src":"9145:17:17"}],"functionName":{"name":"abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9066:69:17"},"nodeType":"YulFunctionCall","src":"9066:97:17"},"nodeType":"YulExpressionStatement","src":"9066:97:17"}]},"name":"abi_encode_tuple_t_contract$_LinkTokenInterface_$371__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8992:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9004:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9015:4:17","type":""}],"src":"8896:274:17"},{"body":{"nodeType":"YulBlock","src":"9229:51:17","statements":[{"nodeType":"YulAssignment","src":"9239:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9268:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9250:17:17"},"nodeType":"YulFunctionCall","src":"9250:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9239:7:17"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9211:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9221:7:17","type":""}],"src":"9176:104:17"},{"body":{"nodeType":"YulBlock","src":"9337:87:17","statements":[{"body":{"nodeType":"YulBlock","src":"9402:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9411:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9414:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9404:6:17"},"nodeType":"YulFunctionCall","src":"9404:12:17"},"nodeType":"YulExpressionStatement","src":"9404:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9360:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9393:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"9367:25:17"},"nodeType":"YulFunctionCall","src":"9367:32:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9357:2:17"},"nodeType":"YulFunctionCall","src":"9357:43:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9350:6:17"},"nodeType":"YulFunctionCall","src":"9350:51:17"},"nodeType":"YulIf","src":"9347:71:17"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9330:5:17","type":""}],"src":"9286:138:17"},{"body":{"nodeType":"YulBlock","src":"9490:95:17","statements":[{"nodeType":"YulAssignment","src":"9500:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9522:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9509:12:17"},"nodeType":"YulFunctionCall","src":"9509:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9500:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:17"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"9538:34:17"},"nodeType":"YulFunctionCall","src":"9538:41:17"},"nodeType":"YulExpressionStatement","src":"9538:41:17"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9468:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9476:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9484:5:17","type":""}],"src":"9430:155:17"},{"body":{"nodeType":"YulBlock","src":"9665:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"9711:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9713:77:17"},"nodeType":"YulFunctionCall","src":"9713:79:17"},"nodeType":"YulExpressionStatement","src":"9713:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9686:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9695:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9682:3:17"},"nodeType":"YulFunctionCall","src":"9682:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9707:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9678:3:17"},"nodeType":"YulFunctionCall","src":"9678:32:17"},"nodeType":"YulIf","src":"9675:119:17"},{"nodeType":"YulBlock","src":"9804:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9819:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9833:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9823:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9848:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9891:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9902:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9887:3:17"},"nodeType":"YulFunctionCall","src":"9887:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9911:7:17"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"9858:28:17"},"nodeType":"YulFunctionCall","src":"9858:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9848:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9635:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9646:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9658:6:17","type":""}],"src":"9591:345:17"},{"body":{"nodeType":"YulBlock","src":"10008:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"10054:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10056:77:17"},"nodeType":"YulFunctionCall","src":"10056:79:17"},"nodeType":"YulExpressionStatement","src":"10056:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10029:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10038:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10025:3:17"},"nodeType":"YulFunctionCall","src":"10025:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10050:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10021:3:17"},"nodeType":"YulFunctionCall","src":"10021:32:17"},"nodeType":"YulIf","src":"10018:119:17"},{"nodeType":"YulBlock","src":"10147:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10162:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10176:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10166:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10191:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10226:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10237:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10222:3:17"},"nodeType":"YulFunctionCall","src":"10222:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10246:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10201:20:17"},"nodeType":"YulFunctionCall","src":"10201:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10191:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9978:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9989:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10001:6:17","type":""}],"src":"9942:329:17"},{"body":{"nodeType":"YulBlock","src":"10369:118:17","statements":[{"nodeType":"YulAssignment","src":"10379:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10402:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10387:3:17"},"nodeType":"YulFunctionCall","src":"10387:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10379:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10453:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10466:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10477:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10462:3:17"},"nodeType":"YulFunctionCall","src":"10462:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"10415:37:17"},"nodeType":"YulFunctionCall","src":"10415:65:17"},"nodeType":"YulExpressionStatement","src":"10415:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10341:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10353:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10364:4:17","type":""}],"src":"10277:210:17"},{"body":{"nodeType":"YulBlock","src":"10559:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"10605:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10607:77:17"},"nodeType":"YulFunctionCall","src":"10607:79:17"},"nodeType":"YulExpressionStatement","src":"10607:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10580:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10589:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10576:3:17"},"nodeType":"YulFunctionCall","src":"10576:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10601:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10572:3:17"},"nodeType":"YulFunctionCall","src":"10572:32:17"},"nodeType":"YulIf","src":"10569:119:17"},{"nodeType":"YulBlock","src":"10698:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10713:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10727:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10717:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10742:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10777:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10788:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10773:3:17"},"nodeType":"YulFunctionCall","src":"10773:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10797:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10752:20:17"},"nodeType":"YulFunctionCall","src":"10752:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10742:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10529:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10540:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10552:6:17","type":""}],"src":"10493:329:17"},{"body":{"nodeType":"YulBlock","src":"10924:122:17","statements":[{"nodeType":"YulAssignment","src":"10934:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10946:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10957:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10942:3:17"},"nodeType":"YulFunctionCall","src":"10942:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10934:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11012:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11025:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11036:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11021:3:17"},"nodeType":"YulFunctionCall","src":"11021:17:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"10970:41:17"},"nodeType":"YulFunctionCall","src":"10970:69:17"},"nodeType":"YulExpressionStatement","src":"10970:69:17"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10896:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10908:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10919:4:17","type":""}],"src":"10828:218:17"},{"body":{"nodeType":"YulBlock","src":"11135:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"11181:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11183:77:17"},"nodeType":"YulFunctionCall","src":"11183:79:17"},"nodeType":"YulExpressionStatement","src":"11183:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11156:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11165:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11152:3:17"},"nodeType":"YulFunctionCall","src":"11152:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11177:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11148:3:17"},"nodeType":"YulFunctionCall","src":"11148:32:17"},"nodeType":"YulIf","src":"11145:119:17"},{"nodeType":"YulBlock","src":"11274:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11289:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11303:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11293:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11318:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11353:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11364:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11349:3:17"},"nodeType":"YulFunctionCall","src":"11349:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11373:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11328:20:17"},"nodeType":"YulFunctionCall","src":"11328:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11318:6:17"}]}]},{"nodeType":"YulBlock","src":"11401:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11416:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11430:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11420:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11446:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11481:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11492:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11477:3:17"},"nodeType":"YulFunctionCall","src":"11477:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11501:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11456:20:17"},"nodeType":"YulFunctionCall","src":"11456:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11446:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11097:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11108:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11120:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11128:6:17","type":""}],"src":"11052:474:17"},{"body":{"nodeType":"YulBlock","src":"11621:66:17","statements":[{"nodeType":"YulAssignment","src":"11631:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11675:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11644:30:17"},"nodeType":"YulFunctionCall","src":"11644:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11631:9:17"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$248_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11601:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11611:9:17","type":""}],"src":"11532:155:17"},{"body":{"nodeType":"YulBlock","src":"11787:95:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11804:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11869:5:17"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$248_to_t_address","nodeType":"YulIdentifier","src":"11809:59:17"},"nodeType":"YulFunctionCall","src":"11809:66:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11797:6:17"},"nodeType":"YulFunctionCall","src":"11797:79:17"},"nodeType":"YulExpressionStatement","src":"11797:79:17"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11775:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11782:3:17","type":""}],"src":"11693:189:17"},{"body":{"nodeType":"YulBlock","src":"12015:153:17","statements":[{"nodeType":"YulAssignment","src":"12025:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12037:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12048:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12033:3:17"},"nodeType":"YulFunctionCall","src":"12033:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12025:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12134:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12147:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12158:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12143:3:17"},"nodeType":"YulFunctionCall","src":"12143:17:17"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12061:72:17"},"nodeType":"YulFunctionCall","src":"12061:100:17"},"nodeType":"YulExpressionStatement","src":"12061:100:17"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$248__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11987:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11999:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12010:4:17","type":""}],"src":"11888:280:17"},{"body":{"nodeType":"YulBlock","src":"12239:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12256:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12279:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12261:17:17"},"nodeType":"YulFunctionCall","src":"12261:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12249:6:17"},"nodeType":"YulFunctionCall","src":"12249:37:17"},"nodeType":"YulExpressionStatement","src":"12249:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12227:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12234:3:17","type":""}],"src":"12174:118:17"},{"body":{"nodeType":"YulBlock","src":"12396:124:17","statements":[{"nodeType":"YulAssignment","src":"12406:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12418:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12429:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12414:3:17"},"nodeType":"YulFunctionCall","src":"12414:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12406:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12486:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12499:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12510:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12495:3:17"},"nodeType":"YulFunctionCall","src":"12495:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12442:43:17"},"nodeType":"YulFunctionCall","src":"12442:71:17"},"nodeType":"YulExpressionStatement","src":"12442:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12368:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12380:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12391:4:17","type":""}],"src":"12298:222:17"},{"body":{"nodeType":"YulBlock","src":"12615:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12632:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12635:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12625:6:17"},"nodeType":"YulFunctionCall","src":"12625:12:17"},"nodeType":"YulExpressionStatement","src":"12625:12:17"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"12526:117:17"},{"body":{"nodeType":"YulBlock","src":"12788:153:17","statements":[{"body":{"nodeType":"YulBlock","src":"12828:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"12830:77:17"},"nodeType":"YulFunctionCall","src":"12830:79:17"},"nodeType":"YulExpressionStatement","src":"12830:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"12809:3:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12814:6:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12805:3:17"},"nodeType":"YulFunctionCall","src":"12805:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"12823:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12801:3:17"},"nodeType":"YulFunctionCall","src":"12801:26:17"},"nodeType":"YulIf","src":"12798:113:17"},{"nodeType":"YulAssignment","src":"12920:15:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"12929:6:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12920:5:17"}]}]},"name":"abi_decode_t_struct$_RandomWordsRequest_$2609_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12766:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"12774:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12782:5:17","type":""}],"src":"12698:243:17"},{"body":{"nodeType":"YulBlock","src":"13051:461:17","statements":[{"body":{"nodeType":"YulBlock","src":"13097:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13099:77:17"},"nodeType":"YulFunctionCall","src":"13099:79:17"},"nodeType":"YulExpressionStatement","src":"13099:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13072:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13081:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13068:3:17"},"nodeType":"YulFunctionCall","src":"13068:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"13093:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13064:3:17"},"nodeType":"YulFunctionCall","src":"13064:32:17"},"nodeType":"YulIf","src":"13061:119:17"},{"nodeType":"YulBlock","src":"13190:315:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13205:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13236:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13247:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:17"},"nodeType":"YulFunctionCall","src":"13232:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13219:12:17"},"nodeType":"YulFunctionCall","src":"13219:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13209:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13297:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13299:77:17"},"nodeType":"YulFunctionCall","src":"13299:79:17"},"nodeType":"YulExpressionStatement","src":"13299:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13269:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13277:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13266:2:17"},"nodeType":"YulFunctionCall","src":"13266:30:17"},"nodeType":"YulIf","src":"13263:117:17"},{"nodeType":"YulAssignment","src":"13394:101:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13467:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13478:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13463:3:17"},"nodeType":"YulFunctionCall","src":"13463:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13487:7:17"}],"functionName":{"name":"abi_decode_t_struct$_RandomWordsRequest_$2609_calldata_ptr","nodeType":"YulIdentifier","src":"13404:58:17"},"nodeType":"YulFunctionCall","src":"13404:91:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13394:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$_RandomWordsRequest_$2609_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13021:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13032:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13044:6:17","type":""}],"src":"12947:565:17"},{"body":{"nodeType":"YulBlock","src":"13583:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13600:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13623:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13605:17:17"},"nodeType":"YulFunctionCall","src":"13605:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13593:6:17"},"nodeType":"YulFunctionCall","src":"13593:37:17"},"nodeType":"YulExpressionStatement","src":"13593:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13571:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13578:3:17","type":""}],"src":"13518:118:17"},{"body":{"nodeType":"YulBlock","src":"13740:124:17","statements":[{"nodeType":"YulAssignment","src":"13750:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13762:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13773:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13758:3:17"},"nodeType":"YulFunctionCall","src":"13758:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13750:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13830:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13843:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13854:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13839:3:17"},"nodeType":"YulFunctionCall","src":"13839:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13786:43:17"},"nodeType":"YulFunctionCall","src":"13786:71:17"},"nodeType":"YulExpressionStatement","src":"13786:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13712:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13724:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13735:4:17","type":""}],"src":"13642:222:17"},{"body":{"nodeType":"YulBlock","src":"13914:57:17","statements":[{"nodeType":"YulAssignment","src":"13924:41:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13939:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13946:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13935:3:17"},"nodeType":"YulFunctionCall","src":"13935:30:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13924:7:17"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13896:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13906:7:17","type":""}],"src":"13870:101:17"},{"body":{"nodeType":"YulBlock","src":"14040:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14057:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14079:5:17"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"14062:16:17"},"nodeType":"YulFunctionCall","src":"14062:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14050:6:17"},"nodeType":"YulFunctionCall","src":"14050:36:17"},"nodeType":"YulExpressionStatement","src":"14050:36:17"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14028:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14035:3:17","type":""}],"src":"13977:115:17"},{"body":{"nodeType":"YulBlock","src":"14194:122:17","statements":[{"nodeType":"YulAssignment","src":"14204:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14216:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14227:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14212:3:17"},"nodeType":"YulFunctionCall","src":"14212:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14204:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14282:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14295:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14306:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14291:3:17"},"nodeType":"YulFunctionCall","src":"14291:17:17"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"14240:41:17"},"nodeType":"YulFunctionCall","src":"14240:69:17"},"nodeType":"YulExpressionStatement","src":"14240:69:17"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14166:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14178:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14189:4:17","type":""}],"src":"14098:218:17"},{"body":{"nodeType":"YulBlock","src":"14411:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14428:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14431:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14421:6:17"},"nodeType":"YulFunctionCall","src":"14421:12:17"},"nodeType":"YulExpressionStatement","src":"14421:12:17"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"14322:117:17"},{"body":{"nodeType":"YulBlock","src":"14532:478:17","statements":[{"body":{"nodeType":"YulBlock","src":"14581:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14583:77:17"},"nodeType":"YulFunctionCall","src":"14583:79:17"},"nodeType":"YulExpressionStatement","src":"14583:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14560:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14568:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14556:3:17"},"nodeType":"YulFunctionCall","src":"14556:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"14575:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14552:3:17"},"nodeType":"YulFunctionCall","src":"14552:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14545:6:17"},"nodeType":"YulFunctionCall","src":"14545:35:17"},"nodeType":"YulIf","src":"14542:122:17"},{"nodeType":"YulAssignment","src":"14673:30:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14696:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14683:12:17"},"nodeType":"YulFunctionCall","src":"14683:20:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14673:6:17"}]},{"body":{"nodeType":"YulBlock","src":"14746:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"14748:77:17"},"nodeType":"YulFunctionCall","src":"14748:79:17"},"nodeType":"YulExpressionStatement","src":"14748:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14718:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14726:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14715:2:17"},"nodeType":"YulFunctionCall","src":"14715:30:17"},"nodeType":"YulIf","src":"14712:117:17"},{"nodeType":"YulAssignment","src":"14838:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14854:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14862:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14850:3:17"},"nodeType":"YulFunctionCall","src":"14850:17:17"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14838:8:17"}]},{"body":{"nodeType":"YulBlock","src":"14921:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"14923:77:17"},"nodeType":"YulFunctionCall","src":"14923:79:17"},"nodeType":"YulExpressionStatement","src":"14923:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14886:8:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14900:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14908:4:17","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14896:3:17"},"nodeType":"YulFunctionCall","src":"14896:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14882:3:17"},"nodeType":"YulFunctionCall","src":"14882:32:17"},{"name":"end","nodeType":"YulIdentifier","src":"14916:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14879:2:17"},"nodeType":"YulFunctionCall","src":"14879:41:17"},"nodeType":"YulIf","src":"14876:128:17"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14499:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"14507:3:17","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"14515:8:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"14525:6:17","type":""}],"src":"14458:552:17"},{"body":{"nodeType":"YulBlock","src":"15135:698:17","statements":[{"body":{"nodeType":"YulBlock","src":"15181:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15183:77:17"},"nodeType":"YulFunctionCall","src":"15183:79:17"},"nodeType":"YulExpressionStatement","src":"15183:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15156:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15165:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15152:3:17"},"nodeType":"YulFunctionCall","src":"15152:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"15177:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15148:3:17"},"nodeType":"YulFunctionCall","src":"15148:32:17"},"nodeType":"YulIf","src":"15145:119:17"},{"nodeType":"YulBlock","src":"15274:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15289:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15303:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15293:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15318:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15353:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15364:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15349:3:17"},"nodeType":"YulFunctionCall","src":"15349:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15373:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15328:20:17"},"nodeType":"YulFunctionCall","src":"15328:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15318:6:17"}]}]},{"nodeType":"YulBlock","src":"15401:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15416:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15430:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15420:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15446:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15481:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15492:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15477:3:17"},"nodeType":"YulFunctionCall","src":"15477:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15501:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15456:20:17"},"nodeType":"YulFunctionCall","src":"15456:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15446:6:17"}]}]},{"nodeType":"YulBlock","src":"15529:297:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15544:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15575:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15586:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15571:3:17"},"nodeType":"YulFunctionCall","src":"15571:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15558:12:17"},"nodeType":"YulFunctionCall","src":"15558:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15548:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15637:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15639:77:17"},"nodeType":"YulFunctionCall","src":"15639:79:17"},"nodeType":"YulExpressionStatement","src":"15639:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15609:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15617:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15606:2:17"},"nodeType":"YulFunctionCall","src":"15606:30:17"},"nodeType":"YulIf","src":"15603:117:17"},{"nodeType":"YulAssignment","src":"15734:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15788:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15799:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15784:3:17"},"nodeType":"YulFunctionCall","src":"15784:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15808:7:17"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"15752:31:17"},"nodeType":"YulFunctionCall","src":"15752:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15734:6:17"},{"name":"value3","nodeType":"YulIdentifier","src":"15742:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15081:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15092:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15104:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15112:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15120:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15128:6:17","type":""}],"src":"15016:817:17"},{"body":{"nodeType":"YulBlock","src":"15913:40:17","statements":[{"nodeType":"YulAssignment","src":"15924:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15940:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15934:5:17"},"nodeType":"YulFunctionCall","src":"15934:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15924:6:17"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15896:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15906:6:17","type":""}],"src":"15839:114:17"},{"body":{"nodeType":"YulBlock","src":"16070:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16087:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16092:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16080:6:17"},"nodeType":"YulFunctionCall","src":"16080:19:17"},"nodeType":"YulExpressionStatement","src":"16080:19:17"},{"nodeType":"YulAssignment","src":"16108:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16127:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16132:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16123:3:17"},"nodeType":"YulFunctionCall","src":"16123:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16108:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16042:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"16047:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16058:11:17","type":""}],"src":"15959:184:17"},{"body":{"nodeType":"YulBlock","src":"16221:60:17","statements":[{"nodeType":"YulAssignment","src":"16231:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16239:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16231:4:17"}]},{"nodeType":"YulAssignment","src":"16252:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16264:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16269:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16260:3:17"},"nodeType":"YulFunctionCall","src":"16260:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16252:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16208:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16216:4:17","type":""}],"src":"16149:132:17"},{"body":{"nodeType":"YulBlock","src":"16342:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16359:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16382:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16364:17:17"},"nodeType":"YulFunctionCall","src":"16364:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16352:6:17"},"nodeType":"YulFunctionCall","src":"16352:37:17"},"nodeType":"YulExpressionStatement","src":"16352:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16330:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16337:3:17","type":""}],"src":"16287:108:17"},{"body":{"nodeType":"YulBlock","src":"16481:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16525:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16533:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16491:33:17"},"nodeType":"YulFunctionCall","src":"16491:46:17"},"nodeType":"YulExpressionStatement","src":"16491:46:17"},{"nodeType":"YulAssignment","src":"16546:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16564:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16569:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16560:3:17"},"nodeType":"YulFunctionCall","src":"16560:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16546:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16454:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16462:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16470:10:17","type":""}],"src":"16401:179:17"},{"body":{"nodeType":"YulBlock","src":"16661:38:17","statements":[{"nodeType":"YulAssignment","src":"16671:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16683:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16688:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:17"},"nodeType":"YulFunctionCall","src":"16679:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16671:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16648:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16656:4:17","type":""}],"src":"16586:113:17"},{"body":{"nodeType":"YulBlock","src":"16859:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16869:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16931:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16883:47:17"},"nodeType":"YulFunctionCall","src":"16883:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16873:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16946:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17027:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"17032:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16953:73:17"},"nodeType":"YulFunctionCall","src":"16953:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16946:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"17048:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17113:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17063:49:17"},"nodeType":"YulFunctionCall","src":"17063:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"17052:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17128:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"17142:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17132:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"17218:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"17232:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17259:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17253:5:17"},"nodeType":"YulFunctionCall","src":"17253:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"17236:13:17","type":""}]},{"nodeType":"YulAssignment","src":"17279:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"17330:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"17345:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17286:43:17"},"nodeType":"YulFunctionCall","src":"17286:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17279:3:17"}]},{"nodeType":"YulAssignment","src":"17362:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17425:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17372:52:17"},"nodeType":"YulFunctionCall","src":"17372:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17362:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17180:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"17183:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17177:2:17"},"nodeType":"YulFunctionCall","src":"17177:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17191:18:17","statements":[{"nodeType":"YulAssignment","src":"17193:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17202:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"17205:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17198:3:17"},"nodeType":"YulFunctionCall","src":"17198:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17193:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"17162:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"17164:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"17173:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17168:1:17","type":""}]}]},"src":"17158:284:17"},{"nodeType":"YulAssignment","src":"17451:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"17458:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17451:3:17"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16838:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16845:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16854:3:17","type":""}],"src":"16735:732:17"},{"body":{"nodeType":"YulBlock","src":"17621:225:17","statements":[{"nodeType":"YulAssignment","src":"17631:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17643:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17654:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17639:3:17"},"nodeType":"YulFunctionCall","src":"17639:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17631:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17678:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17689:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17674:3:17"},"nodeType":"YulFunctionCall","src":"17674:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17697:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17703:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17693:3:17"},"nodeType":"YulFunctionCall","src":"17693:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17667:6:17"},"nodeType":"YulFunctionCall","src":"17667:47:17"},"nodeType":"YulExpressionStatement","src":"17667:47:17"},{"nodeType":"YulAssignment","src":"17723:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17825:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"17834:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17731:93:17"},"nodeType":"YulFunctionCall","src":"17731:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17723:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17593:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17605:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17616:4:17","type":""}],"src":"17473:373:17"},{"body":{"nodeType":"YulBlock","src":"17926:40:17","statements":[{"nodeType":"YulAssignment","src":"17937:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17953:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17947:5:17"},"nodeType":"YulFunctionCall","src":"17947:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17937:6:17"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17909:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17919:6:17","type":""}],"src":"17852:114:17"},{"body":{"nodeType":"YulBlock","src":"18083:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18100:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"18105:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18093:6:17"},"nodeType":"YulFunctionCall","src":"18093:19:17"},"nodeType":"YulExpressionStatement","src":"18093:19:17"},{"nodeType":"YulAssignment","src":"18121:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18140:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18145:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18136:3:17"},"nodeType":"YulFunctionCall","src":"18136:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18121:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18055:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"18060:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18071:11:17","type":""}],"src":"17972:184:17"},{"body":{"nodeType":"YulBlock","src":"18234:60:17","statements":[{"nodeType":"YulAssignment","src":"18244:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18252:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18244:4:17"}]},{"nodeType":"YulAssignment","src":"18265:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18277:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18282:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18273:3:17"},"nodeType":"YulFunctionCall","src":"18273:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18265:4:17"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18221:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18229:4:17","type":""}],"src":"18162:132:17"},{"body":{"nodeType":"YulBlock","src":"18355:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18372:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18395:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18377:17:17"},"nodeType":"YulFunctionCall","src":"18377:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18365:6:17"},"nodeType":"YulFunctionCall","src":"18365:37:17"},"nodeType":"YulExpressionStatement","src":"18365:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18343:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18350:3:17","type":""}],"src":"18300:108:17"},{"body":{"nodeType":"YulBlock","src":"18494:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18538:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"18546:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"18504:33:17"},"nodeType":"YulFunctionCall","src":"18504:46:17"},"nodeType":"YulExpressionStatement","src":"18504:46:17"},{"nodeType":"YulAssignment","src":"18559:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18577:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18582:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18573:3:17"},"nodeType":"YulFunctionCall","src":"18573:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18559:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"18467:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18475:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"18483:10:17","type":""}],"src":"18414:179:17"},{"body":{"nodeType":"YulBlock","src":"18674:38:17","statements":[{"nodeType":"YulAssignment","src":"18684:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18696:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18701:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18692:3:17"},"nodeType":"YulFunctionCall","src":"18692:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"18684:4:17"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18661:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"18669:4:17","type":""}],"src":"18599:113:17"},{"body":{"nodeType":"YulBlock","src":"18872:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18882:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18944:5:17"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18896:47:17"},"nodeType":"YulFunctionCall","src":"18896:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18886:6:17","type":""}]},{"nodeType":"YulAssignment","src":"18959:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19040:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"19045:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18966:73:17"},"nodeType":"YulFunctionCall","src":"18966:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18959:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"19061:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19126:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19076:49:17"},"nodeType":"YulFunctionCall","src":"19076:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19065:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19141:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19155:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19145:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"19231:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19245:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19272:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19266:5:17"},"nodeType":"YulFunctionCall","src":"19266:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"19249:13:17","type":""}]},{"nodeType":"YulAssignment","src":"19292:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"19343:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"19358:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"19299:43:17"},"nodeType":"YulFunctionCall","src":"19299:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19292:3:17"}]},{"nodeType":"YulAssignment","src":"19375:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19438:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19385:52:17"},"nodeType":"YulFunctionCall","src":"19385:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19375:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19193:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"19196:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19190:2:17"},"nodeType":"YulFunctionCall","src":"19190:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19204:18:17","statements":[{"nodeType":"YulAssignment","src":"19206:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19215:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"19218:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19211:3:17"},"nodeType":"YulFunctionCall","src":"19211:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19206:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"19175:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19177:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19186:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19181:1:17","type":""}]}]},"src":"19171:284:17"},{"nodeType":"YulAssignment","src":"19464:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"19471:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19464:3:17"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18851:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18858:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18867:3:17","type":""}],"src":"18748:732:17"},{"body":{"nodeType":"YulBlock","src":"19740:549:17","statements":[{"nodeType":"YulAssignment","src":"19750:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19762:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19773:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19758:3:17"},"nodeType":"YulFunctionCall","src":"19758:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19750:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19829:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19842:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19853:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19838:3:17"},"nodeType":"YulFunctionCall","src":"19838:17:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"19787:41:17"},"nodeType":"YulFunctionCall","src":"19787:69:17"},"nodeType":"YulExpressionStatement","src":"19787:69:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19908:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19921:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19932:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19917:3:17"},"nodeType":"YulFunctionCall","src":"19917:18:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"19866:41:17"},"nodeType":"YulFunctionCall","src":"19866:70:17"},"nodeType":"YulExpressionStatement","src":"19866:70:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19988:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20001:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20012:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19997:3:17"},"nodeType":"YulFunctionCall","src":"19997:18:17"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"19946:41:17"},"nodeType":"YulFunctionCall","src":"19946:70:17"},"nodeType":"YulExpressionStatement","src":"19946:70:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20070:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20083:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20094:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20079:3:17"},"nodeType":"YulFunctionCall","src":"20079:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20026:43:17"},"nodeType":"YulFunctionCall","src":"20026:72:17"},"nodeType":"YulExpressionStatement","src":"20026:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20119:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20130:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20115:3:17"},"nodeType":"YulFunctionCall","src":"20115:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20140:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20146:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20136:3:17"},"nodeType":"YulFunctionCall","src":"20136:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20108:6:17"},"nodeType":"YulFunctionCall","src":"20108:49:17"},"nodeType":"YulExpressionStatement","src":"20108:49:17"},{"nodeType":"YulAssignment","src":"20166:116:17","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20268:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"20277:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20174:93:17"},"nodeType":"YulFunctionCall","src":"20174:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20166:4:17"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19680:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19692:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19700:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19708:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19716:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19724:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19735:4:17","type":""}],"src":"19486:803:17"},{"body":{"nodeType":"YulBlock","src":"20323:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20340:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20343:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20333:6:17"},"nodeType":"YulFunctionCall","src":"20333:88:17"},"nodeType":"YulExpressionStatement","src":"20333:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20437:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20440:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20430:6:17"},"nodeType":"YulFunctionCall","src":"20430:15:17"},"nodeType":"YulExpressionStatement","src":"20430:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20461:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20464:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20454:6:17"},"nodeType":"YulFunctionCall","src":"20454:15:17"},"nodeType":"YulExpressionStatement","src":"20454:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20295:180:17"},{"body":{"nodeType":"YulBlock","src":"20532:269:17","statements":[{"nodeType":"YulAssignment","src":"20542:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20556:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"20562:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20552:3:17"},"nodeType":"YulFunctionCall","src":"20552:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20542:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"20573:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20603:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"20609:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20599:3:17"},"nodeType":"YulFunctionCall","src":"20599:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20577:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"20650:51:17","statements":[{"nodeType":"YulAssignment","src":"20664:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20678:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20686:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20674:3:17"},"nodeType":"YulFunctionCall","src":"20674:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20664:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20630:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20623:6:17"},"nodeType":"YulFunctionCall","src":"20623:26:17"},"nodeType":"YulIf","src":"20620:81:17"},{"body":{"nodeType":"YulBlock","src":"20753:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"20767:16:17"},"nodeType":"YulFunctionCall","src":"20767:18:17"},"nodeType":"YulExpressionStatement","src":"20767:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20717:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20740:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20748:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20737:2:17"},"nodeType":"YulFunctionCall","src":"20737:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20714:2:17"},"nodeType":"YulFunctionCall","src":"20714:38:17"},"nodeType":"YulIf","src":"20711:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20516:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20525:6:17","type":""}],"src":"20481:320:17"},{"body":{"nodeType":"YulBlock","src":"20933:206:17","statements":[{"nodeType":"YulAssignment","src":"20943:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20966:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20951:3:17"},"nodeType":"YulFunctionCall","src":"20951:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20943:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21023:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21036:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21047:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21032:3:17"},"nodeType":"YulFunctionCall","src":"21032:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20979:43:17"},"nodeType":"YulFunctionCall","src":"20979:71:17"},"nodeType":"YulExpressionStatement","src":"20979:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21104:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21117:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21128:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21113:3:17"},"nodeType":"YulFunctionCall","src":"21113:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21060:43:17"},"nodeType":"YulFunctionCall","src":"21060:72:17"},"nodeType":"YulExpressionStatement","src":"21060:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20897:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20909:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20917:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20928:4:17","type":""}],"src":"20807:332:17"},{"body":{"nodeType":"YulBlock","src":"21173:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21190:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21193:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21183:6:17"},"nodeType":"YulFunctionCall","src":"21183:88:17"},"nodeType":"YulExpressionStatement","src":"21183:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21287:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21290:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21280:6:17"},"nodeType":"YulFunctionCall","src":"21280:15:17"},"nodeType":"YulExpressionStatement","src":"21280:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21311:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21314:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21304:6:17"},"nodeType":"YulFunctionCall","src":"21304:15:17"},"nodeType":"YulExpressionStatement","src":"21304:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21145:180:17"},{"body":{"nodeType":"YulBlock","src":"21359:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21376:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21379:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21369:6:17"},"nodeType":"YulFunctionCall","src":"21369:88:17"},"nodeType":"YulExpressionStatement","src":"21369:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21473:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21476:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21466:6:17"},"nodeType":"YulFunctionCall","src":"21466:15:17"},"nodeType":"YulExpressionStatement","src":"21466:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21497:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21500:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21490:6:17"},"nodeType":"YulFunctionCall","src":"21490:15:17"},"nodeType":"YulExpressionStatement","src":"21490:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21331:180:17"},{"body":{"nodeType":"YulBlock","src":"21560:190:17","statements":[{"nodeType":"YulAssignment","src":"21570:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21597:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21579:17:17"},"nodeType":"YulFunctionCall","src":"21579:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21570:5:17"}]},{"body":{"nodeType":"YulBlock","src":"21693:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21695:16:17"},"nodeType":"YulFunctionCall","src":"21695:18:17"},"nodeType":"YulExpressionStatement","src":"21695:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21618:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21625:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21615:2:17"},"nodeType":"YulFunctionCall","src":"21615:77:17"},"nodeType":"YulIf","src":"21612:103:17"},{"nodeType":"YulAssignment","src":"21724:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21735:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21742:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21731:3:17"},"nodeType":"YulFunctionCall","src":"21731:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21724:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21546:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21556:3:17","type":""}],"src":"21517:233:17"},{"body":{"nodeType":"YulBlock","src":"21932:307:17","statements":[{"nodeType":"YulAssignment","src":"21942:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21954:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21965:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21950:3:17"},"nodeType":"YulFunctionCall","src":"21950:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21942:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22022:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22035:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22046:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22031:3:17"},"nodeType":"YulFunctionCall","src":"22031:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21978:43:17"},"nodeType":"YulFunctionCall","src":"21978:71:17"},"nodeType":"YulExpressionStatement","src":"21978:71:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22070:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22081:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22066:3:17"},"nodeType":"YulFunctionCall","src":"22066:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22090:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22096:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22086:3:17"},"nodeType":"YulFunctionCall","src":"22086:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22059:6:17"},"nodeType":"YulFunctionCall","src":"22059:48:17"},"nodeType":"YulExpressionStatement","src":"22059:48:17"},{"nodeType":"YulAssignment","src":"22116:116:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22218:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"22227:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22124:93:17"},"nodeType":"YulFunctionCall","src":"22124:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22116:4:17"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21896:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21908:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21916:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21927:4:17","type":""}],"src":"21756:483:17"},{"body":{"nodeType":"YulBlock","src":"22303:40:17","statements":[{"nodeType":"YulAssignment","src":"22314:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22330:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22324:5:17"},"nodeType":"YulFunctionCall","src":"22324:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22314:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22286:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22296:6:17","type":""}],"src":"22245:98:17"},{"body":{"nodeType":"YulBlock","src":"22462:34:17","statements":[{"nodeType":"YulAssignment","src":"22472:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"22487:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22472:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22434:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"22439:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22450:11:17","type":""}],"src":"22349:147:17"},{"body":{"nodeType":"YulBlock","src":"22564:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22574:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22583:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22578:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"22643:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22668:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"22673:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22664:3:17"},"nodeType":"YulFunctionCall","src":"22664:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22687:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"22692:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22683:3:17"},"nodeType":"YulFunctionCall","src":"22683:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22677:5:17"},"nodeType":"YulFunctionCall","src":"22677:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22657:6:17"},"nodeType":"YulFunctionCall","src":"22657:39:17"},"nodeType":"YulExpressionStatement","src":"22657:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22604:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"22607:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22601:2:17"},"nodeType":"YulFunctionCall","src":"22601:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22615:19:17","statements":[{"nodeType":"YulAssignment","src":"22617:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22626:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"22629:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22622:3:17"},"nodeType":"YulFunctionCall","src":"22622:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22617:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"22597:3:17","statements":[]},"src":"22593:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22726:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"22731:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22722:3:17"},"nodeType":"YulFunctionCall","src":"22722:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"22740:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22715:6:17"},"nodeType":"YulFunctionCall","src":"22715:27:17"},"nodeType":"YulExpressionStatement","src":"22715:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22546:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22551:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"22556:6:17","type":""}],"src":"22502:246:17"},{"body":{"nodeType":"YulBlock","src":"22862:278:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22872:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22918:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22886:31:17"},"nodeType":"YulFunctionCall","src":"22886:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22876:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22933:95:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23016:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"23021:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22940:75:17"},"nodeType":"YulFunctionCall","src":"22940:88:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22933:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23076:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23083:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23072:3:17"},"nodeType":"YulFunctionCall","src":"23072:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"23090:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"23095:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23037:34:17"},"nodeType":"YulFunctionCall","src":"23037:65:17"},"nodeType":"YulExpressionStatement","src":"23037:65:17"},{"nodeType":"YulAssignment","src":"23111:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23122:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"23127:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23118:3:17"},"nodeType":"YulFunctionCall","src":"23118:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23111:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22843:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22850:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22858:3:17","type":""}],"src":"22754:386:17"},{"body":{"nodeType":"YulBlock","src":"23280:137:17","statements":[{"nodeType":"YulAssignment","src":"23291:100:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23378:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"23387:3:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23298:79:17"},"nodeType":"YulFunctionCall","src":"23298:93:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23291:3:17"}]},{"nodeType":"YulAssignment","src":"23401:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"23408:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23401:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23259:3:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23265:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23276:3:17","type":""}],"src":"23146:271:17"},{"body":{"nodeType":"YulBlock","src":"23468:149:17","statements":[{"nodeType":"YulAssignment","src":"23478:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23501:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23483:17:17"},"nodeType":"YulFunctionCall","src":"23483:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23478:1:17"}]},{"nodeType":"YulAssignment","src":"23512:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23535:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23517:17:17"},"nodeType":"YulFunctionCall","src":"23517:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23512:1:17"}]},{"nodeType":"YulAssignment","src":"23546:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23558:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"23561:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23554:3:17"},"nodeType":"YulFunctionCall","src":"23554:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23546:4:17"}]},{"body":{"nodeType":"YulBlock","src":"23588:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23590:16:17"},"nodeType":"YulFunctionCall","src":"23590:18:17"},"nodeType":"YulExpressionStatement","src":"23590:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23579:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"23585:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23576:2:17"},"nodeType":"YulFunctionCall","src":"23576:11:17"},"nodeType":"YulIf","src":"23573:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23454:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"23457:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23463:4:17","type":""}],"src":"23423:194:17"},{"body":{"nodeType":"YulBlock","src":"23671:362:17","statements":[{"nodeType":"YulAssignment","src":"23681:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23704:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23686:17:17"},"nodeType":"YulFunctionCall","src":"23686:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23681:1:17"}]},{"nodeType":"YulAssignment","src":"23715:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23738:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23720:17:17"},"nodeType":"YulFunctionCall","src":"23720:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23715:1:17"}]},{"nodeType":"YulVariableDeclaration","src":"23749:28:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23772:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"23775:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23768:3:17"},"nodeType":"YulFunctionCall","src":"23768:9:17"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"23753:11:17","type":""}]},{"nodeType":"YulAssignment","src":"23786:41:17","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"23815:11:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23797:17:17"},"nodeType":"YulFunctionCall","src":"23797:30:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23786:7:17"}]},{"body":{"nodeType":"YulBlock","src":"24004:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24006:16:17"},"nodeType":"YulFunctionCall","src":"24006:18:17"},"nodeType":"YulExpressionStatement","src":"24006:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23937:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23930:6:17"},"nodeType":"YulFunctionCall","src":"23930:9:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23960:1:17"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23967:7:17"},{"name":"x","nodeType":"YulIdentifier","src":"23976:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23963:3:17"},"nodeType":"YulFunctionCall","src":"23963:15:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23957:2:17"},"nodeType":"YulFunctionCall","src":"23957:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23910:2:17"},"nodeType":"YulFunctionCall","src":"23910:83:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23890:6:17"},"nodeType":"YulFunctionCall","src":"23890:113:17"},"nodeType":"YulIf","src":"23887:139:17"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23654:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"23657:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23663:7:17","type":""}],"src":"23623:410:17"},{"body":{"nodeType":"YulBlock","src":"24083:147:17","statements":[{"nodeType":"YulAssignment","src":"24093:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24116:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24098:17:17"},"nodeType":"YulFunctionCall","src":"24098:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24093:1:17"}]},{"nodeType":"YulAssignment","src":"24127:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24150:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24132:17:17"},"nodeType":"YulFunctionCall","src":"24132:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24127:1:17"}]},{"nodeType":"YulAssignment","src":"24161:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24172:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"24175:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24168:3:17"},"nodeType":"YulFunctionCall","src":"24168:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24161:3:17"}]},{"body":{"nodeType":"YulBlock","src":"24201:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24203:16:17"},"nodeType":"YulFunctionCall","src":"24203:18:17"},"nodeType":"YulExpressionStatement","src":"24203:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24193:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"24196:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24190:2:17"},"nodeType":"YulFunctionCall","src":"24190:10:17"},"nodeType":"YulIf","src":"24187:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24070:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"24073:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24079:3:17","type":""}],"src":"24039:191:17"},{"body":{"nodeType":"YulBlock","src":"24264:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24281:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24284:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24274:6:17"},"nodeType":"YulFunctionCall","src":"24274:88:17"},"nodeType":"YulExpressionStatement","src":"24274:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24378:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24381:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24371:6:17"},"nodeType":"YulFunctionCall","src":"24371:15:17"},"nodeType":"YulExpressionStatement","src":"24371:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24402:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24405:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24395:6:17"},"nodeType":"YulFunctionCall","src":"24395:15:17"},"nodeType":"YulExpressionStatement","src":"24395:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"24236:180:17"},{"body":{"nodeType":"YulBlock","src":"24464:143:17","statements":[{"nodeType":"YulAssignment","src":"24474:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24497:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24479:17:17"},"nodeType":"YulFunctionCall","src":"24479:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24474:1:17"}]},{"nodeType":"YulAssignment","src":"24508:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24531:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24513:17:17"},"nodeType":"YulFunctionCall","src":"24513:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24508:1:17"}]},{"body":{"nodeType":"YulBlock","src":"24555:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24557:16:17"},"nodeType":"YulFunctionCall","src":"24557:18:17"},"nodeType":"YulExpressionStatement","src":"24557:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24552:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24545:6:17"},"nodeType":"YulFunctionCall","src":"24545:9:17"},"nodeType":"YulIf","src":"24542:35:17"},{"nodeType":"YulAssignment","src":"24587:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24596:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"24599:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24592:3:17"},"nodeType":"YulFunctionCall","src":"24592:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24587:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24453:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"24456:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"24462:1:17","type":""}],"src":"24422:185:17"},{"body":{"nodeType":"YulBlock","src":"24803:434:17","statements":[{"nodeType":"YulAssignment","src":"24813:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24825:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24836:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24821:3:17"},"nodeType":"YulFunctionCall","src":"24821:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24813:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24894:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24907:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24918:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24903:3:17"},"nodeType":"YulFunctionCall","src":"24903:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24850:43:17"},"nodeType":"YulFunctionCall","src":"24850:71:17"},"nodeType":"YulExpressionStatement","src":"24850:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24973:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24986:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24997:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24982:3:17"},"nodeType":"YulFunctionCall","src":"24982:18:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"24931:41:17"},"nodeType":"YulFunctionCall","src":"24931:70:17"},"nodeType":"YulExpressionStatement","src":"24931:70:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25049:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25062:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25073:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25058:3:17"},"nodeType":"YulFunctionCall","src":"25058:18:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25011:37:17"},"nodeType":"YulFunctionCall","src":"25011:66:17"},"nodeType":"YulExpressionStatement","src":"25011:66:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25125:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25138:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25149:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25134:3:17"},"nodeType":"YulFunctionCall","src":"25134:18:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25087:37:17"},"nodeType":"YulFunctionCall","src":"25087:66:17"},"nodeType":"YulExpressionStatement","src":"25087:66:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25201:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25214:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25225:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25210:3:17"},"nodeType":"YulFunctionCall","src":"25210:19:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25163:37:17"},"nodeType":"YulFunctionCall","src":"25163:67:17"},"nodeType":"YulExpressionStatement","src":"25163:67:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24743:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24755:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24763:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24771:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24779:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24787:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24798:4:17","type":""}],"src":"24613:624:17"},{"body":{"nodeType":"YulBlock","src":"25349:8:17","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25341:6:17","type":""}],"src":"25243:114:17"},{"body":{"nodeType":"YulBlock","src":"25526:235:17","statements":[{"nodeType":"YulAssignment","src":"25536:90:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25619:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25624:1:17","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25543:75:17"},"nodeType":"YulFunctionCall","src":"25543:83:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25536:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25724:3:17"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"25635:88:17"},"nodeType":"YulFunctionCall","src":"25635:93:17"},"nodeType":"YulExpressionStatement","src":"25635:93:17"},{"nodeType":"YulAssignment","src":"25737:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25748:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25753:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25744:3:17"},"nodeType":"YulFunctionCall","src":"25744:11:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25737:3:17"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25514:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25522:3:17","type":""}],"src":"25363:398:17"},{"body":{"nodeType":"YulBlock","src":"25955:191:17","statements":[{"nodeType":"YulAssignment","src":"25966:154:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26116:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25973:141:17"},"nodeType":"YulFunctionCall","src":"25973:147:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25966:3:17"}]},{"nodeType":"YulAssignment","src":"26130:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"26137:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26130:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25942:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25951:3:17","type":""}],"src":"25767:379:17"},{"body":{"nodeType":"YulBlock","src":"26211:81:17","statements":[{"nodeType":"YulAssignment","src":"26221:65:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26278:5:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"26261:16:17"},"nodeType":"YulFunctionCall","src":"26261:23:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"26252:8:17"},"nodeType":"YulFunctionCall","src":"26252:33:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26234:17:17"},"nodeType":"YulFunctionCall","src":"26234:52:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"26221:9:17"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26191:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"26201:9:17","type":""}],"src":"26152:140:17"},{"body":{"nodeType":"YulBlock","src":"26362:65:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26379:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26414:5:17"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"26384:29:17"},"nodeType":"YulFunctionCall","src":"26384:36:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26372:6:17"},"nodeType":"YulFunctionCall","src":"26372:49:17"},"nodeType":"YulExpressionStatement","src":"26372:49:17"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26350:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26357:3:17","type":""}],"src":"26298:129:17"},{"body":{"nodeType":"YulBlock","src":"26585:286:17","statements":[{"nodeType":"YulAssignment","src":"26595:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26607:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26618:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26603:3:17"},"nodeType":"YulFunctionCall","src":"26603:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26595:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26675:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26688:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26699:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26684:3:17"},"nodeType":"YulFunctionCall","src":"26684:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26631:43:17"},"nodeType":"YulFunctionCall","src":"26631:71:17"},"nodeType":"YulExpressionStatement","src":"26631:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26755:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26768:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26779:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26764:3:17"},"nodeType":"YulFunctionCall","src":"26764:18:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26712:42:17"},"nodeType":"YulFunctionCall","src":"26712:71:17"},"nodeType":"YulExpressionStatement","src":"26712:71:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26836:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26849:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26860:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26845:3:17"},"nodeType":"YulFunctionCall","src":"26845:18:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26793:42:17"},"nodeType":"YulFunctionCall","src":"26793:71:17"},"nodeType":"YulExpressionStatement","src":"26793:71:17"}]},"name":"abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26541:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26553:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26561:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26569:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26580:4:17","type":""}],"src":"26433:438:17"},{"body":{"nodeType":"YulBlock","src":"26920:170:17","statements":[{"nodeType":"YulAssignment","src":"26930:24:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26952:1:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"26935:16:17"},"nodeType":"YulFunctionCall","src":"26935:19:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26930:1:17"}]},{"nodeType":"YulAssignment","src":"26963:24:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26985:1:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"26968:16:17"},"nodeType":"YulFunctionCall","src":"26968:19:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26963:1:17"}]},{"nodeType":"YulAssignment","src":"26996:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27007:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"27010:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27003:3:17"},"nodeType":"YulFunctionCall","src":"27003:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26996:3:17"}]},{"body":{"nodeType":"YulBlock","src":"27061:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27063:16:17"},"nodeType":"YulFunctionCall","src":"27063:18:17"},"nodeType":"YulExpressionStatement","src":"27063:18:17"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"27028:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27033:26:17","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27025:2:17"},"nodeType":"YulFunctionCall","src":"27025:35:17"},"nodeType":"YulIf","src":"27022:61:17"}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26907:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"26910:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26916:3:17","type":""}],"src":"26877:213:17"},{"body":{"nodeType":"YulBlock","src":"27140:172:17","statements":[{"nodeType":"YulAssignment","src":"27150:24:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27172:1:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27155:16:17"},"nodeType":"YulFunctionCall","src":"27155:19:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27150:1:17"}]},{"nodeType":"YulAssignment","src":"27183:24:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27205:1:17"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27188:16:17"},"nodeType":"YulFunctionCall","src":"27188:19:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27183:1:17"}]},{"nodeType":"YulAssignment","src":"27216:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27228:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"27231:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27224:3:17"},"nodeType":"YulFunctionCall","src":"27224:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"27216:4:17"}]},{"body":{"nodeType":"YulBlock","src":"27283:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27285:16:17"},"nodeType":"YulFunctionCall","src":"27285:18:17"},"nodeType":"YulExpressionStatement","src":"27285:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"27249:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"27255:26:17","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27246:2:17"},"nodeType":"YulFunctionCall","src":"27246:36:17"},"nodeType":"YulIf","src":"27243:62:17"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27126:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"27129:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"27135:4:17","type":""}],"src":"27096:216:17"},{"body":{"nodeType":"YulBlock","src":"27443:205:17","statements":[{"nodeType":"YulAssignment","src":"27453:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27465:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27476:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27461:3:17"},"nodeType":"YulFunctionCall","src":"27461:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27453:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27533:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27546:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27557:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27542:3:17"},"nodeType":"YulFunctionCall","src":"27542:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27489:43:17"},"nodeType":"YulFunctionCall","src":"27489:71:17"},"nodeType":"YulExpressionStatement","src":"27489:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27613:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27626:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27637:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27622:3:17"},"nodeType":"YulFunctionCall","src":"27622:18:17"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27570:42:17"},"nodeType":"YulFunctionCall","src":"27570:71:17"},"nodeType":"YulExpressionStatement","src":"27570:71:17"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27407:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27419:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27427:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27438:4:17","type":""}],"src":"27318:330:17"},{"body":{"nodeType":"YulBlock","src":"27694:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"27748:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27757:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27760:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27750:6:17"},"nodeType":"YulFunctionCall","src":"27750:12:17"},"nodeType":"YulExpressionStatement","src":"27750:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27717:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27739:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"27724:14:17"},"nodeType":"YulFunctionCall","src":"27724:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27714:2:17"},"nodeType":"YulFunctionCall","src":"27714:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27707:6:17"},"nodeType":"YulFunctionCall","src":"27707:40:17"},"nodeType":"YulIf","src":"27704:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27687:5:17","type":""}],"src":"27654:116:17"},{"body":{"nodeType":"YulBlock","src":"27836:77:17","statements":[{"nodeType":"YulAssignment","src":"27846:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27861:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27855:5:17"},"nodeType":"YulFunctionCall","src":"27855:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27846:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27901:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"27877:23:17"},"nodeType":"YulFunctionCall","src":"27877:30:17"},"nodeType":"YulExpressionStatement","src":"27877:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27814:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"27822:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27830:5:17","type":""}],"src":"27776:137:17"},{"body":{"nodeType":"YulBlock","src":"27993:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"28039:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28041:77:17"},"nodeType":"YulFunctionCall","src":"28041:79:17"},"nodeType":"YulExpressionStatement","src":"28041:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28014:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"28023:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28010:3:17"},"nodeType":"YulFunctionCall","src":"28010:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"28035:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28006:3:17"},"nodeType":"YulFunctionCall","src":"28006:32:17"},"nodeType":"YulIf","src":"28003:119:17"},{"nodeType":"YulBlock","src":"28132:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"28147:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"28161:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28151:6:17","type":""}]},{"nodeType":"YulAssignment","src":"28176:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28219:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"28230:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28215:3:17"},"nodeType":"YulFunctionCall","src":"28215:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28239:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"28186:28:17"},"nodeType":"YulFunctionCall","src":"28186:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28176:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27963:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27974:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27986:6:17","type":""}],"src":"27919:345:17"},{"body":{"nodeType":"YulBlock","src":"28366:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28383:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"28388:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28376:6:17"},"nodeType":"YulFunctionCall","src":"28376:19:17"},"nodeType":"YulExpressionStatement","src":"28376:19:17"},{"nodeType":"YulAssignment","src":"28404:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28423:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28428:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28419:3:17"},"nodeType":"YulFunctionCall","src":"28419:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28404:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28338:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"28343:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28354:11:17","type":""}],"src":"28270:169:17"},{"body":{"nodeType":"YulBlock","src":"28551:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28573:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28581:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28569:3:17"},"nodeType":"YulFunctionCall","src":"28569:14:17"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"28585:24:17","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28562:6:17"},"nodeType":"YulFunctionCall","src":"28562:48:17"},"nodeType":"YulExpressionStatement","src":"28562:48:17"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28543:6:17","type":""}],"src":"28445:172:17"},{"body":{"nodeType":"YulBlock","src":"28769:220:17","statements":[{"nodeType":"YulAssignment","src":"28779:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28845:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28850:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28786:58:17"},"nodeType":"YulFunctionCall","src":"28786:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28779:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28951:3:17"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"28862:88:17"},"nodeType":"YulFunctionCall","src":"28862:93:17"},"nodeType":"YulExpressionStatement","src":"28862:93:17"},{"nodeType":"YulAssignment","src":"28964:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28975:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28980:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28971:3:17"},"nodeType":"YulFunctionCall","src":"28971:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28964:3:17"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28757:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28765:3:17","type":""}],"src":"28623:366:17"},{"body":{"nodeType":"YulBlock","src":"29166:248:17","statements":[{"nodeType":"YulAssignment","src":"29176:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29188:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29199:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29184:3:17"},"nodeType":"YulFunctionCall","src":"29184:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29176:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29223:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29234:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29219:3:17"},"nodeType":"YulFunctionCall","src":"29219:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29242:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29248:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29238:3:17"},"nodeType":"YulFunctionCall","src":"29238:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29212:6:17"},"nodeType":"YulFunctionCall","src":"29212:47:17"},"nodeType":"YulExpressionStatement","src":"29212:47:17"},{"nodeType":"YulAssignment","src":"29268:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29402:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29276:124:17"},"nodeType":"YulFunctionCall","src":"29276:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29268:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29146:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29161:4:17","type":""}],"src":"28995:419:17"},{"body":{"nodeType":"YulBlock","src":"29488:66:17","statements":[{"nodeType":"YulAssignment","src":"29498:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29542:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"29511:30:17"},"nodeType":"YulFunctionCall","src":"29511:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29498:9:17"}]}]},"name":"convert_t_address_payable_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29468:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29478:9:17","type":""}],"src":"29420:134:17"},{"body":{"nodeType":"YulBlock","src":"29633:74:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29650:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29694:5:17"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nodeType":"YulIdentifier","src":"29655:38:17"},"nodeType":"YulFunctionCall","src":"29655:45:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29643:6:17"},"nodeType":"YulFunctionCall","src":"29643:58:17"},"nodeType":"YulExpressionStatement","src":"29643:58:17"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29621:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29628:3:17","type":""}],"src":"29560:147:17"},{"body":{"nodeType":"YulBlock","src":"29847:214:17","statements":[{"nodeType":"YulAssignment","src":"29857:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29869:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29880:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29865:3:17"},"nodeType":"YulFunctionCall","src":"29865:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29857:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29945:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29958:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29969:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29954:3:17"},"nodeType":"YulFunctionCall","src":"29954:17:17"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29893:51:17"},"nodeType":"YulFunctionCall","src":"29893:79:17"},"nodeType":"YulExpressionStatement","src":"29893:79:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30026:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30039:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30050:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30035:3:17"},"nodeType":"YulFunctionCall","src":"30035:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29982:43:17"},"nodeType":"YulFunctionCall","src":"29982:72:17"},"nodeType":"YulExpressionStatement","src":"29982:72:17"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29811:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29823:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29831:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29842:4:17","type":""}],"src":"29713:348:17"},{"body":{"nodeType":"YulBlock","src":"30193:206:17","statements":[{"nodeType":"YulAssignment","src":"30203:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30215:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30226:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30211:3:17"},"nodeType":"YulFunctionCall","src":"30211:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30203:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30283:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30296:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30307:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30292:3:17"},"nodeType":"YulFunctionCall","src":"30292:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30239:43:17"},"nodeType":"YulFunctionCall","src":"30239:71:17"},"nodeType":"YulExpressionStatement","src":"30239:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30364:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30377:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30388:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30373:3:17"},"nodeType":"YulFunctionCall","src":"30373:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30320:43:17"},"nodeType":"YulFunctionCall","src":"30320:72:17"},"nodeType":"YulExpressionStatement","src":"30320:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30157:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30169:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30177:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30188:4:17","type":""}],"src":"30067:332:17"},{"body":{"nodeType":"YulBlock","src":"30494:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30511:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30514:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30504:6:17"},"nodeType":"YulFunctionCall","src":"30504:12:17"},"nodeType":"YulExpressionStatement","src":"30504:12:17"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"30405:117:17"},{"body":{"nodeType":"YulBlock","src":"30617:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30634:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30637:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30627:6:17"},"nodeType":"YulFunctionCall","src":"30627:12:17"},"nodeType":"YulExpressionStatement","src":"30627:12:17"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"30528:117:17"},{"body":{"nodeType":"YulBlock","src":"30740:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30757:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30760:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30750:6:17"},"nodeType":"YulFunctionCall","src":"30750:12:17"},"nodeType":"YulExpressionStatement","src":"30750:12:17"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"30651:117:17"},{"body":{"nodeType":"YulBlock","src":"30864:634:17","statements":[{"nodeType":"YulVariableDeclaration","src":"30874:51:17","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"30913:11:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30900:12:17"},"nodeType":"YulFunctionCall","src":"30900:25:17"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"30878:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"31019:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"31021:77:17"},"nodeType":"YulFunctionCall","src":"31021:79:17"},"nodeType":"YulExpressionStatement","src":"31021:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"30948:18:17"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"30976:12:17"},"nodeType":"YulFunctionCall","src":"30976:14:17"},{"name":"base_ref","nodeType":"YulIdentifier","src":"30992:8:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30972:3:17"},"nodeType":"YulFunctionCall","src":"30972:29:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31007:4:17","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"31013:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31003:3:17"},"nodeType":"YulFunctionCall","src":"31003:12:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30968:3:17"},"nodeType":"YulFunctionCall","src":"30968:48:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30944:3:17"},"nodeType":"YulFunctionCall","src":"30944:73:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30937:6:17"},"nodeType":"YulFunctionCall","src":"30937:81:17"},"nodeType":"YulIf","src":"30934:168:17"},{"nodeType":"YulAssignment","src":"31111:41:17","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"31123:8:17"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"31133:18:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31119:3:17"},"nodeType":"YulFunctionCall","src":"31119:33:17"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"31111:4:17"}]},{"nodeType":"YulAssignment","src":"31162:28:17","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"31185:4:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31172:12:17"},"nodeType":"YulFunctionCall","src":"31172:18:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31162:6:17"}]},{"body":{"nodeType":"YulBlock","src":"31233:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"31235:77:17"},"nodeType":"YulFunctionCall","src":"31235:79:17"},"nodeType":"YulExpressionStatement","src":"31235:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31205:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31213:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31202:2:17"},"nodeType":"YulFunctionCall","src":"31202:30:17"},"nodeType":"YulIf","src":"31199:117:17"},{"nodeType":"YulAssignment","src":"31325:21:17","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"31337:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"31343:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31333:3:17"},"nodeType":"YulFunctionCall","src":"31333:13:17"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"31325:4:17"}]},{"body":{"nodeType":"YulBlock","src":"31408:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"31410:77:17"},"nodeType":"YulFunctionCall","src":"31410:79:17"},"nodeType":"YulExpressionStatement","src":"31410:79:17"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"31362:4:17"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"31372:12:17"},"nodeType":"YulFunctionCall","src":"31372:14:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31392:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31400:4:17","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31388:3:17"},"nodeType":"YulFunctionCall","src":"31388:17:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31368:3:17"},"nodeType":"YulFunctionCall","src":"31368:38:17"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"31358:3:17"},"nodeType":"YulFunctionCall","src":"31358:49:17"},"nodeType":"YulIf","src":"31355:136:17"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"30825:8:17","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"30835:11:17","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"30851:4:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"30857:6:17","type":""}],"src":"30774:724:17"},{"body":{"nodeType":"YulBlock","src":"31546:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"31602:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31611:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31614:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31604:6:17"},"nodeType":"YulFunctionCall","src":"31604:12:17"},"nodeType":"YulExpressionStatement","src":"31604:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31569:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31593:5:17"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"31576:16:17"},"nodeType":"YulFunctionCall","src":"31576:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31566:2:17"},"nodeType":"YulFunctionCall","src":"31566:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31559:6:17"},"nodeType":"YulFunctionCall","src":"31559:42:17"},"nodeType":"YulIf","src":"31556:62:17"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31539:5:17","type":""}],"src":"31504:120:17"},{"body":{"nodeType":"YulBlock","src":"31681:86:17","statements":[{"nodeType":"YulAssignment","src":"31691:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31713:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31700:12:17"},"nodeType":"YulFunctionCall","src":"31700:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31691:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31755:5:17"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"31729:25:17"},"nodeType":"YulFunctionCall","src":"31729:32:17"},"nodeType":"YulExpressionStatement","src":"31729:32:17"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31659:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"31667:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31675:5:17","type":""}],"src":"31630:137:17"},{"body":{"nodeType":"YulBlock","src":"31838:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"31884:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31886:77:17"},"nodeType":"YulFunctionCall","src":"31886:79:17"},"nodeType":"YulExpressionStatement","src":"31886:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31859:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"31868:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31855:3:17"},"nodeType":"YulFunctionCall","src":"31855:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"31880:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31851:3:17"},"nodeType":"YulFunctionCall","src":"31851:32:17"},"nodeType":"YulIf","src":"31848:119:17"},{"nodeType":"YulBlock","src":"31977:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"31992:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"32006:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31996:6:17","type":""}]},{"nodeType":"YulAssignment","src":"32021:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32055:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"32066:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32051:3:17"},"nodeType":"YulFunctionCall","src":"32051:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32075:7:17"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"32031:19:17"},"nodeType":"YulFunctionCall","src":"32031:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32021:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31808:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31819:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31831:6:17","type":""}],"src":"31773:327:17"},{"body":{"nodeType":"YulBlock","src":"32159:87:17","statements":[{"nodeType":"YulAssignment","src":"32169:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32177:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32169:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32197:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"32200:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32190:6:17"},"nodeType":"YulFunctionCall","src":"32190:14:17"},"nodeType":"YulExpressionStatement","src":"32190:14:17"},{"nodeType":"YulAssignment","src":"32213:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32231:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32234:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"32221:9:17"},"nodeType":"YulFunctionCall","src":"32221:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32213:4:17"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32146:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32154:4:17","type":""}],"src":"32106:140:17"},{"body":{"nodeType":"YulBlock","src":"32296:49:17","statements":[{"nodeType":"YulAssignment","src":"32306:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32324:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"32331:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32320:3:17"},"nodeType":"YulFunctionCall","src":"32320:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"32336:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32316:3:17"},"nodeType":"YulFunctionCall","src":"32316:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32306:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32279:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32289:6:17","type":""}],"src":"32252:93:17"},{"body":{"nodeType":"YulBlock","src":"32404:54:17","statements":[{"nodeType":"YulAssignment","src":"32414:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"32439:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"32445:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32435:3:17"},"nodeType":"YulFunctionCall","src":"32435:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32414:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"32379:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"32385:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"32395:8:17","type":""}],"src":"32351:107:17"},{"body":{"nodeType":"YulBlock","src":"32540:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"32550:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"32571:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"32583:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32567:3:17"},"nodeType":"YulFunctionCall","src":"32567:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"32554:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32594:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32625:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32636:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32606:18:17"},"nodeType":"YulFunctionCall","src":"32606:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32598:4:17","type":""}]},{"nodeType":"YulAssignment","src":"32712:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32743:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"32754:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32724:18:17"},"nodeType":"YulFunctionCall","src":"32724:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32712:8:17"}]},{"nodeType":"YulAssignment","src":"32772:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32785:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"32796:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32792:3:17"},"nodeType":"YulFunctionCall","src":"32792:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32781:3:17"},"nodeType":"YulFunctionCall","src":"32781:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32772:5:17"}]},{"nodeType":"YulAssignment","src":"32811:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32824:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32835:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"32845:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32831:3:17"},"nodeType":"YulFunctionCall","src":"32831:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32821:2:17"},"nodeType":"YulFunctionCall","src":"32821:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32811:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32501:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"32508:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"32520:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32533:6:17","type":""}],"src":"32464:393:17"},{"body":{"nodeType":"YulBlock","src":"32923:82:17","statements":[{"nodeType":"YulAssignment","src":"32933:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32991:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32973:17:17"},"nodeType":"YulFunctionCall","src":"32973:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32964:8:17"},"nodeType":"YulFunctionCall","src":"32964:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32946:17:17"},"nodeType":"YulFunctionCall","src":"32946:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32933:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32903:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32913:9:17","type":""}],"src":"32863:142:17"},{"body":{"nodeType":"YulBlock","src":"33058:28:17","statements":[{"nodeType":"YulAssignment","src":"33068:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"33075:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33068:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33044:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33054:3:17","type":""}],"src":"33011:75:17"},{"body":{"nodeType":"YulBlock","src":"33168:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33178:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"33233:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33202:30:17"},"nodeType":"YulFunctionCall","src":"33202:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"33182:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33257:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33297:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33291:5:17"},"nodeType":"YulFunctionCall","src":"33291:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"33304:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"33336:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"33312:23:17"},"nodeType":"YulFunctionCall","src":"33312:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"33263:27:17"},"nodeType":"YulFunctionCall","src":"33263:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33250:6:17"},"nodeType":"YulFunctionCall","src":"33250:105:17"},"nodeType":"YulExpressionStatement","src":"33250:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33145:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33151:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"33159:7:17","type":""}],"src":"33092:269:17"},{"body":{"nodeType":"YulBlock","src":"33416:24:17","statements":[{"nodeType":"YulAssignment","src":"33426:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"33433:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33426:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33412:3:17","type":""}],"src":"33367:73:17"},{"body":{"nodeType":"YulBlock","src":"33499:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33509:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"33523:30:17"},"nodeType":"YulFunctionCall","src":"33523:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"33513:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33608:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"33614:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"33622:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33564:43:17"},"nodeType":"YulFunctionCall","src":"33564:65:17"},"nodeType":"YulExpressionStatement","src":"33564:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33485:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33491:6:17","type":""}],"src":"33446:189:17"},{"body":{"nodeType":"YulBlock","src":"33691:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"33758:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33802:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33809:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"33772:29:17"},"nodeType":"YulFunctionCall","src":"33772:39:17"},"nodeType":"YulExpressionStatement","src":"33772:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33711:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"33718:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33708:2:17"},"nodeType":"YulFunctionCall","src":"33708:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33723:26:17","statements":[{"nodeType":"YulAssignment","src":"33725:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33738:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33745:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33734:3:17"},"nodeType":"YulFunctionCall","src":"33734:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"33725:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"33705:2:17","statements":[]},"src":"33701:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"33679:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"33686:3:17","type":""}],"src":"33641:186:17"},{"body":{"nodeType":"YulBlock","src":"33911:463:17","statements":[{"body":{"nodeType":"YulBlock","src":"33937:430:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33951:53:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"33998:5:17"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"33967:30:17"},"nodeType":"YulFunctionCall","src":"33967:37:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"33955:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34017:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34040:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34068:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34050:17:17"},"nodeType":"YulFunctionCall","src":"34050:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34036:3:17"},"nodeType":"YulFunctionCall","src":"34036:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"34021:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"34237:27:17","statements":[{"nodeType":"YulAssignment","src":"34239:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"34254:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"34239:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34221:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"34233:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34218:2:17"},"nodeType":"YulFunctionCall","src":"34218:18:17"},"nodeType":"YulIf","src":"34215:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"34306:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34323:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34351:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34333:17:17"},"nodeType":"YulFunctionCall","src":"34333:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34319:3:17"},"nodeType":"YulFunctionCall","src":"34319:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"34277:28:17"},"nodeType":"YulFunctionCall","src":"34277:80:17"},"nodeType":"YulExpressionStatement","src":"34277:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33928:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"33933:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33925:2:17"},"nodeType":"YulFunctionCall","src":"33925:11:17"},"nodeType":"YulIf","src":"33922:445:17"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"33887:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"33894:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"33899:10:17","type":""}],"src":"33833:541:17"},{"body":{"nodeType":"YulBlock","src":"34443:54:17","statements":[{"nodeType":"YulAssignment","src":"34453:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34478:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"34484:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"34474:3:17"},"nodeType":"YulFunctionCall","src":"34474:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34453:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"34418:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"34424:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34434:8:17","type":""}],"src":"34380:117:17"},{"body":{"nodeType":"YulBlock","src":"34554:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"34564:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34613:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"34616:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34609:3:17"},"nodeType":"YulFunctionCall","src":"34609:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34628:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34624:3:17"},"nodeType":"YulFunctionCall","src":"34624:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"34580:28:17"},"nodeType":"YulFunctionCall","src":"34580:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34576:3:17"},"nodeType":"YulFunctionCall","src":"34576:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34568:4:17","type":""}]},{"nodeType":"YulAssignment","src":"34641:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34655:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"34661:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34651:3:17"},"nodeType":"YulFunctionCall","src":"34651:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34641:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34531:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"34537:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34547:6:17","type":""}],"src":"34503:169:17"},{"body":{"nodeType":"YulBlock","src":"34758:214:17","statements":[{"nodeType":"YulAssignment","src":"34891:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34918:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"34924:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34899:18:17"},"nodeType":"YulFunctionCall","src":"34899:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34891:4:17"}]},{"nodeType":"YulAssignment","src":"34937:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34948:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34958:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"34961:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34954:3:17"},"nodeType":"YulFunctionCall","src":"34954:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34945:2:17"},"nodeType":"YulFunctionCall","src":"34945:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"34937:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34739:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"34745:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"34753:4:17","type":""}],"src":"34677:295:17"},{"body":{"nodeType":"YulBlock","src":"35067:1300:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35078:50:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35124:3:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"35092:31:17"},"nodeType":"YulFunctionCall","src":"35092:36:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"35082:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"35213:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35215:16:17"},"nodeType":"YulFunctionCall","src":"35215:18:17"},"nodeType":"YulExpressionStatement","src":"35215:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35185:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35193:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35182:2:17"},"nodeType":"YulFunctionCall","src":"35182:30:17"},"nodeType":"YulIf","src":"35179:56:17"},{"nodeType":"YulVariableDeclaration","src":"35245:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35291:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35285:5:17"},"nodeType":"YulFunctionCall","src":"35285:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"35259:25:17"},"nodeType":"YulFunctionCall","src":"35259:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"35249:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35389:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"35395:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"35403:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"35344:44:17"},"nodeType":"YulFunctionCall","src":"35344:66:17"},"nodeType":"YulExpressionStatement","src":"35344:66:17"},{"nodeType":"YulVariableDeclaration","src":"35420:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35437:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"35424:9:17","type":""}]},{"nodeType":"YulAssignment","src":"35448:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35461:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35448:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"35512:610:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35526:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35545:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35557:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35553:3:17"},"nodeType":"YulFunctionCall","src":"35553:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35541:3:17"},"nodeType":"YulFunctionCall","src":"35541:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"35530:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35577:50:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35622:4:17"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"35591:30:17"},"nodeType":"YulFunctionCall","src":"35591:36:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"35581:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35640:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35649:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35644:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"35708:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35733:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35751:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35756:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35747:3:17"},"nodeType":"YulFunctionCall","src":"35747:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35741:5:17"},"nodeType":"YulFunctionCall","src":"35741:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35726:6:17"},"nodeType":"YulFunctionCall","src":"35726:42:17"},"nodeType":"YulExpressionStatement","src":"35726:42:17"},{"nodeType":"YulAssignment","src":"35785:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35799:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35807:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35795:3:17"},"nodeType":"YulFunctionCall","src":"35795:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35785:6:17"}]},{"nodeType":"YulAssignment","src":"35826:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35843:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35854:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35839:3:17"},"nodeType":"YulFunctionCall","src":"35839:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35826:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35674:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"35677:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35671:2:17"},"nodeType":"YulFunctionCall","src":"35671:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35686:21:17","statements":[{"nodeType":"YulAssignment","src":"35688:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35697:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"35700:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35693:3:17"},"nodeType":"YulFunctionCall","src":"35693:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"35688:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"35667:3:17","statements":[]},"src":"35663:208:17"},{"body":{"nodeType":"YulBlock","src":"35907:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"35925:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35952:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35957:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35948:3:17"},"nodeType":"YulFunctionCall","src":"35948:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35942:5:17"},"nodeType":"YulFunctionCall","src":"35942:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"35929:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35992:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"36019:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36034:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"36042:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36030:3:17"},"nodeType":"YulFunctionCall","src":"36030:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"36000:18:17"},"nodeType":"YulFunctionCall","src":"36000:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35985:6:17"},"nodeType":"YulFunctionCall","src":"35985:64:17"},"nodeType":"YulExpressionStatement","src":"35985:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"35890:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"35899:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35887:2:17"},"nodeType":"YulFunctionCall","src":"35887:19:17"},"nodeType":"YulIf","src":"35884:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36083:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36097:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"36105:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36093:3:17"},"nodeType":"YulFunctionCall","src":"36093:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"36109:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36089:3:17"},"nodeType":"YulFunctionCall","src":"36089:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36076:6:17"},"nodeType":"YulFunctionCall","src":"36076:36:17"},"nodeType":"YulExpressionStatement","src":"36076:36:17"}]},"nodeType":"YulCase","src":"35505:617:17","value":{"kind":"number","nodeType":"YulLiteral","src":"35510:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"36139:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"36153:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"36166:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"36157:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"36190:67:17","statements":[{"nodeType":"YulAssignment","src":"36208:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36227:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36232:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36223:3:17"},"nodeType":"YulFunctionCall","src":"36223:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36217:5:17"},"nodeType":"YulFunctionCall","src":"36217:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36208:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"36183:6:17"},"nodeType":"YulIf","src":"36180:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36277:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36336:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"36343:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"36283:52:17"},"nodeType":"YulFunctionCall","src":"36283:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36270:6:17"},"nodeType":"YulFunctionCall","src":"36270:81:17"},"nodeType":"YulExpressionStatement","src":"36270:81:17"}]},"nodeType":"YulCase","src":"36131:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35485:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35493:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35482:2:17"},"nodeType":"YulFunctionCall","src":"35482:14:17"},"nodeType":"YulSwitch","src":"35475:886:17"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35056:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"35062:3:17","type":""}],"src":"34977:1390:17"},{"body":{"nodeType":"YulBlock","src":"36415:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"36471:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36480:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36483:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36473:6:17"},"nodeType":"YulFunctionCall","src":"36473:12:17"},"nodeType":"YulExpressionStatement","src":"36473:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36438:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36462:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"36445:16:17"},"nodeType":"YulFunctionCall","src":"36445:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"36435:2:17"},"nodeType":"YulFunctionCall","src":"36435:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36428:6:17"},"nodeType":"YulFunctionCall","src":"36428:42:17"},"nodeType":"YulIf","src":"36425:62:17"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36408:5:17","type":""}],"src":"36373:120:17"},{"body":{"nodeType":"YulBlock","src":"36550:86:17","statements":[{"nodeType":"YulAssignment","src":"36560:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36582:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"36569:12:17"},"nodeType":"YulFunctionCall","src":"36569:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36560:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36624:5:17"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"36598:25:17"},"nodeType":"YulFunctionCall","src":"36598:32:17"},"nodeType":"YulExpressionStatement","src":"36598:32:17"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36528:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"36536:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36544:5:17","type":""}],"src":"36499:137:17"},{"body":{"nodeType":"YulBlock","src":"36707:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"36753:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36755:77:17"},"nodeType":"YulFunctionCall","src":"36755:79:17"},"nodeType":"YulExpressionStatement","src":"36755:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36728:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"36737:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36724:3:17"},"nodeType":"YulFunctionCall","src":"36724:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"36749:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36720:3:17"},"nodeType":"YulFunctionCall","src":"36720:32:17"},"nodeType":"YulIf","src":"36717:119:17"},{"nodeType":"YulBlock","src":"36846:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"36861:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"36875:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36865:6:17","type":""}]},{"nodeType":"YulAssignment","src":"36890:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36924:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"36935:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36920:3:17"},"nodeType":"YulFunctionCall","src":"36920:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36944:7:17"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"36900:19:17"},"nodeType":"YulFunctionCall","src":"36900:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36890:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36677:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36688:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36700:6:17","type":""}],"src":"36642:327:17"},{"body":{"nodeType":"YulBlock","src":"37070:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37087:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"37092:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37080:6:17"},"nodeType":"YulFunctionCall","src":"37080:19:17"},"nodeType":"YulExpressionStatement","src":"37080:19:17"},{"nodeType":"YulAssignment","src":"37108:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37127:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37132:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37123:3:17"},"nodeType":"YulFunctionCall","src":"37123:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37108:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37042:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"37047:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37058:11:17","type":""}],"src":"36975:168:17"},{"body":{"nodeType":"YulBlock","src":"37239:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"37249:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37295:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37263:31:17"},"nodeType":"YulFunctionCall","src":"37263:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37253:6:17","type":""}]},{"nodeType":"YulAssignment","src":"37310:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37375:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"37380:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37317:57:17"},"nodeType":"YulFunctionCall","src":"37317:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37310:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37435:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"37442:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37431:3:17"},"nodeType":"YulFunctionCall","src":"37431:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"37449:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"37454:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"37396:34:17"},"nodeType":"YulFunctionCall","src":"37396:65:17"},"nodeType":"YulExpressionStatement","src":"37396:65:17"},{"nodeType":"YulAssignment","src":"37470:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37481:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37508:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"37486:21:17"},"nodeType":"YulFunctionCall","src":"37486:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37477:3:17"},"nodeType":"YulFunctionCall","src":"37477:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37470:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37220:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37227:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37235:3:17","type":""}],"src":"37149:373:17"},{"body":{"nodeType":"YulBlock","src":"37778:600:17","statements":[{"nodeType":"YulAssignment","src":"37788:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37800:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37811:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37796:3:17"},"nodeType":"YulFunctionCall","src":"37796:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37788:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37869:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37882:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37893:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37878:3:17"},"nodeType":"YulFunctionCall","src":"37878:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37825:43:17"},"nodeType":"YulFunctionCall","src":"37825:71:17"},"nodeType":"YulExpressionStatement","src":"37825:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37950:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37963:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"37974:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37959:3:17"},"nodeType":"YulFunctionCall","src":"37959:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37906:43:17"},"nodeType":"YulFunctionCall","src":"37906:72:17"},"nodeType":"YulExpressionStatement","src":"37906:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38030:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38043:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38054:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38039:3:17"},"nodeType":"YulFunctionCall","src":"38039:18:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"37988:41:17"},"nodeType":"YulFunctionCall","src":"37988:70:17"},"nodeType":"YulExpressionStatement","src":"37988:70:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38110:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38123:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38134:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38119:3:17"},"nodeType":"YulFunctionCall","src":"38119:18:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"38068:41:17"},"nodeType":"YulFunctionCall","src":"38068:70:17"},"nodeType":"YulExpressionStatement","src":"38068:70:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38190:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38203:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38214:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38199:3:17"},"nodeType":"YulFunctionCall","src":"38199:19:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"38148:41:17"},"nodeType":"YulFunctionCall","src":"38148:71:17"},"nodeType":"YulExpressionStatement","src":"38148:71:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38240:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38251:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38236:3:17"},"nodeType":"YulFunctionCall","src":"38236:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38261:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"38267:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38257:3:17"},"nodeType":"YulFunctionCall","src":"38257:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38229:6:17"},"nodeType":"YulFunctionCall","src":"38229:49:17"},"nodeType":"YulExpressionStatement","src":"38229:49:17"},{"nodeType":"YulAssignment","src":"38287:84:17","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"38357:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"38366:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38295:61:17"},"nodeType":"YulFunctionCall","src":"38295:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38287:4:17"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37710:9:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"37722:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37730:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37738:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37746:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37754:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37762:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37773:4:17","type":""}],"src":"37528:850:17"},{"body":{"nodeType":"YulBlock","src":"38426:52:17","statements":[{"nodeType":"YulAssignment","src":"38436:35:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38461:2:17","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"38465:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38457:3:17"},"nodeType":"YulFunctionCall","src":"38457:14:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"38436:8:17"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38407:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"38417:8:17","type":""}],"src":"38384:94:17"},{"body":{"nodeType":"YulBlock","src":"38531:47:17","statements":[{"nodeType":"YulAssignment","src":"38541:31:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38566:5:17"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"38552:13:17"},"nodeType":"YulFunctionCall","src":"38552:20:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38541:7:17"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38513:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38523:7:17","type":""}],"src":"38484:94:17"},{"body":{"nodeType":"YulBlock","src":"38631:53:17","statements":[{"nodeType":"YulAssignment","src":"38641:37:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38672:5:17"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"38652:19:17"},"nodeType":"YulFunctionCall","src":"38652:26:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38641:7:17"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38613:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38623:7:17","type":""}],"src":"38584:100:17"},{"body":{"nodeType":"YulBlock","src":"38773:74:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38790:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38833:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"38815:17:17"},"nodeType":"YulFunctionCall","src":"38815:24:17"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"38795:19:17"},"nodeType":"YulFunctionCall","src":"38795:45:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38783:6:17"},"nodeType":"YulFunctionCall","src":"38783:58:17"},"nodeType":"YulExpressionStatement","src":"38783:58:17"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38761:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38768:3:17","type":""}],"src":"38690:157:17"},{"body":{"nodeType":"YulBlock","src":"38898:32:17","statements":[{"nodeType":"YulAssignment","src":"38908:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"38919:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38908:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38880:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38890:7:17","type":""}],"src":"38853:77:17"},{"body":{"nodeType":"YulBlock","src":"38983:32:17","statements":[{"nodeType":"YulAssignment","src":"38993:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"39004:5:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38993:7:17"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38965:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38975:7:17","type":""}],"src":"38936:79:17"},{"body":{"nodeType":"YulBlock","src":"39104:74:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39121:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39164:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"39146:17:17"},"nodeType":"YulFunctionCall","src":"39146:24:17"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"39126:19:17"},"nodeType":"YulFunctionCall","src":"39126:45:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39114:6:17"},"nodeType":"YulFunctionCall","src":"39114:58:17"},"nodeType":"YulExpressionStatement","src":"39114:58:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39092:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39099:3:17","type":""}],"src":"39021:157:17"},{"body":{"nodeType":"YulBlock","src":"39227:53:17","statements":[{"nodeType":"YulAssignment","src":"39237:36:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39262:3:17","type":"","value":"192"},{"name":"value","nodeType":"YulIdentifier","src":"39267:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39258:3:17"},"nodeType":"YulFunctionCall","src":"39258:15:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"39237:8:17"}]}]},"name":"shift_left_192","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39208:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"39218:8:17","type":""}],"src":"39184:96:17"},{"body":{"nodeType":"YulBlock","src":"39332:48:17","statements":[{"nodeType":"YulAssignment","src":"39342:32:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39368:5:17"}],"functionName":{"name":"shift_left_192","nodeType":"YulIdentifier","src":"39353:14:17"},"nodeType":"YulFunctionCall","src":"39353:21:17"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"39342:7:17"}]}]},"name":"leftAlign_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39314:5:17","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"39324:7:17","type":""}],"src":"39286:94:17"},{"body":{"nodeType":"YulBlock","src":"39467:72:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39484:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39525:5:17"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"39508:16:17"},"nodeType":"YulFunctionCall","src":"39508:23:17"}],"functionName":{"name":"leftAlign_t_uint64","nodeType":"YulIdentifier","src":"39489:18:17"},"nodeType":"YulFunctionCall","src":"39489:43:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39477:6:17"},"nodeType":"YulFunctionCall","src":"39477:56:17"},"nodeType":"YulExpressionStatement","src":"39477:56:17"}]},"name":"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39455:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39462:3:17","type":""}],"src":"39386:153:17"},{"body":{"nodeType":"YulBlock","src":"39743:476:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39816:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"39825:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39754:61:17"},"nodeType":"YulFunctionCall","src":"39754:75:17"},"nodeType":"YulExpressionStatement","src":"39754:75:17"},{"nodeType":"YulAssignment","src":"39838:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39849:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"39854:2:17","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39845:3:17"},"nodeType":"YulFunctionCall","src":"39845:12:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39838:3:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39929:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"39938:3:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39867:61:17"},"nodeType":"YulFunctionCall","src":"39867:75:17"},"nodeType":"YulExpressionStatement","src":"39867:75:17"},{"nodeType":"YulAssignment","src":"39951:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39962:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"39967:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39958:3:17"},"nodeType":"YulFunctionCall","src":"39958:12:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39951:3:17"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40042:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"40051:3:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39980:61:17"},"nodeType":"YulFunctionCall","src":"39980:75:17"},"nodeType":"YulExpressionStatement","src":"39980:75:17"},{"nodeType":"YulAssignment","src":"40064:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40075:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"40080:2:17","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40071:3:17"},"nodeType":"YulFunctionCall","src":"40071:12:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40064:3:17"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40153:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"40162:3:17"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40093:59:17"},"nodeType":"YulFunctionCall","src":"40093:73:17"},"nodeType":"YulExpressionStatement","src":"40093:73:17"},{"nodeType":"YulAssignment","src":"40175:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40186:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"40191:1:17","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40182:3:17"},"nodeType":"YulFunctionCall","src":"40182:11:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40175:3:17"}]},{"nodeType":"YulAssignment","src":"40203:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"40210:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40203:3:17"}]}]},"name":"abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39698:3:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39704:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39712:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39720:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39728:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39739:3:17","type":""}],"src":"39545:674:17"},{"body":{"nodeType":"YulBlock","src":"40268:162:17","statements":[{"nodeType":"YulAssignment","src":"40278:24:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40300:1:17"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"40283:16:17"},"nodeType":"YulFunctionCall","src":"40283:19:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40278:1:17"}]},{"nodeType":"YulAssignment","src":"40311:24:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40333:1:17"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"40316:16:17"},"nodeType":"YulFunctionCall","src":"40316:19:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40311:1:17"}]},{"nodeType":"YulAssignment","src":"40344:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40355:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"40358:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40351:3:17"},"nodeType":"YulFunctionCall","src":"40351:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"40344:3:17"}]},{"body":{"nodeType":"YulBlock","src":"40401:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"40403:16:17"},"nodeType":"YulFunctionCall","src":"40403:18:17"},"nodeType":"YulExpressionStatement","src":"40403:18:17"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"40376:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"40381:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40373:2:17"},"nodeType":"YulFunctionCall","src":"40373:27:17"},"nodeType":"YulIf","src":"40370:53:17"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40255:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"40258:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"40264:3:17","type":""}],"src":"40225:205:17"},{"body":{"nodeType":"YulBlock","src":"40562:206:17","statements":[{"nodeType":"YulAssignment","src":"40572:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40584:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"40595:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40580:3:17"},"nodeType":"YulFunctionCall","src":"40580:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40572:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40652:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40665:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"40676:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40661:3:17"},"nodeType":"YulFunctionCall","src":"40661:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40608:43:17"},"nodeType":"YulFunctionCall","src":"40608:71:17"},"nodeType":"YulExpressionStatement","src":"40608:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40733:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40746:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"40757:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40742:3:17"},"nodeType":"YulFunctionCall","src":"40742:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40689:43:17"},"nodeType":"YulFunctionCall","src":"40689:72:17"},"nodeType":"YulExpressionStatement","src":"40689:72:17"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40526:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40538:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40546:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40557:4:17","type":""}],"src":"40436:332:17"},{"body":{"nodeType":"YulBlock","src":"40802:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40819:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40822:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40812:6:17"},"nodeType":"YulFunctionCall","src":"40812:88:17"},"nodeType":"YulExpressionStatement","src":"40812:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40916:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40919:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40909:6:17"},"nodeType":"YulFunctionCall","src":"40909:15:17"},"nodeType":"YulExpressionStatement","src":"40909:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40940:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40943:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40933:6:17"},"nodeType":"YulFunctionCall","src":"40933:15:17"},"nodeType":"YulExpressionStatement","src":"40933:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"40774:180:17"},{"body":{"nodeType":"YulBlock","src":"41023:80:17","statements":[{"nodeType":"YulAssignment","src":"41033:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41048:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41042:5:17"},"nodeType":"YulFunctionCall","src":"41042:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41033:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41091:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"41064:26:17"},"nodeType":"YulFunctionCall","src":"41064:33:17"},"nodeType":"YulExpressionStatement","src":"41064:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41001:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"41009:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41017:5:17","type":""}],"src":"40960:143:17"},{"body":{"nodeType":"YulBlock","src":"41186:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"41232:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"41234:77:17"},"nodeType":"YulFunctionCall","src":"41234:79:17"},"nodeType":"YulExpressionStatement","src":"41234:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"41207:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"41216:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41203:3:17"},"nodeType":"YulFunctionCall","src":"41203:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"41228:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41199:3:17"},"nodeType":"YulFunctionCall","src":"41199:32:17"},"nodeType":"YulIf","src":"41196:119:17"},{"nodeType":"YulBlock","src":"41325:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"41340:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"41354:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"41344:6:17","type":""}]},{"nodeType":"YulAssignment","src":"41369:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41415:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"41426:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41411:3:17"},"nodeType":"YulFunctionCall","src":"41411:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"41435:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"41379:31:17"},"nodeType":"YulFunctionCall","src":"41379:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"41369:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41156:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"41167:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"41179:6:17","type":""}],"src":"41109:351:17"},{"body":{"nodeType":"YulBlock","src":"41592:206:17","statements":[{"nodeType":"YulAssignment","src":"41602:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41614:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"41625:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41610:3:17"},"nodeType":"YulFunctionCall","src":"41610:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41602:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41682:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41695:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"41706:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41691:3:17"},"nodeType":"YulFunctionCall","src":"41691:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41638:43:17"},"nodeType":"YulFunctionCall","src":"41638:71:17"},"nodeType":"YulExpressionStatement","src":"41638:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41763:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41776:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"41787:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41772:3:17"},"nodeType":"YulFunctionCall","src":"41772:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41719:43:17"},"nodeType":"YulFunctionCall","src":"41719:72:17"},"nodeType":"YulExpressionStatement","src":"41719:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41556:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41568:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41576:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41587:4:17","type":""}],"src":"41466:332:17"},{"body":{"nodeType":"YulBlock","src":"41910:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41932:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"41940:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41928:3:17"},"nodeType":"YulFunctionCall","src":"41928:14:17"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"41944:24:17","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41921:6:17"},"nodeType":"YulFunctionCall","src":"41921:48:17"},"nodeType":"YulExpressionStatement","src":"41921:48:17"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41902:6:17","type":""}],"src":"41804:172:17"},{"body":{"nodeType":"YulBlock","src":"42128:220:17","statements":[{"nodeType":"YulAssignment","src":"42138:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42204:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"42209:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42145:58:17"},"nodeType":"YulFunctionCall","src":"42145:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42138:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42310:3:17"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"42221:88:17"},"nodeType":"YulFunctionCall","src":"42221:93:17"},"nodeType":"YulExpressionStatement","src":"42221:93:17"},{"nodeType":"YulAssignment","src":"42323:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42334:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"42339:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42330:3:17"},"nodeType":"YulFunctionCall","src":"42330:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42323:3:17"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42116:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42124:3:17","type":""}],"src":"41982:366:17"},{"body":{"nodeType":"YulBlock","src":"42525:248:17","statements":[{"nodeType":"YulAssignment","src":"42535:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42547:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"42558:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42543:3:17"},"nodeType":"YulFunctionCall","src":"42543:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42535:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42582:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"42593:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42578:3:17"},"nodeType":"YulFunctionCall","src":"42578:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42601:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"42607:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42597:3:17"},"nodeType":"YulFunctionCall","src":"42597:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42571:6:17"},"nodeType":"YulFunctionCall","src":"42571:47:17"},"nodeType":"YulExpressionStatement","src":"42571:47:17"},{"nodeType":"YulAssignment","src":"42627:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42761:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42635:124:17"},"nodeType":"YulFunctionCall","src":"42635:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42627:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42505:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42520:4:17","type":""}],"src":"42354:419:17"},{"body":{"nodeType":"YulBlock","src":"42844:31:17","statements":[{"nodeType":"YulAssignment","src":"42855:13:17","value":{"name":"len","nodeType":"YulIdentifier","src":"42865:3:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42855:6:17"}]}]},"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42822:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"42829:3:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42837:6:17","type":""}],"src":"42779:96:17"},{"body":{"nodeType":"YulBlock","src":"42939:28:17","statements":[{"nodeType":"YulAssignment","src":"42949:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"42957:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"42949:4:17"}]}]},"name":"array_dataslot_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"42926:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"42934:4:17","type":""}],"src":"42881:86:17"},{"body":{"nodeType":"YulBlock","src":"43017:105:17","statements":[{"nodeType":"YulAssignment","src":"43027:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43042:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"43049:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43038:3:17"},"nodeType":"YulFunctionCall","src":"43038:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"43027:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42999:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43009:7:17","type":""}],"src":"42973:149:17"},{"body":{"nodeType":"YulBlock","src":"43224:452:17","statements":[{"nodeType":"YulVariableDeclaration","src":"43235:59:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"43283:5:17"},{"name":"len","nodeType":"YulIdentifier","src":"43290:3:17"}],"functionName":{"name":"array_length_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"43249:33:17"},"nodeType":"YulFunctionCall","src":"43249:45:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"43239:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43303:21:17","value":{"name":"array","nodeType":"YulIdentifier","src":"43319:5:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"43307:8:17","type":""}]},{"nodeType":"YulAssignment","src":"43334:49:17","value":{"arguments":[{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"43373:8:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"43360:12:17"},"nodeType":"YulFunctionCall","src":"43360:22:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"43343:16:17"},"nodeType":"YulFunctionCall","src":"43343:40:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43334:5:17"}]},{"body":{"nodeType":"YulBlock","src":"43410:259:17","statements":[{"nodeType":"YulAssignment","src":"43424:235:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43454:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43521:1:17","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43528:1:17","type":"","value":"4"},{"name":"length","nodeType":"YulIdentifier","src":"43531:6:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43524:3:17"},"nodeType":"YulFunctionCall","src":"43524:14:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"43517:3:17"},"nodeType":"YulFunctionCall","src":"43517:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"43561:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"43477:18:17"},"nodeType":"YulFunctionCall","src":"43477:168:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43433:3:17"},"nodeType":"YulFunctionCall","src":"43433:226:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43424:5:17"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43399:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"43407:1:17","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43396:2:17"},"nodeType":"YulFunctionCall","src":"43396:13:17"},"nodeType":"YulIf","src":"43393:276:17"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"43203:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"43210:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"43218:5:17","type":""}],"src":"43128:548:17"},{"body":{"nodeType":"YulBlock","src":"43771:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43788:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43791:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43781:6:17"},"nodeType":"YulFunctionCall","src":"43781:12:17"},"nodeType":"YulExpressionStatement","src":"43781:12:17"}]},"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulFunctionDefinition","src":"43682:117:17"},{"body":{"nodeType":"YulBlock","src":"43894:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43911:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43914:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43904:6:17"},"nodeType":"YulFunctionCall","src":"43904:12:17"},"nodeType":"YulExpressionStatement","src":"43904:12:17"}]},"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulFunctionDefinition","src":"43805:117:17"},{"body":{"nodeType":"YulBlock","src":"44054:343:17","statements":[{"body":{"nodeType":"YulBlock","src":"44092:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a","nodeType":"YulIdentifier","src":"44094:77:17"},"nodeType":"YulFunctionCall","src":"44094:79:17"},"nodeType":"YulExpressionStatement","src":"44094:79:17"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"44070:10:17"},{"name":"endIndex","nodeType":"YulIdentifier","src":"44082:8:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44067:2:17"},"nodeType":"YulFunctionCall","src":"44067:24:17"},"nodeType":"YulIf","src":"44064:111:17"},{"body":{"nodeType":"YulBlock","src":"44208:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c","nodeType":"YulIdentifier","src":"44210:77:17"},"nodeType":"YulFunctionCall","src":"44210:79:17"},"nodeType":"YulExpressionStatement","src":"44210:79:17"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"44190:8:17"},{"name":"length","nodeType":"YulIdentifier","src":"44200:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44187:2:17"},"nodeType":"YulFunctionCall","src":"44187:20:17"},"nodeType":"YulIf","src":"44184:107:17"},{"nodeType":"YulAssignment","src":"44300:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44317:6:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"44329:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"44341:1:17","type":"","value":"1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44325:3:17"},"nodeType":"YulFunctionCall","src":"44325:18:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44313:3:17"},"nodeType":"YulFunctionCall","src":"44313:31:17"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"44300:9:17"}]},{"nodeType":"YulAssignment","src":"44353:38:17","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"44370:8:17"},{"name":"startIndex","nodeType":"YulIdentifier","src":"44380:10:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44366:3:17"},"nodeType":"YulFunctionCall","src":"44366:25:17"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"44353:9:17"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43992:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"44000:6:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"44008:10:17","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"44020:8:17","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"44033:9:17","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"44044:9:17","type":""}],"src":"43928:469:17"},{"body":{"nodeType":"YulBlock","src":"44492:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44509:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44512:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44502:6:17"},"nodeType":"YulFunctionCall","src":"44502:12:17"},"nodeType":"YulExpressionStatement","src":"44502:12:17"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"44403:117:17"},{"body":{"nodeType":"YulBlock","src":"44615:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44632:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44635:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44625:6:17"},"nodeType":"YulFunctionCall","src":"44625:12:17"},"nodeType":"YulExpressionStatement","src":"44625:12:17"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"44526:117:17"},{"body":{"nodeType":"YulBlock","src":"44698:84:17","statements":[{"nodeType":"YulAssignment","src":"44708:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44730:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"44717:12:17"},"nodeType":"YulFunctionCall","src":"44717:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44708:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44770:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"44746:23:17"},"nodeType":"YulFunctionCall","src":"44746:30:17"},"nodeType":"YulExpressionStatement","src":"44746:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44676:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"44684:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"44692:5:17","type":""}],"src":"44649:133:17"},{"body":{"nodeType":"YulBlock","src":"44914:339:17","statements":[{"body":{"nodeType":"YulBlock","src":"44958:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"44960:77:17"},"nodeType":"YulFunctionCall","src":"44960:79:17"},"nodeType":"YulExpressionStatement","src":"44960:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"44935:3:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"44940:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44931:3:17"},"nodeType":"YulFunctionCall","src":"44931:19:17"},{"kind":"number","nodeType":"YulLiteral","src":"44952:4:17","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44927:3:17"},"nodeType":"YulFunctionCall","src":"44927:30:17"},"nodeType":"YulIf","src":"44924:117:17"},{"nodeType":"YulAssignment","src":"45050:30:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45075:4:17","type":"","value":"0x20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"45059:15:17"},"nodeType":"YulFunctionCall","src":"45059:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45050:5:17"}]},{"nodeType":"YulBlock","src":"45090:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"45134:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"45148:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45138:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45174:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"45181:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45170:3:17"},"nodeType":"YulFunctionCall","src":"45170:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45210:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"45221:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45206:3:17"},"nodeType":"YulFunctionCall","src":"45206:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"45230:3:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"45188:17:17"},"nodeType":"YulFunctionCall","src":"45188:46:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45163:6:17"},"nodeType":"YulFunctionCall","src":"45163:72:17"},"nodeType":"YulExpressionStatement","src":"45163:72:17"}]}]},"name":"abi_decode_t_struct$_ExtraArgsV1_$2596_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44889:9:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"44900:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"44908:5:17","type":""}],"src":"44830:423:17"},{"body":{"nodeType":"YulBlock","src":"45354:292:17","statements":[{"body":{"nodeType":"YulBlock","src":"45400:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"45402:77:17"},"nodeType":"YulFunctionCall","src":"45402:79:17"},"nodeType":"YulExpressionStatement","src":"45402:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"45375:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"45384:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45371:3:17"},"nodeType":"YulFunctionCall","src":"45371:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"45396:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"45367:3:17"},"nodeType":"YulFunctionCall","src":"45367:32:17"},"nodeType":"YulIf","src":"45364:119:17"},{"nodeType":"YulBlock","src":"45493:146:17","statements":[{"nodeType":"YulVariableDeclaration","src":"45508:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"45522:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45512:6:17","type":""}]},{"nodeType":"YulAssignment","src":"45537:92:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45601:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"45612:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45597:3:17"},"nodeType":"YulFunctionCall","src":"45597:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"45621:7:17"}],"functionName":{"name":"abi_decode_t_struct$_ExtraArgsV1_$2596_memory_ptr","nodeType":"YulIdentifier","src":"45547:49:17"},"nodeType":"YulFunctionCall","src":"45547:82:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"45537:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45324:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"45335:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"45347:6:17","type":""}],"src":"45259:387:17"},{"body":{"nodeType":"YulBlock","src":"45701:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45718:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45738:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"45723:14:17"},"nodeType":"YulFunctionCall","src":"45723:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45711:6:17"},"nodeType":"YulFunctionCall","src":"45711:34:17"},"nodeType":"YulExpressionStatement","src":"45711:34:17"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45689:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45696:3:17","type":""}],"src":"45652:99:17"},{"body":{"nodeType":"YulBlock","src":"45961:220:17","statements":[{"nodeType":"YulVariableDeclaration","src":"45971:26:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45987:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"45992:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45983:3:17"},"nodeType":"YulFunctionCall","src":"45983:14:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"45975:4:17","type":""}]},{"nodeType":"YulBlock","src":"46007:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"46051:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46081:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"46088:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46077:3:17"},"nodeType":"YulFunctionCall","src":"46077:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46071:5:17"},"nodeType":"YulFunctionCall","src":"46071:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"46055:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"46135:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46153:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"46158:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46149:3:17"},"nodeType":"YulFunctionCall","src":"46149:14:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"46107:27:17"},"nodeType":"YulFunctionCall","src":"46107:57:17"},"nodeType":"YulExpressionStatement","src":"46107:57:17"}]}]},"name":"abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45948:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45955:3:17","type":""}],"src":"45837:344:17"},{"body":{"nodeType":"YulBlock","src":"46343:182:17","statements":[{"nodeType":"YulAssignment","src":"46353:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46365:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46376:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46361:3:17"},"nodeType":"YulFunctionCall","src":"46361:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46353:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46491:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46504:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46515:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46500:3:17"},"nodeType":"YulFunctionCall","src":"46500:17:17"}],"functionName":{"name":"abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46389:101:17"},"nodeType":"YulFunctionCall","src":"46389:129:17"},"nodeType":"YulExpressionStatement","src":"46389:129:17"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr__to_t_struct$_ExtraArgsV1_$2596_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46315:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46327:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46338:4:17","type":""}],"src":"46187:338:17"},{"body":{"nodeType":"YulBlock","src":"46637:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46659:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"46667:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46655:3:17"},"nodeType":"YulFunctionCall","src":"46655:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"46671:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46648:6:17"},"nodeType":"YulFunctionCall","src":"46648:49:17"},"nodeType":"YulExpressionStatement","src":"46648:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46629:6:17","type":""}],"src":"46531:173:17"},{"body":{"nodeType":"YulBlock","src":"46856:220:17","statements":[{"nodeType":"YulAssignment","src":"46866:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46932:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"46937:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46873:58:17"},"nodeType":"YulFunctionCall","src":"46873:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46866:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47038:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"46949:88:17"},"nodeType":"YulFunctionCall","src":"46949:93:17"},"nodeType":"YulExpressionStatement","src":"46949:93:17"},{"nodeType":"YulAssignment","src":"47051:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47062:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"47067:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47058:3:17"},"nodeType":"YulFunctionCall","src":"47058:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47051:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46844:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46852:3:17","type":""}],"src":"46710:366:17"},{"body":{"nodeType":"YulBlock","src":"47253:248:17","statements":[{"nodeType":"YulAssignment","src":"47263:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47275:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"47286:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47271:3:17"},"nodeType":"YulFunctionCall","src":"47271:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47263:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47310:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"47321:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47306:3:17"},"nodeType":"YulFunctionCall","src":"47306:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47329:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"47335:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47325:3:17"},"nodeType":"YulFunctionCall","src":"47325:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47299:6:17"},"nodeType":"YulFunctionCall","src":"47299:47:17"},"nodeType":"YulExpressionStatement","src":"47299:47:17"},{"nodeType":"YulAssignment","src":"47355:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47489:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47363:124:17"},"nodeType":"YulFunctionCall","src":"47363:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47355:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47233:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47248:4:17","type":""}],"src":"47082:419:17"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__to_t_uint16_t_uint32_t_bool_t_uint32_t_uint32_t_uint32_t_uint32_t_uint8_t_uint8__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LinkTokenInterface_$371_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LinkTokenInterface_$371_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LinkTokenInterface_$371__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LinkTokenInterface_$371_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$248_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$248_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$248__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$248_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct VRFV2PlusClient.RandomWordsRequest\n    function abi_decode_t_struct$_RandomWordsRequest_$2609_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 192) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_RandomWordsRequest_$2609_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_RandomWordsRequest_$2609_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool_t_bool_t_bool__to_t_uint256_t_uint96_t_bool_t_bool_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint96_t_uint96__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function shift_left_192(value) -> newValue {\n        newValue :=\n\n        shl(192, value)\n\n    }\n\n    function leftAlign_t_uint64(value) -> aligned {\n        aligned := shift_left_192(value)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint64(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_bytes32_t_address_t_uint64__to_t_address_t_bytes32_t_address_t_uint64__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 8)\n\n        end := pos\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_bytes_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes4(array, len) -> value {\n\n        let length := array_length_t_bytes_calldata_ptr(array, len)\n        let dataArea := array\n\n        value := cleanup_t_bytes4(calldataload(dataArea))\n\n        if lt(length, 4) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(4, length)),\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() {\n        revert(0, 0)\n    }\n\n    function revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() {\n        revert(0, 0)\n    }\n\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut {\n        if gt(startIndex, endIndex) { revert_error_7678404c0552a58cf14944d1a786cf4c81aab3563e2735cb332aee47bbb57c4a() }\n        if gt(endIndex, length) { revert_error_46e3e63c93837e9efa638abb3b4e76ced8c11259a873f1381a0abdf6ae6a823c() }\n        offsetOut := add(offset, mul(startIndex, 1))\n        lengthOut := sub(endIndex, startIndex)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct VRFV2PlusClient.ExtraArgsV1\n    function abi_decode_t_struct$_ExtraArgsV1_$2596_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x20) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x20)\n\n        {\n            // nativePayment\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_ExtraArgsV1_$2596_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct VRFV2PlusClient.ExtraArgsV1 -> struct VRFV2PlusClient.ExtraArgsV1\n    function abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // nativePayment\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr__to_t_struct$_ExtraArgsV1_$2596_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2642":[{"length":32,"start":3366},{"length":32,"start":4563}],"2644":[{"length":32,"start":3297},{"length":32,"start":12928}],"2646":[{"length":32,"start":3430},{"length":32,"start":4459}]},"linkReferences":{},"object":"60806040526004361061020f5760003560e01c80638b673e7a11610118578063aefb212f116100a0578063dac83d291161006f578063dac83d2914610748578063dc311dd314610771578063dcab3dcf146107b2578063e72f6e30146107dd578063f2fde38b146108065761020f565b8063aefb212f14610690578063b2a7cac5146106cd578063bec4c08c146106f6578063cb6317971461071f5761020f565b80639b1c385e116100e75780639b1c385e146105ab5780639d40a6fd146105e8578063a21a23e414610613578063a4c0ed361461063e578063aa433aff146106675761020f565b80638b673e7a146105105780638da5cb5b14610527578063953e9c751461055257806395b55cfc1461058f5761020f565b806341af6c871161019b57806372e9d5651161016a57806372e9d5651461045157806379ba50971461047c578063808974ff146104935780638402595e146104bc57806386fe91c7146104e55761020f565b806341af6c871461039757806351cff8d9146103d457806364d51a2a146103fd57806365982744146104285761020f565b806313478329116101e257806313478329146102c257806318e3dd27146102ed5780631b6b6d23146103185780631eebc117146103435780632f622e6b1461036e5761020f565b8063088070f51461021457806308e3898e146102475780630ae0954014610270578063115e3c0d14610299575b600080fd5b34801561022057600080fd5b5061022961082f565b60405161023e9998979695949392919061462a565b60405180910390f35b34801561025357600080fd5b5061026e600480360381019061026991906148b8565b6108f0565b005b34801561027c57600080fd5b5061029760048036038101906102929190614927565b610e69565b005b3480156102a557600080fd5b506102c060048036038101906102bb9190614967565b610f80565b005b3480156102ce57600080fd5b506102d7611169565b6040516102e491906149c0565b60405180910390f35b3480156102f957600080fd5b5061030261118d565b60405161030f9190614a02565b60405180910390f35b34801561032457600080fd5b5061032d6111ab565b60405161033a9190614a7c565b60405180910390f35b34801561034f57600080fd5b506103586111d1565b6040516103659190614a02565b60405180910390f35b34801561037a57600080fd5b5061039560048036038101906103909190614ad5565b6111f5565b005b3480156103a357600080fd5b506103be60048036038101906103b99190614b02565b6112e3565b6040516103cb9190614b2f565b60405180910390f35b3480156103e057600080fd5b506103fb60048036038101906103f69190614b4a565b611317565b005b34801561040957600080fd5b5061041261151d565b60405161041f9190614b77565b60405180910390f35b34801561043457600080fd5b5061044f600480360381019061044a9190614b92565b611522565b005b34801561045d57600080fd5b50610466611638565b6040516104739190614bf3565b60405180910390f35b34801561048857600080fd5b5061049161165e565b005b34801561049f57600080fd5b506104ba60048036038101906104b59190614927565b6117f3565b005b3480156104c857600080fd5b506104e360048036038101906104de9190614ad5565b611853565b005b3480156104f157600080fd5b506104fa6119d0565b6040516105079190614a02565b60405180910390f35b34801561051c57600080fd5b506105256119ee565b005b34801561053357600080fd5b5061053c611be5565b6040516105499190614c1d565b60405180910390f35b34801561055e57600080fd5b5061057960048036038101906105749190614927565b611c0e565b6040516105869190614b2f565b60405180910390f35b6105a960048036038101906105a49190614b02565b611c79565b005b3480156105b757600080fd5b506105d260048036038101906105cd9190614c5c565b611e0c565b6040516105df9190614cb4565b60405180910390f35b3480156105f457600080fd5b506105fd612139565b60405161060a9190614cf2565b60405180910390f35b34801561061f57600080fd5b50610628612153565b6040516106359190614cb4565b60405180910390f35b34801561064a57600080fd5b5061066560048036038101906106609190614d68565b61248b565b005b34801561067357600080fd5b5061068e60048036038101906106899190614b02565b6126f9565b005b34801561069c57600080fd5b506106b760048036038101906106b29190614967565b612753565b6040516106c49190614e9a565b60405180910390f35b3480156106d957600080fd5b506106f460048036038101906106ef9190614b02565b612887565b005b34801561070257600080fd5b5061071d60048036038101906107189190614927565b612a98565b005b34801561072b57600080fd5b5061074660048036038101906107419190614927565b612c36565b005b34801561075457600080fd5b5061076f600480360381019061076a9190614927565b612ff5565b005b34801561077d57600080fd5b5061079860048036038101906107939190614b02565b6130f9565b6040516107a9959493929190614f7a565b60405180910390f35b3480156107be57600080fd5b506107c761327e565b6040516107d49190614a02565b60405180910390f35b3480156107e957600080fd5b5061080460048036038101906107ff9190614b4a565b6132a2565b005b34801561081257600080fd5b5061082d60048036038101906108289190614b4a565b613574565b005b600c8060000160009054906101000a900461ffff16908060000160029054906101000a900463ffffffff16908060000160069054906101000a900460ff16908060000160079054906101000a900463ffffffff169080600001600b9054906101000a900463ffffffff169080600001600f9054906101000a900463ffffffff16908060000160139054906101000a900463ffffffff16908060000160179054906101000a900460ff16908060000160189054906101000a900460ff16905089565b60005a90506000601060008681526020019081526020016000206000015403610945576040517f41abc80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060106000868152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820180546109cb90615003565b80601f01602080910402602001604051908101604052809291908181526020018280546109f790615003565b8015610a445780601f10610a1957610100808354040283529160200191610a44565b820191906000526020600020905b815481529060010190602001808311610a2757829003601f168201915b50505050508152505090506000835103610b2657806040015163ffffffff1667ffffffffffffffff811115610a7c57610a7b614775565b5b604051908082528060200260200182016040528015610aaa5781602001602082028036833780820191505090505b50925060005b816040015163ffffffff16811015610b20578581604051602001610ad5929190615034565b6040516020818303038152906040528051906020012060001c848281518110610b0157610b0061505d565b5b6020026020010181815250508080610b18906150bb565b915050610ab0565b50610b6b565b806040015163ffffffff16835114610b6a576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b8786604051602401610b89929190615103565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001600c60000160066101000a81548160ff02191690831515021790555060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff1683604051610c3891906151a4565b60006040518083038160008787f1925050503d8060008114610c76576040519150601f19603f3d011682016040523d82523d6000602084013e610c7b565b606091505b505090506000600c60000160066101000a81548160ff0219169083151502179055506000600185606001516001876060015151610cb891906151bb565b81518110610cc957610cc861505d565b5b602001015160f81c60f81b60f81c60ff1614905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a88610d1a91906151bb565b610d2491906151ef565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff16610d5d9190615231565b905081610da6577f000000000000000000000000000000000000000000000000000000000000000081670de0b6b3a7640000610d9991906151ef565b610da39190615294565b90505b6000819050610dba81848960000151613588565b601060008c81526020019081526020016000206000808201600090556001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff0219169055600282016000610e14919061449a565b505086600001518b7faeb4b4786571e184246d39587f659abf0e26f41f6a3358692250382c0cdb47b78d8487896000604051610e549594939291906152c5565b60405180910390a35050505050505050505050565b81610e73816137cb565b610e7b613883565b600080610e87856138cf565b9150915060008473ffffffffffffffffffffffffffffffffffffffff16826bffffffffffffffffffffffff16604051610ebf9061533e565b60006040518083038185875af1925050503d8060008114610efc576040519150601f19603f3d011682016040523d82523d6000602084013e610f01565b606091505b5050905080610f3c576040517f950b247900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b857f8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c4868585604051610f7093929190615384565b60405180910390a2505050505050565b600073ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361101c576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006006600084815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050816006600085815260200190815260200160002060000160008282829054906101000a90046bffffffffffffffffffffffff1661109a91906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555081600a60008282829054906101000a90046bffffffffffffffffffffffff166110f191906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550827f1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a82848461114e9190615231565b60405161115c929190615034565b60405180910390a2505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600a600c9054906101000a90046bffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6111fd613883565b611205613c29565b6000600b600c9054906101000a90046bffffffffffffffffffffffff16905061123e6000826bffffffffffffffffffffffff1611613cb9565b6000600b600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600a600c8282829054906101000a90046bffffffffffffffffffffffff1661129991906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506112df82826bffffffffffffffffffffffff16613cf3565b5050565b60006040517fd623472500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61131f613883565b611327613c29565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113af576040517fc1f0c0a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600b60009054906101000a90046bffffffffffffffffffffffff1690506113e86000826bffffffffffffffffffffffff1611613cb9565b6000600b60006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600a60008282829054906101000a90046bffffffffffffffffffffffff1661144391906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550611519600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016114d192919061543b565b6020604051808303816000875af11580156114f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115149190615490565b613cb9565b5050565b606481565b61152a613c29565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115b2576040517f2d118a6e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e59061551a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6117fb613883565b61184f8282600067ffffffffffffffff81111561181b5761181a614775565b5b6040519080825280602002602001820160405280156118495781602001602082028036833780820191505090505b506108f0565b5050565b61185b613c29565b60004790506000600a600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050818111156118d45780826040517fa99da3020000000000000000000000000000000000000000000000000000000081526004016118cb929190615034565b60405180910390fd5b818110156119cb57600081836118ea91906151bb565b905060008473ffffffffffffffffffffffffffffffffffffffff16826040516119129061533e565b60006040518083038185875af1925050503d806000811461194f576040519150601f19603f3d011682016040523d82523d6000602084013e611954565b606091505b505090508061198f576040517f950b247900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4aed7c8eed0496c8c19ea2681fcca25741c1602342e38b045d9f1e8e905d2e9c85836040516119c092919061555b565b60405180910390a150505b505050565b600a60009054906101000a90046bffffffffffffffffffffffff1681565b6119f6613c29565b604051806101200160405280600061ffff168152602001600063ffffffff168152602001600015158152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600060ff168152602001600060ff16815250600c60008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160066101000a81548160ff02191690831515021790555060608201518160000160076101000a81548163ffffffff021916908363ffffffff160217905550608082015181600001600b6101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600001600f6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160000160136101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160000160176101000a81548160ff021916908360ff1602179055506101008201518160000160186101000a81548160ff021916908360ff1602179055509050507f4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be60405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160009054906101000a900460ff16905092915050565b611c81613883565b611cc06005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613d9b565b600060066000838152602001908152602001600020600001600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690503460066000848152602001908152602001600020600001600c8282829054906101000a90046bffffffffffffffffffffffff16611d3e91906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555034600a600c8282829054906101000a90046bffffffffffffffffffffffff16611d9591906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550817f7603b205d03651ee812f803fccde89f1012e545a9c99f0abfea9cedd0fd8e902823484611df29190615231565b604051611e00929190615034565b60405180910390a25050565b6000611e16613883565b816020013533611e268282611c0e565b611e695781816040517f79bfd401000000000000000000000000000000000000000000000000000000008152600401611e60929190615584565b60405180910390fd5b600084602001359050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611f0e576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600e6000815480929190611f23906150bb565b9190505590506000600f6000815480929190611f3e906150bb565b9190505590506000611f66611f61898060a00190611f5c91906155bc565b613e04565b613efc565b9050604051806080016040528089602001358152602001896060016020810190611f90919061564b565b63ffffffff168152602001896080016020810190611fae919061564b565b63ffffffff168152602001898060a00190611fc991906155bc565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250601060008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548163ffffffff021916908363ffffffff160217905550606082015181600201908161208f919061581a565b509050503373ffffffffffffffffffffffffffffffffffffffff16886020013589600001357feb0e3652e0f44f417695e6e90f2f42c99b65cd7169074c5a654b16b9748c3a4e86868d60400160208101906120ea9190615918565b8e60600160208101906120fd919061564b565b8f6080016020810190612110919061564b565b896040516121239695949392919061598f565b60405180910390a4829650505050505050919050565b600760009054906101000a900467ffffffffffffffff1681565b600061215d613883565b6000600760009054906101000a900467ffffffffffffffff1690503360014361218691906151bb565b40308360405160200161219c9493929190615aa0565b6040516020818303038152906040528051906020012060001c91506001816121c49190615aee565b600760006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008067ffffffffffffffff81111561220857612207614775565b5b6040519080825280602002602001820160405280156122365781602001602082028036833780820191505090505b509050604051806060016040528060006bffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600067ffffffffffffffff168152506006600085815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060408201518160000160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555090505060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001828152506005600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906124359291906144da565b5090505061244d836008613f9490919063ffffffff16565b50827f1d3015d7ba850fa198dc7b1a3f5d42779313a681035f77c8c03764c61005518d3360405161247e9190614c1d565b60405180910390a2505090565b612493613883565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461251a576040517f44b0e3c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208282905014612557576040517f8129bbcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082828101906125689190614b02565b90506125a96005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613d9b565b60006006600083815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050846006600084815260200190815260200160002060000160008282829054906101000a90046bffffffffffffffffffffffff1661262791906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600a60008282829054906101000a90046bffffffffffffffffffffffff1661267e91906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550817f1ced9348ff549fceab2ac57cd3a9de38edaaab274b725ee82c23e8fc8c4eec7a8287846126db9190615231565b6040516126e9929190615034565b60405180910390a2505050505050565b612701613c29565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061274581613d9b565b61274f8282613fae565b5050565b606060006127616008614142565b905080841061279c576040517f1390f2a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083856127aa9190615231565b9050818111806127ba5750600084145b6127c457806127c6565b815b9050600085826127d691906151bb565b90508067ffffffffffffffff8111156127f2576127f1614775565b5b6040519080825280602002602001820160405280156128205781602001602082028036833780820191505090505b50935060005b8181101561287d5761284d878261283d9190615231565b600861415790919063ffffffff16565b8582815181106128605761285f61505d565b5b60200260200101818152505080612876906150bb565b9050612826565b5050505092915050565b61288f613883565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506128d381613d9b565b3373ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129af576005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fd084e9750000000000000000000000000000000000000000000000000000000081526004016129a69190614c1d565b60405180910390fd5b336005600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006005600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550817fd4114ab6e9af9f597c52041f32d62dc57c5c4e4c0d4427006069635e216c93868233604051612a8c929190615b2a565b60405180910390a25050565b81612aa2816137cb565b612aaa613883565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002090508060000160009054906101000a900460ff1615612b1b5750612c31565b6000600560008681526020019081526020016000206002019050606461ffff16818054905003612b77576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018260000160006101000a81548160ff02191690831515021790555080849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550847f1e980d04aa7648e205713e5e8ea3808672ac163d10936d36f91b2c88ac1575e185604051612c269190614c1d565b60405180910390a250505b505050565b81612c40816137cb565b8282612c4c8282611c0e565b612c8f5781816040517f79bfd401000000000000000000000000000000000000000000000000000000008152600401612c86929190615584565b60405180910390fd5b612c97613883565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060000160009054906101000a900460ff16612d3b5784846040517f79bfd401000000000000000000000000000000000000000000000000000000008152600401612d32929190615584565b60405180910390fd5b600060056000878152602001908152602001600020600201805480602002602001604051908101604052809291908181526020018280548015612dd357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612d89575b50505050509050600060018251612dea91906151bb565b905060005b8251811015612f47578673ffffffffffffffffffffffffffffffffffffffff16838281518110612e2257612e2161505d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603612f36576000838381518110612e5a57612e5961505d565b5b6020026020010151905080600560008b81526020019081526020016000206002018381548110612e8d57612e8c61505d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560008a8152602001908152602001600020600201805480612efb57612efa615b53565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550612f47565b80612f40906150bb565b9050612def565b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060000160006101000a81548160ff021916908315150217905550867f32158c6058347c1601b2d12bc696ac6901d8a9a9aa3ba10c27ab0a983e8425a787604051612fe49190614c1d565b60405180910390a250505050505050565b81612fff816137cb565b613007613883565b60006005600085815260200190815260200160002090508273ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146130f357828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550837f21a4dad170a6bf476c31bbcf4a16628295b0e450672eec25d7c93308e05344a133856040516130ea929190615b2a565b60405180910390a25b50505050565b60008060008060606005600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915061314382613d9b565b6006600087815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff1660066000888152602001908152602001600020600001600c9054906101000a90046bffffffffffffffffffffffff166006600089815260200190815260200160002060000160189054906101000a900467ffffffffffffffff1684600560008b81526020019081526020016000206002018080548060200260200160405190810160405280929190818152602001828054801561326457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161321a575b505050505090509450945094509450945091939590929450565b7f000000000000000000000000000000000000000000000000000000000000000081565b6132aa613c29565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603613332576040517fc1f0c0a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161338f9190614c1d565b602060405180830381865afa1580156133ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133d09190615b97565b90506000600a60009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050818111156134465780826040517fa99da30200000000000000000000000000000000000000000000000000000000815260040161343d929190615034565b60405180910390fd5b8181101561356f576000818361345c91906151bb565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016134bb929190615bc4565b6020604051808303816000875af11580156134da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134fe9190615490565b613534576040517f7c07fc4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b4366008482604051613565929190615bc4565b60405180910390a1505b505050565b61357c613c29565b61358581614171565b50565b600060066000838152602001908152602001600020905082156136b757600081600001600c9054906101000a90046bffffffffffffffffffffffff169050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff16101561361c576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848161362891906153fb565b82600001600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600b600c8282829054906101000a90046bffffffffffffffffffffffff1661368391906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550506137c5565b60008160000160009054906101000a90046bffffffffffffffffffffffff169050846bffffffffffffffffffffffff16816bffffffffffffffffffffffff16101561372e576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848161373a91906153fb565b8260000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600b60008282829054906101000a90046bffffffffffffffffffffffff1661379591906153bb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550505b50505050565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061380f81613d9b565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461387f57806040517fd8a3fb520000000000000000000000000000000000000000000000000000000081526004016138769190614c1d565b60405180910390fd5b5050565b600c60000160069054906101000a900460ff16156138cd576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060006005600085815260200190815260200160002060020190506006600085815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff16925060066000858152602001908152602001600020600001600c9054906101000a90046bffffffffffffffffffffffff16915060008180549050905060005b81811015613a4d57600460008483815481106139795761397861505d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a81549067ffffffffffffffff02191690556000820160096101000a81549067ffffffffffffffff0219169055505080613a46906150bb565b905061395a565b5060056000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000613ac09190614564565b505060066000868152602001908152602001600020600080820160006101000a8154906bffffffffffffffffffffffff021916905560008201600c6101000a8154906bffffffffffffffffffffffff02191690556000820160186101000a81549067ffffffffffffffff02191690555050613b4585600861429d90919063ffffffff16565b506000846bffffffffffffffffffffffff1614613bb45783600a60008282829054906101000a90046bffffffffffffffffffffffff16613b8591906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b6000836bffffffffffffffffffffffff1614613c225782600a600c8282829054906101000a90046bffffffffffffffffffffffff16613bf391906153fb565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b5050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613cae90615c39565b60405180910390fd5b565b80613cf0576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051613d199061533e565b60006040518083038185875af1925050503d8060008114613d56576040519150601f19603f3d011682016040523d82523d6000602084013e613d5b565b606091505b5050905080613d96576040517f950b247900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613e01576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b613e0c614585565b60008383905003613e30576040518060200160405280600015158152509050613ef6565b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838390613e7d9190615c90565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614613ed3576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82826004908092613ee693929190615cf9565b810190613ef39190615d8a565b90505b92915050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401613f309190615de2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b6000613fa6836000018360001b6142b7565b905092915050565b600080613fba846138cf565b91509150600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561402c57506000826bffffffffffffffffffffffff1614155b156140e8576140e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856bffffffffffffffffffffffff166040518363ffffffff1660e01b815260040161409f929190615bc4565b6020604051808303816000875af11580156140be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140e29190615490565b613cb9565b5b61410083826bffffffffffffffffffffffff16613cf3565b837f8c74ce8b8cf87f5eb001275c8be27eb34ea2b62bfab6814fcc62192bb63e81c484848460405161413493929190615384565b60405180910390a250505050565b600061415082600001614327565b9050919050565b60006141668360000183614338565b60001c905092915050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036141df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016141d690615e49565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60006142af836000018360001b614363565b905092915050565b60006142c38383614477565b61431c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050614321565b600090505b92915050565b600081600001805490509050919050565b60008260000182815481106143505761434f61505d565b5b9060005260206000200154905092915050565b6000808360010160008481526020019081526020016000205490506000811461446b57600060018261439591906151bb565b90506000600186600001805490506143ad91906151bb565b905081811461441c5760008660000182815481106143ce576143cd61505d565b5b90600052602060002001549050808760000184815481106143f2576143f161505d565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806144305761442f615b53565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050614471565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b5080546144a690615003565b6000825580601f106144b857506144d7565b601f0160209004906000526020600020908101906144d6919061459a565b5b50565b828054828255906000526020600020908101928215614553579160200282015b828111156145525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906144fa565b5b509050614560919061459a565b5090565b5080546000825590600052602060002090810190614582919061459a565b50565b60405180602001604052806000151581525090565b5b808211156145b357600081600090555060010161459b565b5090565b600061ffff82169050919050565b6145ce816145b7565b82525050565b600063ffffffff82169050919050565b6145ed816145d4565b82525050565b60008115159050919050565b614608816145f3565b82525050565b600060ff82169050919050565b6146248161460e565b82525050565b600061012082019050614640600083018c6145c5565b61464d602083018b6145e4565b61465a604083018a6145ff565b61466760608301896145e4565b61467460808301886145e4565b61468160a08301876145e4565b61468e60c08301866145e4565b61469b60e083018561461b565b6146a961010083018461461b565b9a9950505050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6146de816146cb565b81146146e957600080fd5b50565b6000813590506146fb816146d5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061472c82614701565b9050919050565b61473c81614721565b811461474757600080fd5b50565b60008135905061475981614733565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6147ad82614764565b810181811067ffffffffffffffff821117156147cc576147cb614775565b5b80604052505050565b60006147df6146b7565b90506147eb82826147a4565b919050565b600067ffffffffffffffff82111561480b5761480a614775565b5b602082029050602081019050919050565b600080fd5b600061483461482f846147f0565b6147d5565b905080838252602082019050602084028301858111156148575761485661481c565b5b835b81811015614880578061486c88826146ec565b845260208401935050602081019050614859565b5050509392505050565b600082601f83011261489f5761489e61475f565b5b81356148af848260208601614821565b91505092915050565b6000806000606084860312156148d1576148d06146c1565b5b60006148df868287016146ec565b93505060206148f08682870161474a565b925050604084013567ffffffffffffffff811115614911576149106146c6565b5b61491d8682870161488a565b9150509250925092565b6000806040838503121561493e5761493d6146c1565b5b600061494c858286016146ec565b925050602061495d8582860161474a565b9150509250929050565b6000806040838503121561497e5761497d6146c1565b5b600061498c858286016146ec565b925050602061499d858286016146ec565b9150509250929050565b6000819050919050565b6149ba816149a7565b82525050565b60006020820190506149d560008301846149b1565b92915050565b60006bffffffffffffffffffffffff82169050919050565b6149fc816149db565b82525050565b6000602082019050614a1760008301846149f3565b92915050565b6000819050919050565b6000614a42614a3d614a3884614701565b614a1d565b614701565b9050919050565b6000614a5482614a27565b9050919050565b6000614a6682614a49565b9050919050565b614a7681614a5b565b82525050565b6000602082019050614a916000830184614a6d565b92915050565b6000614aa282614701565b9050919050565b614ab281614a97565b8114614abd57600080fd5b50565b600081359050614acf81614aa9565b92915050565b600060208284031215614aeb57614aea6146c1565b5b6000614af984828501614ac0565b91505092915050565b600060208284031215614b1857614b176146c1565b5b6000614b26848285016146ec565b91505092915050565b6000602082019050614b4460008301846145ff565b92915050565b600060208284031215614b6057614b5f6146c1565b5b6000614b6e8482850161474a565b91505092915050565b6000602082019050614b8c60008301846145c5565b92915050565b60008060408385031215614ba957614ba86146c1565b5b6000614bb78582860161474a565b9250506020614bc88582860161474a565b9150509250929050565b6000614bdd82614a49565b9050919050565b614bed81614bd2565b82525050565b6000602082019050614c086000830184614be4565b92915050565b614c1781614721565b82525050565b6000602082019050614c326000830184614c0e565b92915050565b600080fd5b600060c08284031215614c5357614c52614c38565b5b81905092915050565b600060208284031215614c7257614c716146c1565b5b600082013567ffffffffffffffff811115614c9057614c8f6146c6565b5b614c9c84828501614c3d565b91505092915050565b614cae816146cb565b82525050565b6000602082019050614cc96000830184614ca5565b92915050565b600067ffffffffffffffff82169050919050565b614cec81614ccf565b82525050565b6000602082019050614d076000830184614ce3565b92915050565b600080fd5b60008083601f840112614d2857614d2761475f565b5b8235905067ffffffffffffffff811115614d4557614d44614d0d565b5b602083019150836001820283011115614d6157614d6061481c565b5b9250929050565b60008060008060608587031215614d8257614d816146c1565b5b6000614d908782880161474a565b9450506020614da1878288016146ec565b935050604085013567ffffffffffffffff811115614dc257614dc16146c6565b5b614dce87828801614d12565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614e11816146cb565b82525050565b6000614e238383614e08565b60208301905092915050565b6000602082019050919050565b6000614e4782614ddc565b614e518185614de7565b9350614e5c83614df8565b8060005b83811015614e8d578151614e748882614e17565b9750614e7f83614e2f565b925050600181019050614e60565b5085935050505092915050565b60006020820190508181036000830152614eb48184614e3c565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614ef181614721565b82525050565b6000614f038383614ee8565b60208301905092915050565b6000602082019050919050565b6000614f2782614ebc565b614f318185614ec7565b9350614f3c83614ed8565b8060005b83811015614f6d578151614f548882614ef7565b9750614f5f83614f0f565b925050600181019050614f40565b5085935050505092915050565b600060a082019050614f8f60008301886149f3565b614f9c60208301876149f3565b614fa96040830186614ce3565b614fb66060830185614c0e565b8181036080830152614fc88184614f1c565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061501b57607f821691505b60208210810361502e5761502d614fd4565b5b50919050565b60006040820190506150496000830185614ca5565b6150566020830184614ca5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006150c6826146cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036150f8576150f761508c565b5b600182019050919050565b60006040820190506151186000830185614ca5565b818103602083015261512a8184614e3c565b90509392505050565b600081519050919050565b600081905092915050565b60005b8381101561516757808201518184015260208101905061514c565b60008484015250505050565b600061517e82615133565b615188818561513e565b9350615198818560208601615149565b80840191505092915050565b60006151b08284615173565b915081905092915050565b60006151c6826146cb565b91506151d1836146cb565b92508282039050818111156151e9576151e861508c565b5b92915050565b60006151fa826146cb565b9150615205836146cb565b9250828202615213816146cb565b9150828204841483151761522a5761522961508c565b5b5092915050565b600061523c826146cb565b9150615247836146cb565b925082820190508082111561525f5761525e61508c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061529f826146cb565b91506152aa836146cb565b9250826152ba576152b9615265565b5b828204905092915050565b600060a0820190506152da6000830188614ca5565b6152e760208301876149f3565b6152f460408301866145ff565b61530160608301856145ff565b61530e60808301846145ff565b9695505050505050565b50565b600061532860008361513e565b915061533382615318565b600082019050919050565b60006153498261531b565b9150819050919050565b600061536e615369615364846149db565b614a1d565b6146cb565b9050919050565b61537e81615353565b82525050565b60006060820190506153996000830186614c0e565b6153a66020830185615375565b6153b36040830184615375565b949350505050565b60006153c6826149db565b91506153d1836149db565b925082820190506bffffffffffffffffffffffff8111156153f5576153f461508c565b5b92915050565b6000615406826149db565b9150615411836149db565b925082820390506bffffffffffffffffffffffff8111156154355761543461508c565b5b92915050565b60006040820190506154506000830185614c0e565b61545d6020830184615375565b9392505050565b61546d816145f3565b811461547857600080fd5b50565b60008151905061548a81615464565b92915050565b6000602082840312156154a6576154a56146c1565b5b60006154b48482850161547b565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006155046016836154bd565b915061550f826154ce565b602082019050919050565b60006020820190508181036000830152615533816154f7565b9050919050565b600061554582614a49565b9050919050565b6155558161553a565b82525050565b6000604082019050615570600083018561554c565b61557d6020830184614ca5565b9392505050565b60006040820190506155996000830185614ca5565b6155a66020830184614c0e565b9392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126155d9576155d86155ad565b5b80840192508235915067ffffffffffffffff8211156155fb576155fa6155b2565b5b602083019250600182023603831315615617576156166155b7565b5b509250929050565b615628816145d4565b811461563357600080fd5b50565b6000813590506156458161561f565b92915050565b600060208284031215615661576156606146c1565b5b600061566f84828501615636565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026156da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261569d565b6156e4868361569d565b95508019841693508086168417925050509392505050565b600061571761571261570d846146cb565b614a1d565b6146cb565b9050919050565b6000819050919050565b615731836156fc565b61574561573d8261571e565b8484546156aa565b825550505050565b600090565b61575a61574d565b615765818484615728565b505050565b5b818110156157895761577e600082615752565b60018101905061576b565b5050565b601f8211156157ce5761579f81615678565b6157a88461568d565b810160208510156157b7578190505b6157cb6157c38561568d565b83018261576a565b50505b505050565b600082821c905092915050565b60006157f1600019846008026157d3565b1980831691505092915050565b600061580a83836157e0565b9150826002028217905092915050565b61582382615133565b67ffffffffffffffff81111561583c5761583b614775565b5b6158468254615003565b61585182828561578d565b600060209050601f8311600181146158845760008415615872578287015190505b61587c85826157fe565b8655506158e4565b601f19841661589286615678565b60005b828110156158ba57848901518255600182019150602085019450602081019050615895565b868310156158d757848901516158d3601f8916826157e0565b8355505b6001600288020188555050505b505050505050565b6158f5816145b7565b811461590057600080fd5b50565b600081359050615912816158ec565b92915050565b60006020828403121561592e5761592d6146c1565b5b600061593c84828501615903565b91505092915050565b600082825260208201905092915050565b600061596182615133565b61596b8185615945565b935061597b818560208601615149565b61598481614764565b840191505092915050565b600060c0820190506159a46000830189614ca5565b6159b16020830188614ca5565b6159be60408301876145c5565b6159cb60608301866145e4565b6159d860808301856145e4565b81810360a08301526159ea8184615956565b9050979650505050505050565b60008160601b9050919050565b6000615a0f826159f7565b9050919050565b6000615a2182615a04565b9050919050565b615a39615a3482614721565b615a16565b82525050565b6000819050919050565b6000819050919050565b615a64615a5f82615a3f565b615a49565b82525050565b60008160c01b9050919050565b6000615a8282615a6a565b9050919050565b615a9a615a9582614ccf565b615a77565b82525050565b6000615aac8287615a28565b601482019150615abc8286615a53565b602082019150615acc8285615a28565b601482019150615adc8284615a89565b60088201915081905095945050505050565b6000615af982614ccf565b9150615b0483614ccf565b9250828201905067ffffffffffffffff811115615b2457615b2361508c565b5b92915050565b6000604082019050615b3f6000830185614c0e565b615b4c6020830184614c0e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050615b91816146d5565b92915050565b600060208284031215615bad57615bac6146c1565b5b6000615bbb84828501615b82565b91505092915050565b6000604082019050615bd96000830185614c0e565b615be66020830184614ca5565b9392505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000615c236016836154bd565b9150615c2e82615bed565b602082019050919050565b60006020820190508181036000830152615c5281615c16565b9050919050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000615c9c8383615c59565b82615ca78135615c64565b92506004821015615ce757615ce27fffffffff000000000000000000000000000000000000000000000000000000008360040360080261569d565b831692505b505092915050565b600080fd5b600080fd5b60008085851115615d0d57615d0c615cef565b5b83861115615d1e57615d1d615cf4565b5b6001850283019150848603905094509492505050565b600080fd5b600081359050615d4881615464565b92915050565b600060208284031215615d6457615d63615d34565b5b615d6e60206147d5565b90506000615d7e84828501615d39565b60008301525092915050565b600060208284031215615da057615d9f6146c1565b5b6000615dae84828501615d4e565b91505092915050565b615dc0816145f3565b82525050565b602082016000820151615ddc6000850182615db7565b50505050565b6000602082019050615df76000830184615dc6565b92915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000615e336017836154bd565b9150615e3e82615dfd565b602082019050919050565b60006020820190508181036000830152615e6281615e26565b905091905056fea2646970667358221220ae915b2d63584741899877a7d4d1beddcd0646e42da5abcc4d5ed890a32dc39164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B673E7A GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xAEFB212F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDAC83D29 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDAC83D29 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xDC311DD3 EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0xDCAB3DCF EQ PUSH2 0x7B2 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x806 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xAEFB212F EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xB2A7CAC5 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0xBEC4C08C EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xCB631797 EQ PUSH2 0x71F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x9B1C385E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x9B1C385E EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x9D40A6FD EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xAA433AFF EQ PUSH2 0x667 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x8B673E7A EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x953E9C75 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0x95B55CFC EQ PUSH2 0x58F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x72E9D565 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x72E9D565 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x8402595E EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x86FE91C7 EQ PUSH2 0x4E5 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x41AF6C87 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x65982744 EQ PUSH2 0x428 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x13478329 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x13478329 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18E3DD27 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x1EEBC117 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x2F622E6B EQ PUSH2 0x36E JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x88070F5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xAE09540 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x115E3C0D EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x48B8 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x4967 JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x49C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x4A7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x4AD5 JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x4B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH2 0x1317 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x4B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x4B92 JUMP JUMPDEST PUSH2 0x1522 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x4BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x17F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x4AD5 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x525 PUSH2 0x19EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53C PUSH2 0x1BE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x1C0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x4B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x1C79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x4C5C JUMP JUMPDEST PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x4CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x628 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x665 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x4D68 JUMP JUMPDEST PUSH2 0x248B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x26F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x4967 JUMP JUMPDEST PUSH2 0x2753 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x4E9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x2887 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x2A98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x2C36 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x4927 JUMP JUMPDEST PUSH2 0x2FF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x798 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST PUSH2 0x30F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C7 PUSH2 0x327E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x804 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH2 0x32A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH2 0x3574 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x13 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x41ABC80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9CB SWAP1 PUSH2 0x5003 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F7 SWAP1 PUSH2 0x5003 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xB26 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAAA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAD5 SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB01 JUMPI PUSH2 0xB00 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xB18 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB0 JUMP JUMPDEST POP PUSH2 0xB6B JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB89 SWAP3 SWAP2 SWAP1 PUSH2 0x5103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x51A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP8 PUSH1 0x60 ADD MLOAD MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCC9 JUMPI PUSH2 0xCC8 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x51EF JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xDA6 JUMPI PUSH32 0x0 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x51EF JUMP JUMPDEST PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x5294 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xDBA DUP2 DUP5 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x3588 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0xE14 SWAP2 SWAP1 PUSH2 0x449A JUMP JUMPDEST POP POP DUP7 PUSH1 0x0 ADD MLOAD DUP12 PUSH32 0xAEB4B4786571E184246D39587F659ABF0E26F41F6A3358692250382C0CDB47B7 DUP14 DUP5 DUP8 DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xE54 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0xE73 DUP2 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0xE7B PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE87 DUP6 PUSH2 0x38CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xEBF SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF70 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x109A SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F1 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP5 DUP5 PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115C SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x11FD PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x123E PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3CB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12DF DUP3 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3CF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xD623472500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x131F PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x13E8 PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x3CB9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1519 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP3 SWAP2 SWAP1 PUSH2 0x543B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1514 SWAP2 SWAP1 PUSH2 0x5490 JUMP JUMPDEST PUSH2 0x3CB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x152A PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2D118A6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E5 SWAP1 PUSH2 0x551A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x184F DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x181B JUMPI PUSH2 0x181A PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1849 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x8F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x185B PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18D4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19CB JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x18EA SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x194F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x4AED7C8EED0496C8C19EA2681FCCA25741C1602342E38B045D9F1E8E905D2E9C DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C0 SWAP3 SWAP2 SWAP1 PUSH2 0x555B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x19F6 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x4B2974A542484CBA2783812FF8033F7FC682CAC2FE0905C28C5E27869B3155BE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C81 PUSH2 0x3883 JUMP JUMPDEST PUSH2 0x1CC0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLVALUE PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D3E SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D95 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x7603B205D03651EE812F803FCCDE89F1012E545A9C99F0ABFEA9CEDD0FD8E902 DUP3 CALLVALUE DUP5 PUSH2 0x1DF2 SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E00 SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E16 PUSH2 0x3883 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD CALLDATALOAD CALLER PUSH2 0x1E26 DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x1E69 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E60 SWAP3 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F23 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1F3E SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1F66 PUSH2 0x1F61 DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1F5C SWAP2 SWAP1 PUSH2 0x55BC JUMP JUMPDEST PUSH2 0x3E04 JUMP JUMPDEST PUSH2 0x3EFC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x20 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F90 SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1FAE SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x1FC9 SWAP2 SWAP1 PUSH2 0x55BC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP PUSH1 0x10 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x208F SWAP2 SWAP1 PUSH2 0x581A JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x20 ADD CALLDATALOAD DUP10 PUSH1 0x0 ADD CALLDATALOAD PUSH32 0xEB0E3652E0F44F417695E6E90F2F42C99B65CD7169074C5A654B16B9748C3A4E DUP7 DUP7 DUP14 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20EA SWAP2 SWAP1 PUSH2 0x5918 JUMP JUMPDEST DUP15 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x20FD SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST DUP16 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2110 SWAP2 SWAP1 PUSH2 0x564B JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH2 0x2123 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x598F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215D PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x1 NUMBER PUSH2 0x2186 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST BLOCKHASH ADDRESS DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x219C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP2 POP PUSH1 0x1 DUP2 PUSH2 0x21C4 SWAP2 SWAP1 PUSH2 0x5AEE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2208 JUMPI PUSH2 0x2207 PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2236 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2435 SWAP3 SWAP2 SWAP1 PUSH2 0x44DA JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x244D DUP4 PUSH1 0x8 PUSH2 0x3F94 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP3 PUSH32 0x1D3015D7BA850FA198DC7B1A3F5D42779313A681035F77C8C03764C61005518D CALLER PUSH1 0x40 MLOAD PUSH2 0x247E SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2493 PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x251A JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x2557 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x2568 SWAP2 SWAP1 PUSH2 0x4B02 JUMP JUMPDEST SWAP1 POP PUSH2 0x25A9 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2627 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x267E SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x1CED9348FF549FCEAB2AC57CD3A9DE38EDAAAB274B725EE82C23E8FC8C4EEC7A DUP3 DUP8 DUP5 PUSH2 0x26DB SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E9 SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2701 PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2745 DUP2 PUSH2 0x3D9B JUMP JUMPDEST PUSH2 0x274F DUP3 DUP3 PUSH2 0x3FAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2761 PUSH1 0x8 PUSH2 0x4142 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT PUSH2 0x279C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1390F2A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH2 0x27AA SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT DUP1 PUSH2 0x27BA JUMPI POP PUSH1 0x0 DUP5 EQ JUMPDEST PUSH2 0x27C4 JUMPI DUP1 PUSH2 0x27C6 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP3 PUSH2 0x27D6 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F2 JUMPI PUSH2 0x27F1 PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2820 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x287D JUMPI PUSH2 0x284D DUP8 DUP3 PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x5231 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x4157 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2860 JUMPI PUSH2 0x285F PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x2876 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP1 POP PUSH2 0x2826 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x288F PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x28D3 DUP2 PUSH2 0x3D9B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29AF JUMPI PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A6 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xD4114AB6E9AF9F597C52041F32D62DC57C5C4E4C0D4427006069635E216C9386 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2A8C SWAP3 SWAP2 SWAP1 PUSH2 0x5B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x2AA2 DUP2 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0x2AAA PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2B1B JUMPI POP PUSH2 0x2C31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x64 PUSH2 0xFFFF AND DUP2 DUP1 SLOAD SWAP1 POP SUB PUSH2 0x2B77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH32 0x1E980D04AA7648E205713E5E8EA3808672AC163D10936D36F91B2C88AC1575E1 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2C26 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2C40 DUP2 PUSH2 0x37CB JUMP JUMPDEST DUP3 DUP3 PUSH2 0x2C4C DUP3 DUP3 PUSH2 0x1C0E JUMP JUMPDEST PUSH2 0x2C8F JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C86 SWAP3 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C97 PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D3B JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x79BFD40100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D32 SWAP3 SWAP2 SWAP1 PUSH2 0x5584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2DD3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2D89 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x2DEA SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2F47 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2E22 JUMPI PUSH2 0x2E21 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F36 JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E5A JUMPI PUSH2 0x2E59 PUSH2 0x505D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E8D JUMPI PUSH2 0x2E8C PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2EFB JUMPI PUSH2 0x2EFA PUSH2 0x5B53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2F47 JUMP JUMPDEST DUP1 PUSH2 0x2F40 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP1 POP PUSH2 0x2DEF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH32 0x32158C6058347C1601B2D12BC696AC6901D8A9A9AA3BA10C27AB0A983E8425A7 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2FE4 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x2FFF DUP2 PUSH2 0x37CB JUMP JUMPDEST PUSH2 0x3007 PUSH2 0x3883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30F3 JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x21A4DAD170A6BF476C31BBCF4A16628295B0E450672EEC25D7C93308E05344A1 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x30EA SWAP3 SWAP2 SWAP1 PUSH2 0x5B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH2 0x3143 DUP3 PUSH2 0x3D9B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3264 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x321A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x32AA PUSH2 0x3C29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3332 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1F0C0A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x338F SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33D0 SWAP2 SWAP1 PUSH2 0x5B97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3446 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343D SWAP3 SWAP2 SWAP1 PUSH2 0x5034 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x356F JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x345C SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34BB SWAP3 SWAP2 SWAP1 PUSH2 0x5BC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34FE SWAP2 SWAP1 PUSH2 0x5490 JUMP JUMPDEST PUSH2 0x3534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C07FC4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3565 SWAP3 SWAP2 SWAP1 PUSH2 0x5BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x357C PUSH2 0x3C29 JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x4171 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 ISZERO PUSH2 0x36B7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x361C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 PUSH2 0x3628 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xB PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3683 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x37C5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x372E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 PUSH2 0x373A SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3795 SWAP2 SWAP1 PUSH2 0x53BB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x380F DUP2 PUSH2 0x3D9B JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x387F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3876 SWAP2 SWAP1 PUSH2 0x4C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x38CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A4D JUMPI PUSH1 0x4 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3979 JUMPI PUSH2 0x3978 PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH2 0x3A46 SWAP1 PUSH2 0x50BB JUMP JUMPDEST SWAP1 POP PUSH2 0x395A JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x3AC0 SWAP2 SWAP1 PUSH2 0x4564 JUMP JUMPDEST POP POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x3B45 DUP6 PUSH1 0x8 PUSH2 0x429D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3BB4 JUMPI DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B85 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C22 JUMPI DUP3 PUSH1 0xA PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BF3 SWAP2 SWAP1 PUSH2 0x53FB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CAE SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x3CF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3D19 SWAP1 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3D56 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3D5B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3D96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x950B247900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E0C PUSH2 0x4585 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SUB PUSH2 0x3E30 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0x3EF6 JUMP JUMPDEST PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 DUP4 SWAP1 PUSH2 0x3E7D SWAP2 SWAP1 PUSH2 0x5C90 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x3ED3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5247FDCE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x4 SWAP1 DUP1 SWAP3 PUSH2 0x3EE6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5CF9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3EF3 SWAP2 SWAP1 PUSH2 0x5D8A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3F30 SWAP2 SWAP1 PUSH2 0x5DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA6 DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x42B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FBA DUP5 PUSH2 0x38CF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x402C JUMPI POP PUSH1 0x0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x40E8 JUMPI PUSH2 0x40E7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409F SWAP3 SWAP2 SWAP1 PUSH2 0x5BC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E2 SWAP2 SWAP1 PUSH2 0x5490 JUMP JUMPDEST PUSH2 0x3CB9 JUMP JUMPDEST JUMPDEST PUSH2 0x4100 DUP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3CF3 JUMP JUMPDEST DUP4 PUSH32 0x8C74CE8B8CF87F5EB001275C8BE27EB34EA2B62BFAB6814FCC62192BB63E81C4 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4134 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4150 DUP3 PUSH1 0x0 ADD PUSH2 0x4327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4166 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x4338 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x41DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D6 SWAP1 PUSH2 0x5E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AF DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x4363 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C3 DUP4 DUP4 PUSH2 0x4477 JUMP JUMPDEST PUSH2 0x431C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x4321 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4350 JUMPI PUSH2 0x434F PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x446B JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x4395 SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x43AD SWAP2 SWAP1 PUSH2 0x51BB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x441C JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43CE JUMPI PUSH2 0x43CD PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x43F2 JUMPI PUSH2 0x43F1 PUSH2 0x505D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x4430 JUMPI PUSH2 0x442F PUSH2 0x5B53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4471 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x44A6 SWAP1 PUSH2 0x5003 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x44B8 JUMPI POP PUSH2 0x44D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x44D6 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4553 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4552 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x44FA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x4560 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x4582 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x45B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x459B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45CE DUP2 PUSH2 0x45B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45ED DUP2 PUSH2 0x45D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4608 DUP2 PUSH2 0x45F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4624 DUP2 PUSH2 0x460E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x4640 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x45C5 JUMP JUMPDEST PUSH2 0x464D PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x465A PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x45FF JUMP JUMPDEST PUSH2 0x4667 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x4674 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x4681 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x468E PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x469B PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x461B JUMP JUMPDEST PUSH2 0x46A9 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x461B JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46DE DUP2 PUSH2 0x46CB JUMP JUMPDEST DUP2 EQ PUSH2 0x46E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x46FB DUP2 PUSH2 0x46D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x472C DUP3 PUSH2 0x4701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x473C DUP2 PUSH2 0x4721 JUMP JUMPDEST DUP2 EQ PUSH2 0x4747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4759 DUP2 PUSH2 0x4733 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x47AD DUP3 PUSH2 0x4764 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x47CC JUMPI PUSH2 0x47CB PUSH2 0x4775 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47DF PUSH2 0x46B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x47EB DUP3 DUP3 PUSH2 0x47A4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x480B JUMPI PUSH2 0x480A PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4834 PUSH2 0x482F DUP5 PUSH2 0x47F0 JUMP JUMPDEST PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4857 JUMPI PUSH2 0x4856 PUSH2 0x481C JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4880 JUMPI DUP1 PUSH2 0x486C DUP9 DUP3 PUSH2 0x46EC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4859 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x489F JUMPI PUSH2 0x489E PUSH2 0x475F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x48AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4821 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x48D1 JUMPI PUSH2 0x48D0 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48DF DUP7 DUP3 DUP8 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x48F0 DUP7 DUP3 DUP8 ADD PUSH2 0x474A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4911 JUMPI PUSH2 0x4910 PUSH2 0x46C6 JUMP JUMPDEST JUMPDEST PUSH2 0x491D DUP7 DUP3 DUP8 ADD PUSH2 0x488A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x493E JUMPI PUSH2 0x493D PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x494C DUP6 DUP3 DUP7 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x495D DUP6 DUP3 DUP7 ADD PUSH2 0x474A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497E JUMPI PUSH2 0x497D PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x498C DUP6 DUP3 DUP7 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x499D DUP6 DUP3 DUP7 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49BA DUP2 PUSH2 0x49A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49FC DUP2 PUSH2 0x49DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A17 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x49F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A42 PUSH2 0x4A3D PUSH2 0x4A38 DUP5 PUSH2 0x4701 JUMP JUMPDEST PUSH2 0x4A1D JUMP JUMPDEST PUSH2 0x4701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A54 DUP3 PUSH2 0x4A27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A66 DUP3 PUSH2 0x4A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A76 DUP2 PUSH2 0x4A5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AA2 DUP3 PUSH2 0x4701 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB2 DUP2 PUSH2 0x4A97 JUMP JUMPDEST DUP2 EQ PUSH2 0x4ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4ACF DUP2 PUSH2 0x4AA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AEB JUMPI PUSH2 0x4AEA PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AF9 DUP5 DUP3 DUP6 ADD PUSH2 0x4AC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B18 JUMPI PUSH2 0x4B17 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B26 DUP5 DUP3 DUP6 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B60 JUMPI PUSH2 0x4B5F PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B6E DUP5 DUP3 DUP6 ADD PUSH2 0x474A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BA9 JUMPI PUSH2 0x4BA8 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BB7 DUP6 DUP3 DUP7 ADD PUSH2 0x474A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4BC8 DUP6 DUP3 DUP7 ADD PUSH2 0x474A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BDD DUP3 PUSH2 0x4A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BED DUP2 PUSH2 0x4BD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4C17 DUP2 PUSH2 0x4721 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C53 JUMPI PUSH2 0x4C52 PUSH2 0x4C38 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C72 JUMPI PUSH2 0x4C71 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C90 JUMPI PUSH2 0x4C8F PUSH2 0x46C6 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9C DUP5 DUP3 DUP6 ADD PUSH2 0x4C3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CAE DUP2 PUSH2 0x46CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CEC DUP2 PUSH2 0x4CCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4CE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4D28 JUMPI PUSH2 0x4D27 PUSH2 0x475F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D45 JUMPI PUSH2 0x4D44 PUSH2 0x4D0D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4D61 JUMPI PUSH2 0x4D60 PUSH2 0x481C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4D82 JUMPI PUSH2 0x4D81 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D90 DUP8 DUP3 DUP9 ADD PUSH2 0x474A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4DA1 DUP8 DUP3 DUP9 ADD PUSH2 0x46EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DC2 JUMPI PUSH2 0x4DC1 PUSH2 0x46C6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DCE DUP8 DUP3 DUP9 ADD PUSH2 0x4D12 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E11 DUP2 PUSH2 0x46CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E23 DUP4 DUP4 PUSH2 0x4E08 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E47 DUP3 PUSH2 0x4DDC JUMP JUMPDEST PUSH2 0x4E51 DUP2 DUP6 PUSH2 0x4DE7 JUMP JUMPDEST SWAP4 POP PUSH2 0x4E5C DUP4 PUSH2 0x4DF8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E8D JUMPI DUP2 MLOAD PUSH2 0x4E74 DUP9 DUP3 PUSH2 0x4E17 JUMP JUMPDEST SWAP8 POP PUSH2 0x4E7F DUP4 PUSH2 0x4E2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4E60 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EB4 DUP2 DUP5 PUSH2 0x4E3C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EF1 DUP2 PUSH2 0x4721 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F03 DUP4 DUP4 PUSH2 0x4EE8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F27 DUP3 PUSH2 0x4EBC JUMP JUMPDEST PUSH2 0x4F31 DUP2 DUP6 PUSH2 0x4EC7 JUMP JUMPDEST SWAP4 POP PUSH2 0x4F3C DUP4 PUSH2 0x4ED8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F6D JUMPI DUP2 MLOAD PUSH2 0x4F54 DUP9 DUP3 PUSH2 0x4EF7 JUMP JUMPDEST SWAP8 POP PUSH2 0x4F5F DUP4 PUSH2 0x4F0F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4F40 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4F8F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x4F9C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x4FA9 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4CE3 JUMP JUMPDEST PUSH2 0x4FB6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x4FC8 DUP2 DUP5 PUSH2 0x4F1C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x501B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x502E JUMPI PUSH2 0x502D PUSH2 0x4FD4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5049 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x5056 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x50C6 DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x50F8 JUMPI PUSH2 0x50F7 PUSH2 0x508C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5118 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CA5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x512A DUP2 DUP5 PUSH2 0x4E3C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5167 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x514C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x517E DUP3 PUSH2 0x5133 JUMP JUMPDEST PUSH2 0x5188 DUP2 DUP6 PUSH2 0x513E JUMP JUMPDEST SWAP4 POP PUSH2 0x5198 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5149 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51B0 DUP3 DUP5 PUSH2 0x5173 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C6 DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x51D1 DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x51E9 JUMPI PUSH2 0x51E8 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51FA DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x5205 DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x5213 DUP2 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x522A JUMPI PUSH2 0x5229 PUSH2 0x508C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523C DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x5247 DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x525F JUMPI PUSH2 0x525E PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x529F DUP3 PUSH2 0x46CB JUMP JUMPDEST SWAP2 POP PUSH2 0x52AA DUP4 PUSH2 0x46CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x52BA JUMPI PUSH2 0x52B9 PUSH2 0x5265 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x52DA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x52E7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x49F3 JUMP JUMPDEST PUSH2 0x52F4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x45FF JUMP JUMPDEST PUSH2 0x5301 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x45FF JUMP JUMPDEST PUSH2 0x530E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x45FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5328 PUSH1 0x0 DUP4 PUSH2 0x513E JUMP JUMPDEST SWAP2 POP PUSH2 0x5333 DUP3 PUSH2 0x5318 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5349 DUP3 PUSH2 0x531B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x536E PUSH2 0x5369 PUSH2 0x5364 DUP5 PUSH2 0x49DB JUMP JUMPDEST PUSH2 0x4A1D JUMP JUMPDEST PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537E DUP2 PUSH2 0x5353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5399 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x53A6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5375 JUMP JUMPDEST PUSH2 0x53B3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5375 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C6 DUP3 PUSH2 0x49DB JUMP JUMPDEST SWAP2 POP PUSH2 0x53D1 DUP4 PUSH2 0x49DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53F5 JUMPI PUSH2 0x53F4 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5406 DUP3 PUSH2 0x49DB JUMP JUMPDEST SWAP2 POP PUSH2 0x5411 DUP4 PUSH2 0x49DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5435 JUMPI PUSH2 0x5434 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5450 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x545D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5375 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x546D DUP2 PUSH2 0x45F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x548A DUP2 PUSH2 0x5464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54A6 JUMPI PUSH2 0x54A5 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x54B4 DUP5 DUP3 DUP6 ADD PUSH2 0x547B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5504 PUSH1 0x16 DUP4 PUSH2 0x54BD JUMP JUMPDEST SWAP2 POP PUSH2 0x550F DUP3 PUSH2 0x54CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5533 DUP2 PUSH2 0x54F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5545 DUP3 PUSH2 0x4A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5555 DUP2 PUSH2 0x553A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5570 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x554C JUMP JUMPDEST PUSH2 0x557D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5599 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x55A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C0E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x55D9 JUMPI PUSH2 0x55D8 PUSH2 0x55AD JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x55FB JUMPI PUSH2 0x55FA PUSH2 0x55B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x5617 JUMPI PUSH2 0x5616 PUSH2 0x55B7 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5628 DUP2 PUSH2 0x45D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x5633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5645 DUP2 PUSH2 0x561F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5661 JUMPI PUSH2 0x5660 PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x566F DUP5 DUP3 DUP6 ADD PUSH2 0x5636 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x56DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x569D JUMP JUMPDEST PUSH2 0x56E4 DUP7 DUP4 PUSH2 0x569D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5717 PUSH2 0x5712 PUSH2 0x570D DUP5 PUSH2 0x46CB JUMP JUMPDEST PUSH2 0x4A1D JUMP JUMPDEST PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5731 DUP4 PUSH2 0x56FC JUMP JUMPDEST PUSH2 0x5745 PUSH2 0x573D DUP3 PUSH2 0x571E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x56AA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x575A PUSH2 0x574D JUMP JUMPDEST PUSH2 0x5765 DUP2 DUP5 DUP5 PUSH2 0x5728 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5789 JUMPI PUSH2 0x577E PUSH1 0x0 DUP3 PUSH2 0x5752 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x576B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x57CE JUMPI PUSH2 0x579F DUP2 PUSH2 0x5678 JUMP JUMPDEST PUSH2 0x57A8 DUP5 PUSH2 0x568D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x57B7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x57CB PUSH2 0x57C3 DUP6 PUSH2 0x568D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x576A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57F1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x57D3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580A DUP4 DUP4 PUSH2 0x57E0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5823 DUP3 PUSH2 0x5133 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x583C JUMPI PUSH2 0x583B PUSH2 0x4775 JUMP JUMPDEST JUMPDEST PUSH2 0x5846 DUP3 SLOAD PUSH2 0x5003 JUMP JUMPDEST PUSH2 0x5851 DUP3 DUP3 DUP6 PUSH2 0x578D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5884 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5872 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x587C DUP6 DUP3 PUSH2 0x57FE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x58E4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5892 DUP7 PUSH2 0x5678 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x58BA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5895 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x58D7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x58D3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x57E0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x58F5 DUP2 PUSH2 0x45B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x5900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5912 DUP2 PUSH2 0x58EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x592E JUMPI PUSH2 0x592D PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x593C DUP5 DUP3 DUP6 ADD PUSH2 0x5903 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5961 DUP3 PUSH2 0x5133 JUMP JUMPDEST PUSH2 0x596B DUP2 DUP6 PUSH2 0x5945 JUMP JUMPDEST SWAP4 POP PUSH2 0x597B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5149 JUMP JUMPDEST PUSH2 0x5984 DUP2 PUSH2 0x4764 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x59A4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x59B1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4CA5 JUMP JUMPDEST PUSH2 0x59BE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x45C5 JUMP JUMPDEST PUSH2 0x59CB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x45E4 JUMP JUMPDEST PUSH2 0x59D8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x45E4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x59EA DUP2 DUP5 PUSH2 0x5956 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0F DUP3 PUSH2 0x59F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A21 DUP3 PUSH2 0x5A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A39 PUSH2 0x5A34 DUP3 PUSH2 0x4721 JUMP JUMPDEST PUSH2 0x5A16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A64 PUSH2 0x5A5F DUP3 PUSH2 0x5A3F JUMP JUMPDEST PUSH2 0x5A49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A82 DUP3 PUSH2 0x5A6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A9A PUSH2 0x5A95 DUP3 PUSH2 0x4CCF JUMP JUMPDEST PUSH2 0x5A77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AAC DUP3 DUP8 PUSH2 0x5A28 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x5ABC DUP3 DUP7 PUSH2 0x5A53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5ACC DUP3 DUP6 PUSH2 0x5A28 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x5ADC DUP3 DUP5 PUSH2 0x5A89 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AF9 DUP3 PUSH2 0x4CCF JUMP JUMPDEST SWAP2 POP PUSH2 0x5B04 DUP4 PUSH2 0x4CCF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B24 JUMPI PUSH2 0x5B23 PUSH2 0x508C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x5B4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4C0E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B91 DUP2 PUSH2 0x46D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BAD JUMPI PUSH2 0x5BAC PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BBB DUP5 DUP3 DUP6 ADD PUSH2 0x5B82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5BD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4C0E JUMP JUMPDEST PUSH2 0x5BE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C23 PUSH1 0x16 DUP4 PUSH2 0x54BD JUMP JUMPDEST SWAP2 POP PUSH2 0x5C2E DUP3 PUSH2 0x5BED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C52 DUP2 PUSH2 0x5C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C9C DUP4 DUP4 PUSH2 0x5C59 JUMP JUMPDEST DUP3 PUSH2 0x5CA7 DUP2 CALLDATALOAD PUSH2 0x5C64 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x5CE7 JUMPI PUSH2 0x5CE2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 PUSH1 0x4 SUB PUSH1 0x8 MUL PUSH2 0x569D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x5D0D JUMPI PUSH2 0x5D0C PUSH2 0x5CEF JUMP JUMPDEST JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x5D1E JUMPI PUSH2 0x5D1D PUSH2 0x5CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 MUL DUP4 ADD SWAP2 POP DUP5 DUP7 SUB SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5D48 DUP2 PUSH2 0x5464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D64 JUMPI PUSH2 0x5D63 PUSH2 0x5D34 JUMP JUMPDEST JUMPDEST PUSH2 0x5D6E PUSH1 0x20 PUSH2 0x47D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D7E DUP5 DUP3 DUP6 ADD PUSH2 0x5D39 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DA0 JUMPI PUSH2 0x5D9F PUSH2 0x46C1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5DAE DUP5 DUP3 DUP6 ADD PUSH2 0x5D4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DC0 DUP2 PUSH2 0x45F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5DDC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5DB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5DC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E33 PUSH1 0x17 DUP4 PUSH2 0x54BD JUMP JUMPDEST SWAP2 POP PUSH2 0x5E3E DUP3 PUSH2 0x5DFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E62 DUP2 PUSH2 0x5E26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE SWAP2 JUMPDEST 0x2D PUSH4 0x58474189 SWAP9 PUSH24 0xA7D4D1BEDDCD0646E42DA5ABCC4D5ED890A32DC39164736F PUSH13 0x63430008130033000000000000 ","sourceMap":"476:8658:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:22:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3618:1427:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8623:386;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5873:398;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;631:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4812:34:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;812:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:34:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11860:341:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9013:119:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11341:356:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1189:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8566:354;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1026:316:2;;;;;;;;;;;;;:::i;:::-;;3167:171:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10548:632:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4476:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:397:14;;;;;;;;;;;;;:::i;:::-;;1382:81:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2291:142:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12969:675:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6791:926:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3674:31:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14873:937;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12205:708;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9169:220;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14252:565;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16418:530;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17004:912;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7773:794:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15866:496:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13700;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;592:35:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9517:888:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;847:98:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7796:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3618:1427:14:-;3735:16;3754:9;3735:28;;3805:1;3773:10;:22;3784:10;3773:22;;;;;;;;;;;:28;;;:33;3769:77;;3823:16;;;;;;;;;;;;;;3769:77;3851:18;3872:10;:22;3883:10;3872:22;;;;;;;;;;;3851:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3922:1;3905:6;:13;:18;3901:284;;3956:3;:12;;;3942:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3933:36;;3982:9;3977:119;4001:3;:12;;;3997:16;;:1;:16;3977:119;;;4071:10;4083:1;4060:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4050:36;;;;;;4042:45;;4030:6;4037:1;4030:9;;;;;;;;:::i;:::-;;;;;;;:57;;;;;4015:3;;;;;:::i;:::-;;;;3977:119;;;;3901:284;;;4129:3;:12;;;4112:29;;:6;:13;:29;4108:77;;4158:20;;;;;;;;;;;;;;4108:77;3901:284;4191:23;4220:20;4266:32;;;4300:10;4312:6;4243:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4220:99;;4351:4;4325:8;:23;;;:30;;;;;;;;;;;;;;;;;;4433:12;4451:9;:14;;4471:3;:20;;;4451:50;;4493:7;4451:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4432:69;;;4533:5;4507:8;:23;;;:31;;;;;;;;;;;;;;;;;;4545:18;4616:1;4572:3;:13;;;4609:1;4586:3;:13;;;:20;:24;;;;:::i;:::-;4572:39;;;;;;;;:::i;:::-;;;;;;;;;;4566:46;;:51;;;4545:72;;4624:18;4684:11;4659:36;;4671:9;4660:8;:20;;;;:::i;:::-;4659:36;;;;:::i;:::-;4645:10;:51;;;;;;:::i;:::-;4624:72;;4707:13;4702:98;;4773:19;4751:10;4744:4;:17;;;;:::i;:::-;4743:50;;;;:::i;:::-;4730:63;;4702:98;4805:14;4829:10;4805:35;;4847:49;4862:7;4871:13;4886:3;:9;;;4847:14;:49::i;:::-;4911:10;:22;4922:10;4911:22;;;;;;;;;;;;4903:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4990:3;:9;;;4966:10;4945:95;4978:10;5001:7;5010:13;5025:7;5034:5;4945:95;;;;;;;;;;:::i;:::-;;;;;;;;3729:1316;;;;;;;;3618:1427;;;:::o;8623:386::-;8711:6;19288:20:8;19302:5;19288:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;8739:14:14::2;8755:20:::0;8779:27:::2;8799:6;8779:19;:27::i;:::-;8738:68;;;;8814:12;8832:3;:8;;8856:13;8848:22;;8832:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8813:62;;;8886:7;8881:56;;8910:20;;;;;;;;;;;;;;8881:56;8968:6;8947:57;8976:3;8981:7;8990:13;8947:57;;;;;;;;:::i;:::-;;;;;;;;8732:277;;;8623:386:::0;;;:::o;5873:398::-;5996:1;5949:49;;:21;:29;5971:6;5949:29;;;;;;;;;;;:35;;;;;;;;;;;;:49;;;5945:98;;6015:21;;;;;;;;;;;;;;5945:98;6048:18;6069:15;:23;6085:6;6069:23;;;;;;;;;;;:31;;;;;;;;;;;;6048:52;;;;6148:7;6106:15;:23;6122:6;6106:23;;;;;;;;;;;:31;;;:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6187:7;6162:14;;:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6225:6;6206:60;6233:10;6258:7;6245:10;:20;;;;:::i;:::-;6206:60;;;;;;;:::i;:::-;;;;;;;;5939:332;5873:398;;:::o;631:43::-;;;:::o;4812:34:8:-;;;;;;;;;;;;;:::o;812:30::-;;;;;;;;;;;;;:::o;554:34:14:-;;;:::o;11860:341:8:-;7874:15;:13;:15::i;:::-;2075:20:2::1;:18;:20::i;:::-;11949:13:8::2;11965:20;;;;;;;;;;;11949:36;;11991:37;12026:1;12017:6;:10;;;11991:25;:37::i;:::-;12119:1;12096:20;;:24;;;;;;;;;;;;;;;;;;12150:6;12126:20;;:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12162:34;12178:9;12189:6;12162:34;;:15;:34::i;:::-;11943:258;11860:341:::0;:::o;9013:119:14:-;9092:4;9111:16;;;;;;;;;;;;;;11341:356:8;7874:15;:13;:15::i;:::-;2075:20:2::1;:18;:20::i;:::-;11445:1:8::2;11420:27;;11428:4;;;;;;;;;;;11420:27;;::::0;11416:67:::2;;11464:12;;;;;;;;;;;;;;11416:67;11488:13;11504:20;;;;;;;;;;;11488:36;;11530:37;11565:1;11556:6;:10;;;11530:25;:37::i;:::-;11596:1;11573:20;;:24;;;;;;;;;;;;;;;;;;11621:6;11603:14;;:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11633:59;11659:4;;;;;;;;;;;:13;;;11673:9;11684:6;11659:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11633:25;:59::i;:::-;11410:287;11341:356:::0;:::o;1189:42::-;1228:3;1189:42;:::o;8566:354::-;2075:20:2;:18;:20::i;:::-;8775:1:8::1;8750:27;;8758:4;;;;;;;;;;;8750:27;;;8746:71;;8794:16;;;;;;;;;;;;;;8746:71;8848:4;8822;;:31;;;;;;;;;;;;;;;;;;8900:14;8859:16;;:56;;;;;;;;;;;;;;;;;;8566:354:::0;;:::o;938:45::-;;;;;;;;;;;;;:::o;1026:316:2:-;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;3167:171:14:-;7874:15:8;:13;:15::i;:::-;3262:71:14::1;3293:10;3305:9;3330:1;3316:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:30;:71::i;:::-;3167:171:::0;;:::o;10548:632:8:-;2075:20:2;:18;:20::i;:::-;10621:23:8::1;10647:21;10621:47;;10674:23;10708:20;;;;;;;;;;;10700:29;;10674:55;;10757:15;10739;:33;10735:119;;;10814:15;10831;10789:58;;;;;;;;;;;;:::i;:::-;;;;;;;;10735:119;10881:15;10863;:33;10859:263;;;10906:14;10941:15;10923;:33;;;;:::i;:::-;10906:50;;10965:9;10980:2;:7;;10995:6;10980:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10964:42;;;11019:4;11014:57;;11042:20;;;;;;;;;;;;;;11014:57;11083:32;11104:2;11108:6;11083:32;;;;;;;:::i;:::-;;;;;;;;10898:224;;10859:263;10615:565;;10548:632:::0;:::o;4476:28::-;;;;;;;;;;;;;:::o;1890:397:14:-;2075:20:2;:18;:20::i;:::-;1945:315:14::1;;;;;;;;1989:1;1945:315;;;;;;2011:1;1945:315;;;;;;2100:5;1945:315;;;;;;2038:1;1945:315;;;;;;2075:1;1945:315;;;;;;2142:1;1945:315;;;;;;2186:1;1945:315;;;;;;2220:1;1945:315;;;;;;2252:1;1945:315;;;;::::0;1934:8:::1;:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2271:11;;;;;;;;;;1890:397::o:0;1382:81:2:-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;2291:142:14:-;2372:4;2391:11;:22;2403:9;2391:22;;;;;;;;;;;;;;;:30;2414:6;2391:30;;;;;;;;;;;:37;;;;;;;;;;;;2384:44;;2291:142;;;;:::o;12969:675:8:-;7874:15;:13;:15::i;:::-;13065:61:::1;13091:21;:28;13113:5;13091:28;;;;;;;;;;;:34;;;;;;;;;;;;13065:25;:61::i;:::-;13372:24;13399:15;:22;13415:5;13399:22;;;;;;;;;;;:36;;;;;;;;;;;;13372:63;;;;13488:9;13441:15;:22;13457:5;13441:22;;;;;;;;;;;:36;;;:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13535:9;13504:20;;:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13585:5;13556:83;13592:16;13629:9;13610:16;:28;;;;:::i;:::-;13556:83;;;;;;;:::i;:::-;;;;;;;;13059:585;12969:675:::0;:::o;6791:926:14:-;6959:7;7874:15:8;:13;:15::i;:::-;6926:4:14::1;:10;;;6938;2510:34;2526:6;2534:9;2510:15;:34::i;:::-;2505:97;;2577:6;2585:9;2561:34;;;;;;;;;;;;:::i;:::-;;;;;;;;2505:97;6974:13:::2;6990:4;:10;;;6974:26;;7056:1;7010:48;;:21;:28;7032:5;7010:28;;;;;;;;;;;:34;;;;;;;;;;;;:48;;::::0;7006:97:::2;;7075:21;;;;;;;;;;;;;;7006:97;7109:17;7129:15;;:17;;;;;;;;;:::i;:::-;;;;;7109:37;;7152:15;7170:13;;:15;;;;;;;;;:::i;:::-;;;;;7152:33;;7192:27;7222:56;7251:26;7262:4;:14;;;;;;;;:::i;:::-;7251:10;:26::i;:::-;7222:28;:56::i;:::-;7192:86;;7308:151;;;;;;;;7331:4;:10;;;7308:151;;;;7367:4;:21;;;;;;;;;;:::i;:::-;7308:151;;;;;;7406:4;:13;;;;;;;;;;:::i;:::-;7308:151;;;;;;7438:4;:14;;;;;;;;:::i;:::-;7308:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;7284:10:::2;:21;7295:9;7284:21;;;;;;;;;;;:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7674:10;7471:219;;7551:4;:10;;;7499:4;:12;;;7471:219;7519:9;7536:7;7569:4;:25;;;;;;;;;;:::i;:::-;7602:4;:21;;;;;;;;;;:::i;:::-;7631:4;:13;;;;;;;;;;:::i;:::-;7652:14;7471:219;;;;;;;;;;;:::i;:::-;;;;;;;;7703:9;7696:16;;;;;;7895:1:8::1;;6791:926:14::0;;;:::o;3674:31:8:-;;;;;;;;;;;;;:::o;14873:937::-;14943:13;7874:15;:13;:15::i;:::-;15023:22:::1;15048:17;;;;;;;;;;;15023:42;;15121:10;15158:1;15143:12;:16;;;;:::i;:::-;15133:27;15170:4;15177:15;15104:89;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15094:100;;;;;;15079:121;;15071:129;;15293:1;15275:15;:19;;;;:::i;:::-;15255:17;;:39;;;;;;;;;;;;;;;;;;15337:26;15380:1:::0;15366:16:::1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15337:45;;15413:57;;;;;;;;15436:1;15413:57;;;;;;15454:1;15413:57;;;;;;15467:1;15413:57;;;;::::0;15388:15:::1;:22;15404:5;15388:22;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15507:113;;;;;;;;15541:10;15507:113;;;;;;15583:1;15507:113;;;;;;15604:9;15507:113;;::::0;15476:21:::1;:28;15498:5;15476:28;;;;;;;;;;;:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;15718:19;15731:5;15718:8;:12;;:19;;;;:::i;:::-;;15769:5;15749:38;15776:10;15749:38;;;;;;:::i;:::-;;;;;;;;15793:12;;14873:937:::0;:::o;12205:708::-;7874:15;:13;:15::i;:::-;12352:4:::1;;;;;;;;;;;12330:27;;:10;:27;;;12326:77;;12374:22;;;;;;;;;;;;;;12326:77;12427:2;12412:4;;:11;;:17;12408:62;;12446:17;;;;;;;;;;;;;;12408:62;12475:13;12502:4;;12491:27;;;;;;;:::i;:::-;12475:43;;12524:61;12550:21;:28;12572:5;12550:28;;;;;;;;;;;:34;;;;;;;;;;;;12524:25;:61::i;:::-;12696:18;12717:15;:22;12733:5;12717:22;;;;;;;;;;;:30;;;;;;;;;;;;12696:51;;;;12794:6;12753:15;:22;12769:5;12753:22;;;;;;;;;;;:30;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12832:6;12807:14;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12869:5;12850:58;12876:10;12901:6;12888:10;:19;;;;:::i;:::-;12850:58;;;;;;;:::i;:::-;;;;;;;;12320:593;;12205:708:::0;;;;:::o;9169:220::-;2075:20:2;:18;:20::i;:::-;9242:16:8::1;9261:21;:28;9283:5;9261:28;;;;;;;;;;;:34;;;;;;;;;;;;9242:53;;9301:35;9327:8;9301:25;:35::i;:::-;9342:42;9368:5;9375:8;9342:25;:42::i;:::-;9236:153;9169:220:::0;:::o;14252:565::-;14368:20;14396:15;14414:17;:8;:15;:17::i;:::-;14396:35;;14455:7;14441:10;:21;14437:51;;14471:17;;;;;;;;;;;;;;14437:51;14494:16;14526:8;14513:10;:21;;;;:::i;:::-;14494:40;;14562:7;14551:8;:18;:35;;;;14585:1;14573:8;:13;14551:35;:56;;14599:8;14551:56;;;14589:7;14551:56;14540:67;;14613:17;14644:10;14633:8;:21;;;;:::i;:::-;14613:41;;14680:9;14666:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14660:30;;14701:11;14696:101;14724:9;14718:3;:15;14696:101;;;14761:29;14779:10;14773:3;:16;;;;:::i;:::-;14761:8;:11;;:29;;;;:::i;:::-;14750:3;14754;14750:8;;;;;;;;:::i;:::-;;;;;;;:40;;;;;14735:5;;;;:::i;:::-;;;14696:101;;;;14802:10;;;14252:565;;;;:::o;16418:530::-;7874:15;:13;:15::i;:::-;16511:16:::1;16530:21;:28;16552:5;16530:28;;;;;;;;;;;:34;;;;;;;;;;;;16511:53;;16570:35;16596:8;16570:25;:35::i;:::-;16662:10;16615:57;;:21;:28;16637:5;16615:28;;;;;;;;;;;:43;;;;;;;;;;;;:57;;;16611:150;;16710:21;:28;16732:5;16710:28;;;;;;;;;;;:43;;;;;;;;;;;;16689:65;;;;;;;;;;;:::i;:::-;;;;;;;;16611:150;16803:10;16766:21;:28;16788:5;16766:28;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;16873:1;16819:21;:28;16841:5;16819:28;;;;;;;;;;;:43;;;:56;;;;;;;;;;;;;;;;;;16915:5;16886:57;16922:8;16932:10;16886:57;;;;;;;:::i;:::-;;;;;;;;16505:443;16418:530:::0;:::o;17004:912::-;17089:5;19288:20;19302:5;19288:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;17115:37:::2;17155:11;:21;17167:8;17155:21;;;;;;;;;;;;;;;:28;17177:5;17155:28;;;;;;;;;;;17115:68;;17193:14;:21;;;;;;;;;;;;17189:165;;;17341:7;;;17189:165;17412:27;17442:21;:28;17464:5;17442:28;;;;;;;;;;;:38;;17412:68;;1228:3;17490:33;;:9;:16;;;;:33:::0;17486:79:::2;;17540:18;;;;;;;;;;;;;;17486:79;17823:4;17799:14;:21;;;:28;;;;;;;;;;;;;;;;;;17833:9;17848:8;17833:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17895:5;17869:42;17902:8;17869:42;;;;;;:::i;:::-;;;;;;;;17109:807;;7895:1;17004:912:::0;;;:::o;7773:794:14:-;7875:6;19288:20:8;19302:5;19288:13;:20::i;:::-;7901:6:14::1;7909:9;2510:34;2526:6;2534:9;2510:15;:34::i;:::-;2505:97;;2577:6;2585:9;2561:34;;;;;;;;;;;;:::i;:::-;;;;;;;;2505:97;7874:15:8::2;:13;:15::i;:::-;7944:11:14::3;:22;7956:9;7944:22;;;;;;;;;;;;;;;:30;7967:6;7944:30;;;;;;;;;;;:37;;;;;;;;;;;;7939:100;;8014:6;8022:9;7998:34;;;;;;;;;;;;:::i;:::-;;;;;;;;7939:100;8044:26;8073:21;:29;8095:6;8073:29;;;;;;;;;;;:39;;8044:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8118:25;8165:1;8146:9;:16;:20;;;;:::i;:::-;8118:48;;8177:9;8172:283;8196:9;:16;8192:1;:20;8172:283;;;8247:9;8231:25;;:9;8241:1;8231:12;;;;;;;;:::i;:::-;;;;;;;;:25;;::::0;8227:222:::3;;8268:12;8283:9;8293:17;8283:28;;;;;;;;:::i;:::-;;;;;;;;8268:43;;8366:4;8321:21;:29;8343:6;8321:29;;;;;;;;;;;:39;;8361:1;8321:42;;;;;;;;:::i;:::-;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;8380:21;:29;8402:6;8380:29;;;;;;;;;;;:39;;:45;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8435:5;;;8227:222;8214:3;;;;:::i;:::-;;;8172:283;;;;8500:5;8460:11;:22;8472:9;8460:22;;;;;;;;;;;;;;;:30;8483:6;8460:30;;;;;;;;;;;:37;;;:45;;;;;;;;;;;;;;;;;;8544:6;8516:46;8552:9;8516:46;;;;;;:::i;:::-;;;;;;;;7933:634;;19314:1:8::1;;7773:794:14::0;;;:::o;15866:496:8:-;15984:5;19288:20;19302:5;19288:13;:20::i;:::-;7874:15:::1;:13;:15::i;:::-;16090:45:::2;16138:21;:28;16160:5;16138:28;;;;;;;;;;;16090:76;;16213:8;16176:45;;:18;:33;;;;;;;;;;;;:45;;;16172:186;;16267:8;16231:18;:33;;;:44;;;;;;;;;;;;;;;;;;16323:5;16288:63;16330:10;16342:8;16288:63;;;;;;;:::i;:::-;;;;;;;;16172:186;16004:358;15866:496:::0;;;:::o;13700:::-;13794:14;13810:20;13832:15;13849:16;13867:26;13914:21;:28;13936:5;13914:28;;;;;;;;;;;:34;;;;;;;;;;;;13903:45;;13954:35;13980:8;13954:25;:35::i;:::-;14010:15;:22;14026:5;14010:22;;;;;;;;;;;:30;;;;;;;;;;;;14048:15;:22;14064:5;14048:22;;;;;;;;;;;:36;;;;;;;;;;;;14092:15;:22;14108:5;14092:22;;;;;;;;;;;:31;;;;;;;;;;;;14131:8;14147:21;:28;14169:5;14147:28;;;;;;;;;;;:38;;13995:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13700:496;;;;;;;:::o;592:35:14:-;;;:::o;9517:888:8:-;2075:20:2;:18;:20::i;:::-;9833:1:8::1;9808:27;;9816:4;;;;;;;;;;;9808:27;;::::0;9804:67:::1;;9852:12;;;;;;;;;;;;;;9804:67;9877:23;9903:4;;;;;;;;;;;:14;;;9926:4;9903:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9877:55;;9938:23;9972:14;;;;;;;;;;;9964:23;;9938:49;;10015:15;9997;:33;9993:119;;;10072:15;10089;10047:58;;;;;;;;;;;;:::i;:::-;;;;;;;;9993:119;10139:15;10121;:33;10117:230;;;10164:14;10199:15;10181;:33;;;;:::i;:::-;10164:50;;10227:4;;;;;;;;;;;:13;;;10241:2;10245:6;10227:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10222:80;;10271:22;;;;;;;;;;;;;;10222:80;10314:26;10329:2;10333:6;10314:26;;;;;;;:::i;:::-;;;;;;;;10156:191;10117:230;9570:835;;9517:888:::0;:::o;847:98:2:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;5049:622:14:-;5139:32;5174:15;:22;5190:5;5174:22;;;;;;;;;;;5139:57;;5206:13;5202:465;;;5229:14;5246:11;:25;;;;;;;;;;;;5229:42;;5293:7;5283:17;;:7;:17;;;5279:70;;;5319:21;;;;;;;;;;;;;;5279:70;5394:7;5384;:17;;;;:::i;:::-;5356:11;:25;;;:45;;;;;;;;;;;;;;;;;;5433:7;5409:20;;:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5221:226;5202:465;;;5461:14;5478:11;:19;;;;;;;;;;;;5461:36;;5519:7;5509:17;;:7;:17;;;5505:70;;;5545:21;;;;;;;;;;;;;;5505:70;5614:7;5604;:17;;;;:::i;:::-;5582:11;:19;;;:39;;;;;;;;;;;;;;;;;;5653:7;5629:20;;:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5453:214;5202:465;5133:538;5049:622;;;:::o;19324:236:8:-;19382:16;19401:21;:28;19423:5;19401:28;;;;;;;;;;;:34;;;;;;;;;;;;19382:53;;19441:35;19467:8;19441:25;:35::i;:::-;19500:8;19486:22;;:10;:22;;;19482:74;;19540:8;19525:24;;;;;;;;;;;:::i;:::-;;;;;;;;19482:74;19376:184;19324:236;:::o;7905:111::-;7954:8;:23;;;;;;;;;;;;7950:62;;;7994:11;;;;;;;;;;;;;;7950:62;7905:111::o;17920:797::-;17982:14;17998:20;18026:27;18056:21;:28;18078:5;18056:28;;;;;;;;;;;:38;;18026:68;;18110:15;:22;18126:5;18110:22;;;;;;;;;;;:30;;;;;;;;;;;;18100:40;;18162:15;:22;18178:5;18162:22;;;;;;;;;;;:36;;;;;;;;;;;;18146:52;;18280:23;18306:9;:16;;;;18280:42;;18333:9;18328:100;18352:15;18348:1;:19;18328:100;;;18389:11;:25;18401:9;18411:1;18401:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18389:25;;;;;;;;;;;;;;;:32;18415:5;18389:32;;;;;;;;;;;;18382:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18369:3;;;;:::i;:::-;;;18328:100;;;;18440:21;:28;18462:5;18440:28;;;;;;;;;;;;18433:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;18481:15;:22;18497:5;18481:22;;;;;;;;;;;;18474:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18509:22;18525:5;18509:8;:15;;:22;;;;:::i;:::-;;18552:1;18541:7;:12;;;18537:58;;18581:7;18563:14;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18537:58;18621:1;18604:13;:18;;;18600:76;;18656:13;18632:20;;:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18600:76;18681:31;;17920:797;;;:::o;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;8020:134:8:-;8096:9;8091:59;;8122:21;;;;;;;;;;;;;;8091:59;8020:134;:::o;19564:179::-;19633:12;19651:2;:7;;19666:6;19651:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19632:45;;;19688:7;19683:56;;19712:20;;;;;;;;;;;;;;19683:56;19626:117;19564:179;;:::o;8158:148::-;8255:1;8235:22;;:8;:22;;;8231:71;;8274:21;;;;;;;;;;;;;;8231:71;8158:148;:::o;6409:378:14:-;6478:34;;:::i;:::-;6544:1;6524:9;;:16;;:21;6520:100;;6562:51;;;;;;;;6606:5;6562:51;;;;;6555:58;;;;6520:100;211:28:13;6629:54:14;;;6636:9;;6629:17;;;;;:::i;:::-;:54;;;;6625:88;;6692:21;;;;;;;;;;;;;;6625:88;6737:9;;6747:1;6737:13;;;;;;;;;:::i;:::-;6726:56;;;;;;;:::i;:::-;6719:63;;6409:378;;;;;:::o;475:163:13:-;550:16;211:28;623:9;581:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:59;;475:163;;;:::o;10782:129:7:-;10849:4;10872:32;10877:3;:10;;10897:5;10889:14;;10872:4;:32::i;:::-;10865:39;;10782:129;;;;:::o;18721:520:8:-;18799:14;18815:20;18839:26;18859:5;18839:19;:26::i;:::-;18798:67;;;;18974:1;18949:27;;18957:4;;;;;;;;;;;18949:27;;;;:43;;;;;18991:1;18980:7;:12;;;;18949:43;18945:126;;;19002:62;19028:4;;;;;;;;;;;:13;;;19042:2;19054:7;19046:16;;19028:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19002:25;:62::i;:::-;18945:126;19127:43;19143:2;19155:13;19147:22;;19127:15;:43::i;:::-;19202:5;19181:55;19209:2;19213:7;19222:13;19181:55;;;;;;;;:::i;:::-;;;;;;;;18792:449;;18721:520;;:::o;11520:112:7:-;11580:7;11606:19;11614:3;:10;;11606:7;:19::i;:::-;11599:26;;11520:112;;;:::o;11974:135::-;12045:7;12079:22;12083:3;:10;;12095:5;12079:3;:22::i;:::-;12071:31;;12064:38;;11974:135;;;;:::o;1536:239:2:-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;11079:135:7:-;11149:4;11172:35;11180:3;:10;;11200:5;11192:14;;11172:7;:35::i;:::-;11165:42;;11079:135;;;;:::o;2203:404::-;2266:4;2287:21;2297:3;2302:5;2287:9;:21::i;:::-;2282:319;;2324:3;:11;;2341:5;2324:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:3;:11;;:18;;;;2482:3;:12;;:19;2495:5;2482:19;;;;;;;;;;;:40;;;;2543:4;2536:11;;;;2282:319;2585:5;2578:12;;2203:404;;;;;:::o;4452:107::-;4508:7;4534:3;:11;;:18;;;;4527:25;;4452:107;;;:::o;4901:118::-;4968:7;4994:3;:11;;5006:5;4994:18;;;;;;;;:::i;:::-;;;;;;;;;;4987:25;;4901:118;;;;:::o;2775:1388::-;2841:4;2957:18;2978:3;:12;;:19;2991:5;2978:19;;;;;;;;;;;;2957:40;;3026:1;3012:10;:15;3008:1149;;3381:21;3418:1;3405:10;:14;;;;:::i;:::-;3381:38;;3433:17;3474:1;3453:3;:11;;:18;;;;:22;;;;:::i;:::-;3433:42;;3507:13;3494:9;:26;3490:398;;3540:17;3560:3;:11;;3572:9;3560:22;;;;;;;;:::i;:::-;;;;;;;;;;3540:42;;3711:9;3682:3;:11;;3694:13;3682:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3820:10;3794:3;:12;;:23;3807:9;3794:23;;;;;;;;;;;:36;;;;3522:366;3490:398;3966:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4058:3;:12;;:19;4071:5;4058:19;;;;;;;;;;;4051:26;;;4099:4;4092:11;;;;;;;3008:1149;4141:5;4134:12;;;2775:1388;;;;;:::o;4244:127::-;4317:4;4363:1;4340:3;:12;;:19;4353:5;4340:19;;;;;;;;;;;;:24;;4333:31;;4244:127;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:89:17:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:90::-;477:7;520:5;513:13;506:21;495:32;;443:90;;;:::o;539:109::-;620:21;635:5;620:21;:::i;:::-;615:3;608:34;539:109;;:::o;654:86::-;689:7;729:4;722:5;718:16;707:27;;654:86;;;:::o;746:112::-;829:22;845:5;829:22;:::i;:::-;824:3;817:35;746:112;;:::o;864:1056::-;1155:4;1193:3;1182:9;1178:19;1170:27;;1207:69;1273:1;1262:9;1258:17;1249:6;1207:69;:::i;:::-;1286:70;1352:2;1341:9;1337:18;1328:6;1286:70;:::i;:::-;1366:66;1428:2;1417:9;1413:18;1404:6;1366:66;:::i;:::-;1442:70;1508:2;1497:9;1493:18;1484:6;1442:70;:::i;:::-;1522:71;1588:3;1577:9;1573:19;1564:6;1522:71;:::i;:::-;1603;1669:3;1658:9;1654:19;1645:6;1603:71;:::i;:::-;1684;1750:3;1739:9;1735:19;1726:6;1684:71;:::i;:::-;1765:69;1829:3;1818:9;1814:19;1805:6;1765:69;:::i;:::-;1844;1908:3;1897:9;1893:19;1884:6;1844:69;:::i;:::-;864:1056;;;;;;;;;;;;:::o;1926:75::-;1959:6;1992:2;1986:9;1976:19;;1926:75;:::o;2007:117::-;2116:1;2113;2106:12;2130:117;2239:1;2236;2229:12;2253:77;2290:7;2319:5;2308:16;;2253:77;;;:::o;2336:122::-;2409:24;2427:5;2409:24;:::i;:::-;2402:5;2399:35;2389:63;;2448:1;2445;2438:12;2389:63;2336:122;:::o;2464:139::-;2510:5;2548:6;2535:20;2526:29;;2564:33;2591:5;2564:33;:::i;:::-;2464:139;;;;:::o;2609:126::-;2646:7;2686:42;2679:5;2675:54;2664:65;;2609:126;;;:::o;2741:96::-;2778:7;2807:24;2825:5;2807:24;:::i;:::-;2796:35;;2741:96;;;:::o;2843:122::-;2916:24;2934:5;2916:24;:::i;:::-;2909:5;2906:35;2896:63;;2955:1;2952;2945:12;2896:63;2843:122;:::o;2971:139::-;3017:5;3055:6;3042:20;3033:29;;3071:33;3098:5;3071:33;:::i;:::-;2971:139;;;;:::o;3116:117::-;3225:1;3222;3215:12;3239:102;3280:6;3331:2;3327:7;3322:2;3315:5;3311:14;3307:28;3297:38;;3239:102;;;:::o;3347:180::-;3395:77;3392:1;3385:88;3492:4;3489:1;3482:15;3516:4;3513:1;3506:15;3533:281;3616:27;3638:4;3616:27;:::i;:::-;3608:6;3604:40;3746:6;3734:10;3731:22;3710:18;3698:10;3695:34;3692:62;3689:88;;;3757:18;;:::i;:::-;3689:88;3797:10;3793:2;3786:22;3576:238;3533:281;;:::o;3820:129::-;3854:6;3881:20;;:::i;:::-;3871:30;;3910:33;3938:4;3930:6;3910:33;:::i;:::-;3820:129;;;:::o;3955:311::-;4032:4;4122:18;4114:6;4111:30;4108:56;;;4144:18;;:::i;:::-;4108:56;4194:4;4186:6;4182:17;4174:25;;4254:4;4248;4244:15;4236:23;;3955:311;;;:::o;4272:117::-;4381:1;4378;4371:12;4412:710;4508:5;4533:81;4549:64;4606:6;4549:64;:::i;:::-;4533:81;:::i;:::-;4524:90;;4634:5;4663:6;4656:5;4649:21;4697:4;4690:5;4686:16;4679:23;;4750:4;4742:6;4738:17;4730:6;4726:30;4779:3;4771:6;4768:15;4765:122;;;4798:79;;:::i;:::-;4765:122;4913:6;4896:220;4930:6;4925:3;4922:15;4896:220;;;5005:3;5034:37;5067:3;5055:10;5034:37;:::i;:::-;5029:3;5022:50;5101:4;5096:3;5092:14;5085:21;;4972:144;4956:4;4951:3;4947:14;4940:21;;4896:220;;;4900:21;4514:608;;4412:710;;;;;:::o;5145:370::-;5216:5;5265:3;5258:4;5250:6;5246:17;5242:27;5232:122;;5273:79;;:::i;:::-;5232:122;5390:6;5377:20;5415:94;5505:3;5497:6;5490:4;5482:6;5478:17;5415:94;:::i;:::-;5406:103;;5222:293;5145:370;;;;:::o;5521:829::-;5623:6;5631;5639;5688:2;5676:9;5667:7;5663:23;5659:32;5656:119;;;5694:79;;:::i;:::-;5656:119;5814:1;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5785:117;5941:2;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5912:118;6097:2;6086:9;6082:18;6069:32;6128:18;6120:6;6117:30;6114:117;;;6150:79;;:::i;:::-;6114:117;6255:78;6325:7;6316:6;6305:9;6301:22;6255:78;:::i;:::-;6245:88;;6040:303;5521:829;;;;;:::o;6356:474::-;6424:6;6432;6481:2;6469:9;6460:7;6456:23;6452:32;6449:119;;;6487:79;;:::i;:::-;6449:119;6607:1;6632:53;6677:7;6668:6;6657:9;6653:22;6632:53;:::i;:::-;6622:63;;6578:117;6734:2;6760:53;6805:7;6796:6;6785:9;6781:22;6760:53;:::i;:::-;6750:63;;6705:118;6356:474;;;;;:::o;6836:::-;6904:6;6912;6961:2;6949:9;6940:7;6936:23;6932:32;6929:119;;;6967:79;;:::i;:::-;6929:119;7087:1;7112:53;7157:7;7148:6;7137:9;7133:22;7112:53;:::i;:::-;7102:63;;7058:117;7214:2;7240:53;7285:7;7276:6;7265:9;7261:22;7240:53;:::i;:::-;7230:63;;7185:118;6836:474;;;;;:::o;7316:76::-;7352:7;7381:5;7370:16;;7316:76;;;:::o;7398:115::-;7483:23;7500:5;7483:23;:::i;:::-;7478:3;7471:36;7398:115;;:::o;7519:218::-;7610:4;7648:2;7637:9;7633:18;7625:26;;7661:69;7727:1;7716:9;7712:17;7703:6;7661:69;:::i;:::-;7519:218;;;;:::o;7743:109::-;7779:7;7819:26;7812:5;7808:38;7797:49;;7743:109;;;:::o;7858:115::-;7943:23;7960:5;7943:23;:::i;:::-;7938:3;7931:36;7858:115;;:::o;7979:218::-;8070:4;8108:2;8097:9;8093:18;8085:26;;8121:69;8187:1;8176:9;8172:17;8163:6;8121:69;:::i;:::-;7979:218;;;;:::o;8203:60::-;8231:3;8252:5;8245:12;;8203:60;;;:::o;8269:142::-;8319:9;8352:53;8370:34;8379:24;8397:5;8379:24;:::i;:::-;8370:34;:::i;:::-;8352:53;:::i;:::-;8339:66;;8269:142;;;:::o;8417:126::-;8467:9;8500:37;8531:5;8500:37;:::i;:::-;8487:50;;8417:126;;;:::o;8549:152::-;8625:9;8658:37;8689:5;8658:37;:::i;:::-;8645:50;;8549:152;;;:::o;8707:183::-;8820:63;8877:5;8820:63;:::i;:::-;8815:3;8808:76;8707:183;;:::o;8896:274::-;9015:4;9053:2;9042:9;9038:18;9030:26;;9066:97;9160:1;9149:9;9145:17;9136:6;9066:97;:::i;:::-;8896:274;;;;:::o;9176:104::-;9221:7;9250:24;9268:5;9250:24;:::i;:::-;9239:35;;9176:104;;;:::o;9286:138::-;9367:32;9393:5;9367:32;:::i;:::-;9360:5;9357:43;9347:71;;9414:1;9411;9404:12;9347:71;9286:138;:::o;9430:155::-;9484:5;9522:6;9509:20;9500:29;;9538:41;9573:5;9538:41;:::i;:::-;9430:155;;;;:::o;9591:345::-;9658:6;9707:2;9695:9;9686:7;9682:23;9678:32;9675:119;;;9713:79;;:::i;:::-;9675:119;9833:1;9858:61;9911:7;9902:6;9891:9;9887:22;9858:61;:::i;:::-;9848:71;;9804:125;9591:345;;;;:::o;9942:329::-;10001:6;10050:2;10038:9;10029:7;10025:23;10021:32;10018:119;;;10056:79;;:::i;:::-;10018:119;10176:1;10201:53;10246:7;10237:6;10226:9;10222:22;10201:53;:::i;:::-;10191:63;;10147:117;9942:329;;;;:::o;10277:210::-;10364:4;10402:2;10391:9;10387:18;10379:26;;10415:65;10477:1;10466:9;10462:17;10453:6;10415:65;:::i;:::-;10277:210;;;;:::o;10493:329::-;10552:6;10601:2;10589:9;10580:7;10576:23;10572:32;10569:119;;;10607:79;;:::i;:::-;10569:119;10727:1;10752:53;10797:7;10788:6;10777:9;10773:22;10752:53;:::i;:::-;10742:63;;10698:117;10493:329;;;;:::o;10828:218::-;10919:4;10957:2;10946:9;10942:18;10934:26;;10970:69;11036:1;11025:9;11021:17;11012:6;10970:69;:::i;:::-;10828:218;;;;:::o;11052:474::-;11120:6;11128;11177:2;11165:9;11156:7;11152:23;11148:32;11145:119;;;11183:79;;:::i;:::-;11145:119;11303:1;11328:53;11373:7;11364:6;11353:9;11349:22;11328:53;:::i;:::-;11318:63;;11274:117;11430:2;11456:53;11501:7;11492:6;11481:9;11477:22;11456:53;:::i;:::-;11446:63;;11401:118;11052:474;;;;;:::o;11532:155::-;11611:9;11644:37;11675:5;11644:37;:::i;:::-;11631:50;;11532:155;;;:::o;11693:189::-;11809:66;11869:5;11809:66;:::i;:::-;11804:3;11797:79;11693:189;;:::o;11888:280::-;12010:4;12048:2;12037:9;12033:18;12025:26;;12061:100;12158:1;12147:9;12143:17;12134:6;12061:100;:::i;:::-;11888:280;;;;:::o;12174:118::-;12261:24;12279:5;12261:24;:::i;:::-;12256:3;12249:37;12174:118;;:::o;12298:222::-;12391:4;12429:2;12418:9;12414:18;12406:26;;12442:71;12510:1;12499:9;12495:17;12486:6;12442:71;:::i;:::-;12298:222;;;;:::o;12526:117::-;12635:1;12632;12625:12;12698:243;12782:5;12823:3;12814:6;12809:3;12805:16;12801:26;12798:113;;;12830:79;;:::i;:::-;12798:113;12929:6;12920:15;;12698:243;;;;:::o;12947:565::-;13044:6;13093:2;13081:9;13072:7;13068:23;13064:32;13061:119;;;13099:79;;:::i;:::-;13061:119;13247:1;13236:9;13232:17;13219:31;13277:18;13269:6;13266:30;13263:117;;;13299:79;;:::i;:::-;13263:117;13404:91;13487:7;13478:6;13467:9;13463:22;13404:91;:::i;:::-;13394:101;;13190:315;12947:565;;;;:::o;13518:118::-;13605:24;13623:5;13605:24;:::i;:::-;13600:3;13593:37;13518:118;;:::o;13642:222::-;13735:4;13773:2;13762:9;13758:18;13750:26;;13786:71;13854:1;13843:9;13839:17;13830:6;13786:71;:::i;:::-;13642:222;;;;:::o;13870:101::-;13906:7;13946:18;13939:5;13935:30;13924:41;;13870:101;;;:::o;13977:115::-;14062:23;14079:5;14062:23;:::i;:::-;14057:3;14050:36;13977:115;;:::o;14098:218::-;14189:4;14227:2;14216:9;14212:18;14204:26;;14240:69;14306:1;14295:9;14291:17;14282:6;14240:69;:::i;:::-;14098:218;;;;:::o;14322:117::-;14431:1;14428;14421:12;14458:552;14515:8;14525:6;14575:3;14568:4;14560:6;14556:17;14552:27;14542:122;;14583:79;;:::i;:::-;14542:122;14696:6;14683:20;14673:30;;14726:18;14718:6;14715:30;14712:117;;;14748:79;;:::i;:::-;14712:117;14862:4;14854:6;14850:17;14838:29;;14916:3;14908:4;14900:6;14896:17;14886:8;14882:32;14879:41;14876:128;;;14923:79;;:::i;:::-;14876:128;14458:552;;;;;:::o;15016:817::-;15104:6;15112;15120;15128;15177:2;15165:9;15156:7;15152:23;15148:32;15145:119;;;15183:79;;:::i;:::-;15145:119;15303:1;15328:53;15373:7;15364:6;15353:9;15349:22;15328:53;:::i;:::-;15318:63;;15274:117;15430:2;15456:53;15501:7;15492:6;15481:9;15477:22;15456:53;:::i;:::-;15446:63;;15401:118;15586:2;15575:9;15571:18;15558:32;15617:18;15609:6;15606:30;15603:117;;;15639:79;;:::i;:::-;15603:117;15752:64;15808:7;15799:6;15788:9;15784:22;15752:64;:::i;:::-;15734:82;;;;15529:297;15016:817;;;;;;;:::o;15839:114::-;15906:6;15940:5;15934:12;15924:22;;15839:114;;;:::o;15959:184::-;16058:11;16092:6;16087:3;16080:19;16132:4;16127:3;16123:14;16108:29;;15959:184;;;;:::o;16149:132::-;16216:4;16239:3;16231:11;;16269:4;16264:3;16260:14;16252:22;;16149:132;;;:::o;16287:108::-;16364:24;16382:5;16364:24;:::i;:::-;16359:3;16352:37;16287:108;;:::o;16401:179::-;16470:10;16491:46;16533:3;16525:6;16491:46;:::i;:::-;16569:4;16564:3;16560:14;16546:28;;16401:179;;;;:::o;16586:113::-;16656:4;16688;16683:3;16679:14;16671:22;;16586:113;;;:::o;16735:732::-;16854:3;16883:54;16931:5;16883:54;:::i;:::-;16953:86;17032:6;17027:3;16953:86;:::i;:::-;16946:93;;17063:56;17113:5;17063:56;:::i;:::-;17142:7;17173:1;17158:284;17183:6;17180:1;17177:13;17158:284;;;17259:6;17253:13;17286:63;17345:3;17330:13;17286:63;:::i;:::-;17279:70;;17372:60;17425:6;17372:60;:::i;:::-;17362:70;;17218:224;17205:1;17202;17198:9;17193:14;;17158:284;;;17162:14;17458:3;17451:10;;16859:608;;;16735:732;;;;:::o;17473:373::-;17616:4;17654:2;17643:9;17639:18;17631:26;;17703:9;17697:4;17693:20;17689:1;17678:9;17674:17;17667:47;17731:108;17834:4;17825:6;17731:108;:::i;:::-;17723:116;;17473:373;;;;:::o;17852:114::-;17919:6;17953:5;17947:12;17937:22;;17852:114;;;:::o;17972:184::-;18071:11;18105:6;18100:3;18093:19;18145:4;18140:3;18136:14;18121:29;;17972:184;;;;:::o;18162:132::-;18229:4;18252:3;18244:11;;18282:4;18277:3;18273:14;18265:22;;18162:132;;;:::o;18300:108::-;18377:24;18395:5;18377:24;:::i;:::-;18372:3;18365:37;18300:108;;:::o;18414:179::-;18483:10;18504:46;18546:3;18538:6;18504:46;:::i;:::-;18582:4;18577:3;18573:14;18559:28;;18414:179;;;;:::o;18599:113::-;18669:4;18701;18696:3;18692:14;18684:22;;18599:113;;;:::o;18748:732::-;18867:3;18896:54;18944:5;18896:54;:::i;:::-;18966:86;19045:6;19040:3;18966:86;:::i;:::-;18959:93;;19076:56;19126:5;19076:56;:::i;:::-;19155:7;19186:1;19171:284;19196:6;19193:1;19190:13;19171:284;;;19272:6;19266:13;19299:63;19358:3;19343:13;19299:63;:::i;:::-;19292:70;;19385:60;19438:6;19385:60;:::i;:::-;19375:70;;19231:224;19218:1;19215;19211:9;19206:14;;19171:284;;;19175:14;19471:3;19464:10;;18872:608;;;18748:732;;;;:::o;19486:803::-;19735:4;19773:3;19762:9;19758:19;19750:27;;19787:69;19853:1;19842:9;19838:17;19829:6;19787:69;:::i;:::-;19866:70;19932:2;19921:9;19917:18;19908:6;19866:70;:::i;:::-;19946;20012:2;20001:9;19997:18;19988:6;19946:70;:::i;:::-;20026:72;20094:2;20083:9;20079:18;20070:6;20026:72;:::i;:::-;20146:9;20140:4;20136:20;20130:3;20119:9;20115:19;20108:49;20174:108;20277:4;20268:6;20174:108;:::i;:::-;20166:116;;19486:803;;;;;;;;:::o;20295:180::-;20343:77;20340:1;20333:88;20440:4;20437:1;20430:15;20464:4;20461:1;20454:15;20481:320;20525:6;20562:1;20556:4;20552:12;20542:22;;20609:1;20603:4;20599:12;20630:18;20620:81;;20686:4;20678:6;20674:17;20664:27;;20620:81;20748:2;20740:6;20737:14;20717:18;20714:38;20711:84;;20767:18;;:::i;:::-;20711:84;20532:269;20481:320;;;:::o;20807:332::-;20928:4;20966:2;20955:9;20951:18;20943:26;;20979:71;21047:1;21036:9;21032:17;21023:6;20979:71;:::i;:::-;21060:72;21128:2;21117:9;21113:18;21104:6;21060:72;:::i;:::-;20807:332;;;;;:::o;21145:180::-;21193:77;21190:1;21183:88;21290:4;21287:1;21280:15;21314:4;21311:1;21304:15;21331:180;21379:77;21376:1;21369:88;21476:4;21473:1;21466:15;21500:4;21497:1;21490:15;21517:233;21556:3;21579:24;21597:5;21579:24;:::i;:::-;21570:33;;21625:66;21618:5;21615:77;21612:103;;21695:18;;:::i;:::-;21612:103;21742:1;21735:5;21731:13;21724:20;;21517:233;;;:::o;21756:483::-;21927:4;21965:2;21954:9;21950:18;21942:26;;21978:71;22046:1;22035:9;22031:17;22022:6;21978:71;:::i;:::-;22096:9;22090:4;22086:20;22081:2;22070:9;22066:18;22059:48;22124:108;22227:4;22218:6;22124:108;:::i;:::-;22116:116;;21756:483;;;;;:::o;22245:98::-;22296:6;22330:5;22324:12;22314:22;;22245:98;;;:::o;22349:147::-;22450:11;22487:3;22472:18;;22349:147;;;;:::o;22502:246::-;22583:1;22593:113;22607:6;22604:1;22601:13;22593:113;;;22692:1;22687:3;22683:11;22677:18;22673:1;22668:3;22664:11;22657:39;22629:2;22626:1;22622:10;22617:15;;22593:113;;;22740:1;22731:6;22726:3;22722:16;22715:27;22564:184;22502:246;;;:::o;22754:386::-;22858:3;22886:38;22918:5;22886:38;:::i;:::-;22940:88;23021:6;23016:3;22940:88;:::i;:::-;22933:95;;23037:65;23095:6;23090:3;23083:4;23076:5;23072:16;23037:65;:::i;:::-;23127:6;23122:3;23118:16;23111:23;;22862:278;22754:386;;;;:::o;23146:271::-;23276:3;23298:93;23387:3;23378:6;23298:93;:::i;:::-;23291:100;;23408:3;23401:10;;23146:271;;;;:::o;23423:194::-;23463:4;23483:20;23501:1;23483:20;:::i;:::-;23478:25;;23517:20;23535:1;23517:20;:::i;:::-;23512:25;;23561:1;23558;23554:9;23546:17;;23585:1;23579:4;23576:11;23573:37;;;23590:18;;:::i;:::-;23573:37;23423:194;;;;:::o;23623:410::-;23663:7;23686:20;23704:1;23686:20;:::i;:::-;23681:25;;23720:20;23738:1;23720:20;:::i;:::-;23715:25;;23775:1;23772;23768:9;23797:30;23815:11;23797:30;:::i;:::-;23786:41;;23976:1;23967:7;23963:15;23960:1;23957:22;23937:1;23930:9;23910:83;23887:139;;24006:18;;:::i;:::-;23887:139;23671:362;23623:410;;;;:::o;24039:191::-;24079:3;24098:20;24116:1;24098:20;:::i;:::-;24093:25;;24132:20;24150:1;24132:20;:::i;:::-;24127:25;;24175:1;24172;24168:9;24161:16;;24196:3;24193:1;24190:10;24187:36;;;24203:18;;:::i;:::-;24187:36;24039:191;;;;:::o;24236:180::-;24284:77;24281:1;24274:88;24381:4;24378:1;24371:15;24405:4;24402:1;24395:15;24422:185;24462:1;24479:20;24497:1;24479:20;:::i;:::-;24474:25;;24513:20;24531:1;24513:20;:::i;:::-;24508:25;;24552:1;24542:35;;24557:18;;:::i;:::-;24542:35;24599:1;24596;24592:9;24587:14;;24422:185;;;;:::o;24613:624::-;24798:4;24836:3;24825:9;24821:19;24813:27;;24850:71;24918:1;24907:9;24903:17;24894:6;24850:71;:::i;:::-;24931:70;24997:2;24986:9;24982:18;24973:6;24931:70;:::i;:::-;25011:66;25073:2;25062:9;25058:18;25049:6;25011:66;:::i;:::-;25087;25149:2;25138:9;25134:18;25125:6;25087:66;:::i;:::-;25163:67;25225:3;25214:9;25210:19;25201:6;25163:67;:::i;:::-;24613:624;;;;;;;;:::o;25243:114::-;;:::o;25363:398::-;25522:3;25543:83;25624:1;25619:3;25543:83;:::i;:::-;25536:90;;25635:93;25724:3;25635:93;:::i;:::-;25753:1;25748:3;25744:11;25737:18;;25363:398;;;:::o;25767:379::-;25951:3;25973:147;26116:3;25973:147;:::i;:::-;25966:154;;26137:3;26130:10;;25767:379;;;:::o;26152:140::-;26201:9;26234:52;26252:33;26261:23;26278:5;26261:23;:::i;:::-;26252:33;:::i;:::-;26234:52;:::i;:::-;26221:65;;26152:140;;;:::o;26298:129::-;26384:36;26414:5;26384:36;:::i;:::-;26379:3;26372:49;26298:129;;:::o;26433:438::-;26580:4;26618:2;26607:9;26603:18;26595:26;;26631:71;26699:1;26688:9;26684:17;26675:6;26631:71;:::i;:::-;26712;26779:2;26768:9;26764:18;26755:6;26712:71;:::i;:::-;26793;26860:2;26849:9;26845:18;26836:6;26793:71;:::i;:::-;26433:438;;;;;;:::o;26877:213::-;26916:3;26935:19;26952:1;26935:19;:::i;:::-;26930:24;;26968:19;26985:1;26968:19;:::i;:::-;26963:24;;27010:1;27007;27003:9;26996:16;;27033:26;27028:3;27025:35;27022:61;;;27063:18;;:::i;:::-;27022:61;26877:213;;;;:::o;27096:216::-;27135:4;27155:19;27172:1;27155:19;:::i;:::-;27150:24;;27188:19;27205:1;27188:19;:::i;:::-;27183:24;;27231:1;27228;27224:9;27216:17;;27255:26;27249:4;27246:36;27243:62;;;27285:18;;:::i;:::-;27243:62;27096:216;;;;:::o;27318:330::-;27438:4;27476:2;27465:9;27461:18;27453:26;;27489:71;27557:1;27546:9;27542:17;27533:6;27489:71;:::i;:::-;27570;27637:2;27626:9;27622:18;27613:6;27570:71;:::i;:::-;27318:330;;;;;:::o;27654:116::-;27724:21;27739:5;27724:21;:::i;:::-;27717:5;27714:32;27704:60;;27760:1;27757;27750:12;27704:60;27654:116;:::o;27776:137::-;27830:5;27861:6;27855:13;27846:22;;27877:30;27901:5;27877:30;:::i;:::-;27776:137;;;;:::o;27919:345::-;27986:6;28035:2;28023:9;28014:7;28010:23;28006:32;28003:119;;;28041:79;;:::i;:::-;28003:119;28161:1;28186:61;28239:7;28230:6;28219:9;28215:22;28186:61;:::i;:::-;28176:71;;28132:125;27919:345;;;;:::o;28270:169::-;28354:11;28388:6;28383:3;28376:19;28428:4;28423:3;28419:14;28404:29;;28270:169;;;;:::o;28445:172::-;28585:24;28581:1;28573:6;28569:14;28562:48;28445:172;:::o;28623:366::-;28765:3;28786:67;28850:2;28845:3;28786:67;:::i;:::-;28779:74;;28862:93;28951:3;28862:93;:::i;:::-;28980:2;28975:3;28971:12;28964:19;;28623:366;;;:::o;28995:419::-;29161:4;29199:2;29188:9;29184:18;29176:26;;29248:9;29242:4;29238:20;29234:1;29223:9;29219:17;29212:47;29276:131;29402:4;29276:131;:::i;:::-;29268:139;;28995:419;;;:::o;29420:134::-;29478:9;29511:37;29542:5;29511:37;:::i;:::-;29498:50;;29420:134;;;:::o;29560:147::-;29655:45;29694:5;29655:45;:::i;:::-;29650:3;29643:58;29560:147;;:::o;29713:348::-;29842:4;29880:2;29869:9;29865:18;29857:26;;29893:79;29969:1;29958:9;29954:17;29945:6;29893:79;:::i;:::-;29982:72;30050:2;30039:9;30035:18;30026:6;29982:72;:::i;:::-;29713:348;;;;;:::o;30067:332::-;30188:4;30226:2;30215:9;30211:18;30203:26;;30239:71;30307:1;30296:9;30292:17;30283:6;30239:71;:::i;:::-;30320:72;30388:2;30377:9;30373:18;30364:6;30320:72;:::i;:::-;30067:332;;;;;:::o;30405:117::-;30514:1;30511;30504:12;30528:117;30637:1;30634;30627:12;30651:117;30760:1;30757;30750:12;30774:724;30851:4;30857:6;30913:11;30900:25;31013:1;31007:4;31003:12;30992:8;30976:14;30972:29;30968:48;30948:18;30944:73;30934:168;;31021:79;;:::i;:::-;30934:168;31133:18;31123:8;31119:33;31111:41;;31185:4;31172:18;31162:28;;31213:18;31205:6;31202:30;31199:117;;;31235:79;;:::i;:::-;31199:117;31343:2;31337:4;31333:13;31325:21;;31400:4;31392:6;31388:17;31372:14;31368:38;31362:4;31358:49;31355:136;;;31410:79;;:::i;:::-;31355:136;30864:634;30774:724;;;;;:::o;31504:120::-;31576:23;31593:5;31576:23;:::i;:::-;31569:5;31566:34;31556:62;;31614:1;31611;31604:12;31556:62;31504:120;:::o;31630:137::-;31675:5;31713:6;31700:20;31691:29;;31729:32;31755:5;31729:32;:::i;:::-;31630:137;;;;:::o;31773:327::-;31831:6;31880:2;31868:9;31859:7;31855:23;31851:32;31848:119;;;31886:79;;:::i;:::-;31848:119;32006:1;32031:52;32075:7;32066:6;32055:9;32051:22;32031:52;:::i;:::-;32021:62;;31977:116;31773:327;;;;:::o;32106:140::-;32154:4;32177:3;32169:11;;32200:3;32197:1;32190:14;32234:4;32231:1;32221:18;32213:26;;32106:140;;;:::o;32252:93::-;32289:6;32336:2;32331;32324:5;32320:14;32316:23;32306:33;;32252:93;;;:::o;32351:107::-;32395:8;32445:5;32439:4;32435:16;32414:37;;32351:107;;;;:::o;32464:393::-;32533:6;32583:1;32571:10;32567:18;32606:97;32636:66;32625:9;32606:97;:::i;:::-;32724:39;32754:8;32743:9;32724:39;:::i;:::-;32712:51;;32796:4;32792:9;32785:5;32781:21;32772:30;;32845:4;32835:8;32831:19;32824:5;32821:30;32811:40;;32540:317;;32464:393;;;;;:::o;32863:142::-;32913:9;32946:53;32964:34;32973:24;32991:5;32973:24;:::i;:::-;32964:34;:::i;:::-;32946:53;:::i;:::-;32933:66;;32863:142;;;:::o;33011:75::-;33054:3;33075:5;33068:12;;33011:75;;;:::o;33092:269::-;33202:39;33233:7;33202:39;:::i;:::-;33263:91;33312:41;33336:16;33312:41;:::i;:::-;33304:6;33297:4;33291:11;33263:91;:::i;:::-;33257:4;33250:105;33168:193;33092:269;;;:::o;33367:73::-;33412:3;33367:73;:::o;33446:189::-;33523:32;;:::i;:::-;33564:65;33622:6;33614;33608:4;33564:65;:::i;:::-;33499:136;33446:189;;:::o;33641:186::-;33701:120;33718:3;33711:5;33708:14;33701:120;;;33772:39;33809:1;33802:5;33772:39;:::i;:::-;33745:1;33738:5;33734:13;33725:22;;33701:120;;;33641:186;;:::o;33833:541::-;33933:2;33928:3;33925:11;33922:445;;;33967:37;33998:5;33967:37;:::i;:::-;34050:29;34068:10;34050:29;:::i;:::-;34040:8;34036:44;34233:2;34221:10;34218:18;34215:49;;;34254:8;34239:23;;34215:49;34277:80;34333:22;34351:3;34333:22;:::i;:::-;34323:8;34319:37;34306:11;34277:80;:::i;:::-;33937:430;;33922:445;33833:541;;;:::o;34380:117::-;34434:8;34484:5;34478:4;34474:16;34453:37;;34380:117;;;;:::o;34503:169::-;34547:6;34580:51;34628:1;34624:6;34616:5;34613:1;34609:13;34580:51;:::i;:::-;34576:56;34661:4;34655;34651:15;34641:25;;34554:118;34503:169;;;;:::o;34677:295::-;34753:4;34899:29;34924:3;34918:4;34899:29;:::i;:::-;34891:37;;34961:3;34958:1;34954:11;34948:4;34945:21;34937:29;;34677:295;;;;:::o;34977:1390::-;35092:36;35124:3;35092:36;:::i;:::-;35193:18;35185:6;35182:30;35179:56;;;35215:18;;:::i;:::-;35179:56;35259:38;35291:4;35285:11;35259:38;:::i;:::-;35344:66;35403:6;35395;35389:4;35344:66;:::i;:::-;35437:1;35461:4;35448:17;;35493:2;35485:6;35482:14;35510:1;35505:617;;;;36166:1;36183:6;36180:77;;;36232:9;36227:3;36223:19;36217:26;36208:35;;36180:77;36283:67;36343:6;36336:5;36283:67;:::i;:::-;36277:4;36270:81;36139:222;35475:886;;35505:617;35557:4;35553:9;35545:6;35541:22;35591:36;35622:4;35591:36;:::i;:::-;35649:1;35663:208;35677:7;35674:1;35671:14;35663:208;;;35756:9;35751:3;35747:19;35741:26;35733:6;35726:42;35807:1;35799:6;35795:14;35785:24;;35854:2;35843:9;35839:18;35826:31;;35700:4;35697:1;35693:12;35688:17;;35663:208;;;35899:6;35890:7;35887:19;35884:179;;;35957:9;35952:3;35948:19;35942:26;36000:48;36042:4;36034:6;36030:17;36019:9;36000:48;:::i;:::-;35992:6;35985:64;35907:156;35884:179;36109:1;36105;36097:6;36093:14;36089:22;36083:4;36076:36;35512:610;;;35475:886;;35067:1300;;;34977:1390;;:::o;36373:120::-;36445:23;36462:5;36445:23;:::i;:::-;36438:5;36435:34;36425:62;;36483:1;36480;36473:12;36425:62;36373:120;:::o;36499:137::-;36544:5;36582:6;36569:20;36560:29;;36598:32;36624:5;36598:32;:::i;:::-;36499:137;;;;:::o;36642:327::-;36700:6;36749:2;36737:9;36728:7;36724:23;36720:32;36717:119;;;36755:79;;:::i;:::-;36717:119;36875:1;36900:52;36944:7;36935:6;36924:9;36920:22;36900:52;:::i;:::-;36890:62;;36846:116;36642:327;;;;:::o;36975:168::-;37058:11;37092:6;37087:3;37080:19;37132:4;37127:3;37123:14;37108:29;;36975:168;;;;:::o;37149:373::-;37235:3;37263:38;37295:5;37263:38;:::i;:::-;37317:70;37380:6;37375:3;37317:70;:::i;:::-;37310:77;;37396:65;37454:6;37449:3;37442:4;37435:5;37431:16;37396:65;:::i;:::-;37486:29;37508:6;37486:29;:::i;:::-;37481:3;37477:39;37470:46;;37239:283;37149:373;;;;:::o;37528:850::-;37773:4;37811:3;37800:9;37796:19;37788:27;;37825:71;37893:1;37882:9;37878:17;37869:6;37825:71;:::i;:::-;37906:72;37974:2;37963:9;37959:18;37950:6;37906:72;:::i;:::-;37988:70;38054:2;38043:9;38039:18;38030:6;37988:70;:::i;:::-;38068;38134:2;38123:9;38119:18;38110:6;38068:70;:::i;:::-;38148:71;38214:3;38203:9;38199:19;38190:6;38148:71;:::i;:::-;38267:9;38261:4;38257:20;38251:3;38240:9;38236:19;38229:49;38295:76;38366:4;38357:6;38295:76;:::i;:::-;38287:84;;37528:850;;;;;;;;;:::o;38384:94::-;38417:8;38465:5;38461:2;38457:14;38436:35;;38384:94;;;:::o;38484:::-;38523:7;38552:20;38566:5;38552:20;:::i;:::-;38541:31;;38484:94;;;:::o;38584:100::-;38623:7;38652:26;38672:5;38652:26;:::i;:::-;38641:37;;38584:100;;;:::o;38690:157::-;38795:45;38815:24;38833:5;38815:24;:::i;:::-;38795:45;:::i;:::-;38790:3;38783:58;38690:157;;:::o;38853:77::-;38890:7;38919:5;38908:16;;38853:77;;;:::o;38936:79::-;38975:7;39004:5;38993:16;;38936:79;;;:::o;39021:157::-;39126:45;39146:24;39164:5;39146:24;:::i;:::-;39126:45;:::i;:::-;39121:3;39114:58;39021:157;;:::o;39184:96::-;39218:8;39267:5;39262:3;39258:15;39237:36;;39184:96;;;:::o;39286:94::-;39324:7;39353:21;39368:5;39353:21;:::i;:::-;39342:32;;39286:94;;;:::o;39386:153::-;39489:43;39508:23;39525:5;39508:23;:::i;:::-;39489:43;:::i;:::-;39484:3;39477:56;39386:153;;:::o;39545:674::-;39739:3;39754:75;39825:3;39816:6;39754:75;:::i;:::-;39854:2;39849:3;39845:12;39838:19;;39867:75;39938:3;39929:6;39867:75;:::i;:::-;39967:2;39962:3;39958:12;39951:19;;39980:75;40051:3;40042:6;39980:75;:::i;:::-;40080:2;40075:3;40071:12;40064:19;;40093:73;40162:3;40153:6;40093:73;:::i;:::-;40191:1;40186:3;40182:11;40175:18;;40210:3;40203:10;;39545:674;;;;;;;:::o;40225:205::-;40264:3;40283:19;40300:1;40283:19;:::i;:::-;40278:24;;40316:19;40333:1;40316:19;:::i;:::-;40311:24;;40358:1;40355;40351:9;40344:16;;40381:18;40376:3;40373:27;40370:53;;;40403:18;;:::i;:::-;40370:53;40225:205;;;;:::o;40436:332::-;40557:4;40595:2;40584:9;40580:18;40572:26;;40608:71;40676:1;40665:9;40661:17;40652:6;40608:71;:::i;:::-;40689:72;40757:2;40746:9;40742:18;40733:6;40689:72;:::i;:::-;40436:332;;;;;:::o;40774:180::-;40822:77;40819:1;40812:88;40919:4;40916:1;40909:15;40943:4;40940:1;40933:15;40960:143;41017:5;41048:6;41042:13;41033:22;;41064:33;41091:5;41064:33;:::i;:::-;40960:143;;;;:::o;41109:351::-;41179:6;41228:2;41216:9;41207:7;41203:23;41199:32;41196:119;;;41234:79;;:::i;:::-;41196:119;41354:1;41379:64;41435:7;41426:6;41415:9;41411:22;41379:64;:::i;:::-;41369:74;;41325:128;41109:351;;;;:::o;41466:332::-;41587:4;41625:2;41614:9;41610:18;41602:26;;41638:71;41706:1;41695:9;41691:17;41682:6;41638:71;:::i;:::-;41719:72;41787:2;41776:9;41772:18;41763:6;41719:72;:::i;:::-;41466:332;;;;;:::o;41804:172::-;41944:24;41940:1;41932:6;41928:14;41921:48;41804:172;:::o;41982:366::-;42124:3;42145:67;42209:2;42204:3;42145:67;:::i;:::-;42138:74;;42221:93;42310:3;42221:93;:::i;:::-;42339:2;42334:3;42330:12;42323:19;;41982:366;;;:::o;42354:419::-;42520:4;42558:2;42547:9;42543:18;42535:26;;42607:9;42601:4;42597:20;42593:1;42582:9;42578:17;42571:47;42635:131;42761:4;42635:131;:::i;:::-;42627:139;;42354:419;;;:::o;42779:96::-;42837:6;42865:3;42855:13;;42779:96;;;;:::o;42973:149::-;43009:7;43049:66;43042:5;43038:78;43027:89;;42973:149;;;:::o;43128:548::-;43218:5;43249:45;43290:3;43283:5;43249:45;:::i;:::-;43319:5;43343:40;43373:8;43360:22;43343:40;:::i;:::-;43334:49;;43407:1;43399:6;43396:13;43393:276;;;43477:168;43561:66;43531:6;43528:1;43524:14;43521:1;43517:22;43477:168;:::i;:::-;43454:5;43433:226;43424:235;;43393:276;43224:452;;43128:548;;;;:::o;43682:117::-;43791:1;43788;43781:12;43805:117;43914:1;43911;43904:12;43928:469;44033:9;44044;44082:8;44070:10;44067:24;44064:111;;;44094:79;;:::i;:::-;44064:111;44200:6;44190:8;44187:20;44184:107;;;44210:79;;:::i;:::-;44184:107;44341:1;44329:10;44325:18;44317:6;44313:31;44300:44;;44380:10;44370:8;44366:25;44353:38;;43928:469;;;;;;;:::o;44403:117::-;44512:1;44509;44502:12;44649:133;44692:5;44730:6;44717:20;44708:29;;44746:30;44770:5;44746:30;:::i;:::-;44649:133;;;;:::o;44830:423::-;44908:5;44952:4;44940:9;44935:3;44931:19;44927:30;44924:117;;;44960:79;;:::i;:::-;44924:117;45059:21;45075:4;45059:21;:::i;:::-;45050:30;;45148:1;45188:46;45230:3;45221:6;45210:9;45206:22;45188:46;:::i;:::-;45181:4;45174:5;45170:16;45163:72;45090:156;44830:423;;;;:::o;45259:387::-;45347:6;45396:2;45384:9;45375:7;45371:23;45367:32;45364:119;;;45402:79;;:::i;:::-;45364:119;45522:1;45547:82;45621:7;45612:6;45601:9;45597:22;45547:82;:::i;:::-;45537:92;;45493:146;45259:387;;;;:::o;45652:99::-;45723:21;45738:5;45723:21;:::i;:::-;45718:3;45711:34;45652:99;;:::o;45837:344::-;45992:4;45987:3;45983:14;46088:4;46081:5;46077:16;46071:23;46107:57;46158:4;46153:3;46149:14;46135:12;46107:57;:::i;:::-;46007:167;45961:220;45837:344;;:::o;46187:338::-;46338:4;46376:2;46365:9;46361:18;46353:26;;46389:129;46515:1;46504:9;46500:17;46491:6;46389:129;:::i;:::-;46187:338;;;;:::o;46531:173::-;46671:25;46667:1;46659:6;46655:14;46648:49;46531:173;:::o;46710:366::-;46852:3;46873:67;46937:2;46932:3;46873:67;:::i;:::-;46866:74;;46949:93;47038:3;46949:93;:::i;:::-;47067:2;47062:3;47058:12;47051:19;;46710:366;;;:::o;47082:419::-;47248:4;47286:2;47275:9;47271:18;47263:26;;47335:9;47329:4;47325:20;47321:1;47310:9;47306:17;47299:47;47363:131;47489:4;47363:131;:::i;:::-;47355:139;;47082:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4844600","executionCost":"infinite","totalCost":"infinite"},"external":{"LINK()":"infinite","LINK_NATIVE_FEED()":"infinite","MAX_CONSUMERS()":"425","acceptOwnership()":"54607","acceptSubscriptionOwnerTransfer(uint256)":"infinite","addConsumer(uint256,address)":"infinite","cancelSubscription(uint256,address)":"infinite","consumerIsAdded(uint256,address)":"3230","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"infinite","fundSubscription(uint256,uint256)":"infinite","fundSubscriptionWithNative(uint256)":"infinite","getActiveSubscriptionIds(uint256,uint256)":"infinite","getSubscription(uint256)":"infinite","i_base_fee()":"infinite","i_gas_price()":"infinite","i_wei_per_unit_link()":"infinite","onTokenTransfer(address,uint256,bytes)":"infinite","owner()":"2590","ownerCancelSubscription(uint256)":"infinite","pendingRequestExists(uint256)":"489","recoverFunds(address)":"infinite","recoverNativeFunds(address)":"infinite","removeConsumer(uint256,address)":"infinite","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"infinite","requestSubscriptionOwnerTransfer(uint256,address)":"infinite","s_config()":"infinite","s_currentSubNonce()":"2538","s_totalBalance()":"2604","s_totalNativeBalance()":"2589","setConfig()":"222345","setLINKAndLINKNativeFeed(address,address)":"infinite","transferOwnership(address)":"30786","withdraw(address)":"infinite","withdrawNative(address)":"infinite"},"internal":{"_chargePayment(uint96,bool,uint256)":"infinite","_fromBytes(bytes calldata)":"infinite"}},"methodIdentifiers":{"LINK()":"1b6b6d23","LINK_NATIVE_FEED()":"72e9d565","MAX_CONSUMERS()":"64d51a2a","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint256)":"b2a7cac5","addConsumer(uint256,address)":"bec4c08c","cancelSubscription(uint256,address)":"0ae09540","consumerIsAdded(uint256,address)":"953e9c75","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"08e3898e","fundSubscription(uint256,uint256)":"115e3c0d","fundSubscriptionWithNative(uint256)":"95b55cfc","getActiveSubscriptionIds(uint256,uint256)":"aefb212f","getSubscription(uint256)":"dc311dd3","i_base_fee()":"1eebc117","i_gas_price()":"dcab3dcf","i_wei_per_unit_link()":"13478329","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","owner()":"8da5cb5b","ownerCancelSubscription(uint256)":"aa433aff","pendingRequestExists(uint256)":"41af6c87","recoverFunds(address)":"e72f6e30","recoverNativeFunds(address)":"8402595e","removeConsumer(uint256,address)":"cb631797","requestRandomWords((bytes32,uint256,uint16,uint32,uint32,bytes))":"9b1c385e","requestSubscriptionOwnerTransfer(uint256,address)":"dac83d29","s_config()":"088070f5","s_currentSubNonce()":"9d40a6fd","s_totalBalance()":"86fe91c7","s_totalNativeBalance()":"18e3dd27","setConfig()":"8b673e7a","setLINKAndLINKNativeFeed(address,address)":"65982744","transferOwnership(address)":"f2fde38b","withdraw(address)":"51cff8d9","withdrawNative(address)":"2f622e6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPrice\",\"type\":\"uint96\"},{\"internalType\":\"int256\",\"name\":\"_weiPerUnitLink\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNative\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToTransferLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExtraArgsTag\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeFundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"nativePayment\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"onlyPremium\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountLink\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNativeBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNativeBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFundedWithNative\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_NATIVE_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"fundSubscriptionWithNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getActiveSubscriptionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"nativeBalance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"subOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_base_fee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_gas_price\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_wei_per_unit_link\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverNativeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct VRFV2PlusClient.RandomWordsRequest\",\"name\":\"_req\",\"type\":\"tuple\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_config\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"reentrancyLock\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeNativePPM\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkDiscountPPM\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"nativePremiumPercentage\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"linkPremiumPercentage\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentSubNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalNativeBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkNativeFeed\",\"type\":\"address\"}],\"name\":\"setLINKAndLINKNativeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint256)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint256,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription with LINK, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sureto send Native with the call, for example:COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint256,uint256)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"fundSubscriptionWithNative(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"}},\"getActiveSubscriptionIds(uint256,uint256)\":{\"details\":\"the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, oneshould consider keeping the blockheight constant to ensure a holistic picture of the contract state\",\"params\":{\"maxCount\":\"maximum number of subscriptions to return, 0 to return all\",\"startIndex\":\"index of the subscription to start from\"}},\"getSubscription(uint256)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"nativeBalance\":\"- native balance of the subscription in wei.\",\"reqCount\":\"- Requests count of subscription.\",\"subOwner\":\"- owner of the subscription.\"}},\"ownerCancelSubscription(uint256)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"recoverNativeFunds(address)\":{\"params\":{\"to\":\"address to send native to\"}},\"removeConsumer(uint256,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setLINKAndLINKNativeFeed(address,address)\":{\"params\":{\"link\":\"- address of link token\",\"linkNativeFeed\":\"address of the link native feed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint256)\":{\"notice\":\"Accept subscription owner transfer.\"},\"addConsumer(uint256,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint256,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint256,uint256)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"fundSubscriptionWithNative(uint256)\":{\"notice\":\"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0.\"},\"getActiveSubscriptionIds(uint256,uint256)\":{\"notice\":\"Paginate through all active VRF subscriptions.\"},\"getSubscription(uint256)\":{\"notice\":\"Get a VRF subscription.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint256)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"recoverNativeFunds(address)\":{\"notice\":\"Recover native sent with transfer/call/send instead of fundSubscription.\"},\"removeConsumer(uint256,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestSubscriptionOwnerTransfer(uint256,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setConfig()\":{\"notice\":\"Sets the configuration of the vrfv2 mock coordinator\"},\"setLINKAndLINKNativeFeed(address,address)\":{\"notice\":\"set the LINK token contract and link native feed to be used by this coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":\"VRFCoordinatorV2_5Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  function _requireSufficientBalance(bool condition) internal pure {\\n    if (!condition) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function _requireValidSubscription(address subOwner) internal pure {\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n  }\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    _requireSufficientBalance(amount > 0);\\n    s_withdrawableTokens = 0;\\n    s_totalBalance -= amount;\\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    uint96 amount = s_withdrawableNative;\\n    _requireSufficientBalance(amount > 0);\\n    // Prevent re-entrancy by updating state before transfer.\\n    s_withdrawableNative = 0;\\n    s_totalNativeBalance -= amount;\\n    _mustSendNative(recipient, amount);\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(oldOwner);\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    _mustSendNative(to, uint256(nativeBalance));\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n\\n  function _mustSendNative(address to, uint256 amount) internal {\\n    (bool success, ) = to.call{value: amount}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3687ca9adb25fa3b7645a1f7840e73f8ca3d87dd5f19ebc93cea76db5866717e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2_5.\\npragma solidity ^0.8.19;\\n\\n// solhint-disable-next-line no-unused-import\\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \\\"../dev/interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"../dev/libraries/VRFV2PlusClient.sol\\\";\\nimport {SubscriptionAPI} from \\\"../dev/SubscriptionAPI.sol\\\";\\nimport {VRFConsumerBaseV2Plus} from \\\"../dev/VRFConsumerBaseV2Plus.sol\\\";\\n\\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\\n  uint96 public immutable i_base_fee;\\n  uint96 public immutable i_gas_price;\\n  int256 public immutable i_wei_per_unit_link;\\n\\n  error InvalidRequest();\\n  error InvalidRandomWords();\\n  error InvalidExtraArgsTag();\\n  error NotImplemented();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint256 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    bytes extraArgs,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(\\n    uint256 indexed requestId,\\n    uint256 outputSeed,\\n    uint256 indexed subId,\\n    uint96 payment,\\n    bool nativePayment,\\n    bool success,\\n    bool onlyPremium\\n  );\\n  event ConfigSet();\\n\\n  uint64 internal s_currentSubId;\\n  uint256 internal s_nextRequestId = 1;\\n  uint256 internal s_nextPreSeed = 100;\\n\\n  struct Request {\\n    uint256 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\\n    i_base_fee = _baseFee;\\n    i_gas_price = _gasPrice;\\n    i_wei_per_unit_link = _weiPerUnitLink;\\n    setConfig();\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 mock coordinator\\n   */\\n  function setConfig() public onlyOwner {\\n    s_config = Config({\\n      minimumRequestConfirmations: 0,\\n      maxGasLimit: 0,\\n      stalenessSeconds: 0,\\n      gasAfterPaymentCalculation: 0,\\n      reentrancyLock: false,\\n      fulfillmentFlatFeeNativePPM: 0,\\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\\n      nativePremiumPercentage: 0,\\n      linkPremiumPercentage: 0\\n    });\\n    emit ConfigSet();\\n  }\\n\\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\\n    return s_consumers[_consumer][_subId].active;\\n  }\\n\\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert InvalidRequest();\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2Plus v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    s_config.reentrancyLock = true;\\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n    s_config.reentrancyLock = false;\\n\\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\\n\\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\\n    if (!nativePayment) {\\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\\n    }\\n    uint96 payment = uint96(rawPayment);\\n\\n    _chargePayment(payment, nativePayment, req.subId);\\n\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\\n  }\\n\\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\\n    Subscription storage subcription = s_subscriptions[subId];\\n    if (nativePayment) {\\n      uint96 prevBal = subcription.nativeBalance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.nativeBalance = prevBal - payment;\\n      s_withdrawableNative += payment;\\n    } else {\\n      uint96 prevBal = subcription.balance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.balance = prevBal - payment;\\n      s_withdrawableTokens += payment;\\n    }\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint256 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += uint96(_amount);\\n    s_totalBalance += uint96(_amount);\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  /// @dev Convert the extra args bytes into a struct\\n  /// @param extraArgs The extra args bytes\\n  /// @return The extra args struct\\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\\n    if (extraArgs.length == 0) {\\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\\n    }\\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\\n  }\\n\\n  function requestRandomWords(\\n    VRFV2PlusClient.RandomWordsRequest calldata _req\\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\\n    uint256 subId = _req.subId;\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\\n    s_requests[requestId] = Request({\\n      subId: _req.subId,\\n      callbackGasLimit: _req.callbackGasLimit,\\n      numWords: _req.numWords,\\n      extraArgs: _req.extraArgs\\n    });\\n\\n    emit RandomWordsRequested(\\n      _req.keyHash,\\n      requestId,\\n      preSeed,\\n      _req.subId,\\n      _req.requestConfirmations,\\n      _req.callbackGasLimit,\\n      _req.numWords,\\n      extraArgsBytes,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function removeConsumer(\\n    uint256 _subId,\\n    address _consumer\\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\\n    if (!s_consumers[_consumer][_subId].active) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\\n    uint256 lastConsumerIndex = consumers.length - 1;\\n    for (uint256 i = 0; i < consumers.length; ++i) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[lastConsumerIndex];\\n        s_subscriptionConfigs[_subId].consumers[i] = last;\\n        s_subscriptionConfigs[_subId].consumers.pop();\\n        break;\\n      }\\n    }\\n    s_consumers[_consumer][_subId].active = false;\\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\\n\\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\\n  }\\n\\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\\n    revert NotImplemented();\\n  }\\n}\\n\",\"keccak256\":\"0x5d27319ad572630b7078be005a9dee4418ac60b7d2fe9cbe40b510830cb4d1cf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1012,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"LINK","offset":0,"slot":"2","type":"t_contract(LinkTokenInterface)371"},{"astId":1016,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"LINK_NATIVE_FEED","offset":0,"slot":"3","type":"t_contract(AggregatorV3Interface)248"},{"astId":1102,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage))"},{"astId":1107,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subscriptionConfigs","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(SubscriptionConfig)1088_storage)"},{"astId":1112,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subscriptions","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Subscription)1080_storage)"},{"astId":1114,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_currentSubNonce","offset":0,"slot":"7","type":"t_uint64"},{"astId":1117,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_subIds","offset":0,"slot":"8","type":"t_struct(UintSet)854_storage"},{"astId":1119,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_totalBalance","offset":0,"slot":"10","type":"t_uint96"},{"astId":1121,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_totalNativeBalance","offset":12,"slot":"10","type":"t_uint96"},{"astId":1123,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_withdrawableTokens","offset":0,"slot":"11","type":"t_uint96"},{"astId":1125,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_withdrawableNative","offset":12,"slot":"11","type":"t_uint96"},{"astId":1207,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_config","offset":0,"slot":"12","type":"t_struct(Config)1204_storage"},{"astId":2694,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_currentSubId","offset":0,"slot":"13","type":"t_uint64"},{"astId":2697,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_nextRequestId","offset":0,"slot":"14","type":"t_uint256"},{"astId":2700,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_nextPreSeed","offset":0,"slot":"15","type":"t_uint256"},{"astId":2714,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"s_requests","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_struct(Request)2709_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)248":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(LinkTokenInterface)371":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct SubscriptionAPI.ConsumerConfig))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage)"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ConsumerConfig)1095_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.ConsumerConfig)","numberOfBytes":"32","value":"t_struct(ConsumerConfig)1095_storage"},"t_mapping(t_uint256,t_struct(Request)2709_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2_5Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)2709_storage"},"t_mapping(t_uint256,t_struct(Subscription)1080_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)1080_storage"},"t_mapping(t_uint256,t_struct(SubscriptionConfig)1088_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SubscriptionAPI.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)1088_storage"},"t_struct(Config)1204_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Config","members":[{"astId":1187,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":1189,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":1191,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":1193,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":1195,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"},{"astId":1197,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"fulfillmentFlatFeeNativePPM","offset":15,"slot":"0","type":"t_uint32"},{"astId":1199,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"fulfillmentFlatFeeLinkDiscountPPM","offset":19,"slot":"0","type":"t_uint32"},{"astId":1201,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nativePremiumPercentage","offset":23,"slot":"0","type":"t_uint8"},{"astId":1203,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"linkPremiumPercentage","offset":24,"slot":"0","type":"t_uint8"}],"numberOfBytes":"32"},"t_struct(ConsumerConfig)1095_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.ConsumerConfig","members":[{"astId":1090,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"active","offset":0,"slot":"0","type":"t_bool"},{"astId":1092,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nonce","offset":1,"slot":"0","type":"t_uint64"},{"astId":1094,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"pendingReqCount","offset":9,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(Request)2709_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2_5Mock.Request","members":[{"astId":2702,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"subId","offset":0,"slot":"0","type":"t_uint256"},{"astId":2704,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"callbackGasLimit","offset":0,"slot":"1","type":"t_uint32"},{"astId":2706,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"numWords","offset":4,"slot":"1","type":"t_uint32"},{"astId":2708,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"extraArgs","offset":0,"slot":"2","type":"t_bytes_storage"}],"numberOfBytes":"96"},"t_struct(Set)382_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":377,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":381,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(Subscription)1080_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.Subscription","members":[{"astId":1075,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":1077,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"nativeBalance","offset":12,"slot":"0","type":"t_uint96"},{"astId":1079,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"reqCount","offset":24,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)1088_storage":{"encoding":"inplace","label":"struct SubscriptionAPI.SubscriptionConfig","members":[{"astId":1082,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":1084,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":1087,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_struct(UintSet)854_storage":{"encoding":"inplace","label":"struct EnumerableSet.UintSet","members":[{"astId":853,"contract":"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol:VRFCoordinatorV2_5Mock","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)382_storage"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint256)":{"notice":"Accept subscription owner transfer."},"addConsumer(uint256,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint256,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"notice":"fulfillRandomWordsWithOverride allows the user to pass in their own random words."},"fundSubscription(uint256,uint256)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"fundSubscriptionWithNative(uint256)":{"notice":"Fund a subscription with native.This method expects msg.value to be greater than or equal to 0."},"getActiveSubscriptionIds(uint256,uint256)":{"notice":"Paginate through all active VRF subscriptions."},"getSubscription(uint256)":{"notice":"Get a VRF subscription."},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint256)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"recoverNativeFunds(address)":{"notice":"Recover native sent with transfer/call/send instead of fundSubscription."},"removeConsumer(uint256,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestSubscriptionOwnerTransfer(uint256,address)":{"notice":"Request subscription owner transfer."},"setConfig()":{"notice":"Sets the configuration of the vrfv2 mock coordinator"},"setLINKAndLINKNativeFeed(address,address)":{"notice":"set the LINK token contract and link native feed to be used by this coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2_5","type":"address"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint256","name":"subId","type":"uint256"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"coordinator","type":"address"}],"name":"OnlyOwnerOrCoordinator","type":"error"},{"inputs":[],"name":"Raffle__NOTOpen","type":"error"},{"inputs":[],"name":"Raffle__NotEnoughETHEntered","type":"error"},{"inputs":[],"name":"Raffle__TransferFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"numPlayers","type":"uint256"},{"internalType":"uint256","name":"raffleState","type":"uint256"}],"name":"Raffle__UpkeepNotNeeded","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"vrfCoordinator","type":"address"}],"name":"CoordinatorSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffleWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEntranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumberOfPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffleState","outputs":[{"internalType":"enum Raffle.RaffleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"s_vrfCoordinator","outputs":[{"internalType":"contract IVRFCoordinatorV2Plus","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"}],"name":"setCoordinator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2359":{"entryPoint":null,"id":2359,"parameterSlots":1,"returnSlots":0},"@_3577":{"entryPoint":null,"id":3577,"parameterSlots":6,"returnSlots":0},"@_38":{"entryPoint":null,"id":38,"parameterSlots":1,"returnSlots":0},"@_96":{"entryPoint":null,"id":96,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_180":{"entryPoint":652,"id":180,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory":{"entryPoint":1244,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":1458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1658,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":992,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1120,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":960,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1061,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1179,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":1531,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":955,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":1417,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1578,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1012,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1130,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1071,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1195,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5386:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"759:80:17","statements":[{"nodeType":"YulAssignment","src":"769:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:17"},"nodeType":"YulFunctionCall","src":"778:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:17"},"nodeType":"YulFunctionCall","src":"800:33:17"},"nodeType":"YulExpressionStatement","src":"800:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:17","type":""}],"src":"696:143:17"},{"body":{"nodeType":"YulBlock","src":"890:32:17","statements":[{"nodeType":"YulAssignment","src":"900:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:17","type":""}],"src":"845:77:17"},{"body":{"nodeType":"YulBlock","src":"971:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:17"},"nodeType":"YulFunctionCall","src":"1030:12:17"},"nodeType":"YulExpressionStatement","src":"1030:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1001:17:17"},"nodeType":"YulFunctionCall","src":"1001:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:17"},"nodeType":"YulFunctionCall","src":"991:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:17"},"nodeType":"YulFunctionCall","src":"984:43:17"},"nodeType":"YulIf","src":"981:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:17","type":""}],"src":"928:122:17"},{"body":{"nodeType":"YulBlock","src":"1119:80:17","statements":[{"nodeType":"YulAssignment","src":"1129:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:17"},"nodeType":"YulFunctionCall","src":"1138:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1160:26:17"},"nodeType":"YulFunctionCall","src":"1160:33:17"},"nodeType":"YulExpressionStatement","src":"1160:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:17","type":""}],"src":"1056:143:17"},{"body":{"nodeType":"YulBlock","src":"1250:32:17","statements":[{"nodeType":"YulAssignment","src":"1260:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1271:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1260:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1242:7:17","type":""}],"src":"1205:77:17"},{"body":{"nodeType":"YulBlock","src":"1331:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:17"},"nodeType":"YulFunctionCall","src":"1390:12:17"},"nodeType":"YulExpressionStatement","src":"1390:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1354:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1379:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1361:17:17"},"nodeType":"YulFunctionCall","src":"1361:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1351:2:17"},"nodeType":"YulFunctionCall","src":"1351:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:17"},"nodeType":"YulFunctionCall","src":"1344:43:17"},"nodeType":"YulIf","src":"1341:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:17","type":""}],"src":"1288:122:17"},{"body":{"nodeType":"YulBlock","src":"1479:80:17","statements":[{"nodeType":"YulAssignment","src":"1489:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:17"},"nodeType":"YulFunctionCall","src":"1498:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1520:26:17"},"nodeType":"YulFunctionCall","src":"1520:33:17"},"nodeType":"YulExpressionStatement","src":"1520:33:17"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1465:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1473:5:17","type":""}],"src":"1416:143:17"},{"body":{"nodeType":"YulBlock","src":"1609:49:17","statements":[{"nodeType":"YulAssignment","src":"1619:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1634:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1641:10:17","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1630:3:17"},"nodeType":"YulFunctionCall","src":"1630:22:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1619:7:17"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1591:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1601:7:17","type":""}],"src":"1565:93:17"},{"body":{"nodeType":"YulBlock","src":"1706:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"1762:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1774:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:17"},"nodeType":"YulFunctionCall","src":"1764:12:17"},"nodeType":"YulExpressionStatement","src":"1764:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1729:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1753:5:17"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1736:16:17"},"nodeType":"YulFunctionCall","src":"1736:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1726:2:17"},"nodeType":"YulFunctionCall","src":"1726:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1719:6:17"},"nodeType":"YulFunctionCall","src":"1719:42:17"},"nodeType":"YulIf","src":"1716:62:17"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1699:5:17","type":""}],"src":"1664:120:17"},{"body":{"nodeType":"YulBlock","src":"1852:79:17","statements":[{"nodeType":"YulAssignment","src":"1862:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1877:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1871:5:17"},"nodeType":"YulFunctionCall","src":"1871:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1919:5:17"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1893:25:17"},"nodeType":"YulFunctionCall","src":"1893:32:17"},"nodeType":"YulExpressionStatement","src":"1893:32:17"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1830:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1838:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1846:5:17","type":""}],"src":"1790:141:17"},{"body":{"nodeType":"YulBlock","src":"2098:971:17","statements":[{"body":{"nodeType":"YulBlock","src":"2145:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2147:77:17"},"nodeType":"YulFunctionCall","src":"2147:79:17"},"nodeType":"YulExpressionStatement","src":"2147:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2119:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2128:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2115:3:17"},"nodeType":"YulFunctionCall","src":"2115:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2140:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2111:3:17"},"nodeType":"YulFunctionCall","src":"2111:33:17"},"nodeType":"YulIf","src":"2108:120:17"},{"nodeType":"YulBlock","src":"2238:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2253:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2267:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2257:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2282:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2328:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2339:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:17"},"nodeType":"YulFunctionCall","src":"2324:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2348:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2292:31:17"},"nodeType":"YulFunctionCall","src":"2292:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2282:6:17"}]}]},{"nodeType":"YulBlock","src":"2376:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2391:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2405:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2395:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2421:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2467:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2463:3:17"},"nodeType":"YulFunctionCall","src":"2463:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2487:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2431:31:17"},"nodeType":"YulFunctionCall","src":"2431:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2421:6:17"}]}]},{"nodeType":"YulBlock","src":"2515:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2530:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2544:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2534:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2560:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2606:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2617:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:17"},"nodeType":"YulFunctionCall","src":"2602:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2626:7:17"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2570:31:17"},"nodeType":"YulFunctionCall","src":"2570:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2560:6:17"}]}]},{"nodeType":"YulBlock","src":"2654:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2669:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2683:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2673:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2699:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2745:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2756:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2741:3:17"},"nodeType":"YulFunctionCall","src":"2741:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2765:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2709:31:17"},"nodeType":"YulFunctionCall","src":"2709:64:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2699:6:17"}]}]},{"nodeType":"YulBlock","src":"2793:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2808:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2822:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2812:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2839:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2884:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2895:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2880:3:17"},"nodeType":"YulFunctionCall","src":"2880:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2904:7:17"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"2849:30:17"},"nodeType":"YulFunctionCall","src":"2849:63:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2839:6:17"}]}]},{"nodeType":"YulBlock","src":"2932:130:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2947:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2961:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2951:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2978:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3024:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3035:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3020:3:17"},"nodeType":"YulFunctionCall","src":"3020:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3044:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2988:31:17"},"nodeType":"YulFunctionCall","src":"2988:64:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2978:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2028:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2039:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2051:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2059:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2067:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2075:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2083:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2091:6:17","type":""}],"src":"1937:1132:17"},{"body":{"nodeType":"YulBlock","src":"3171:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3188:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"3193:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3181:6:17"},"nodeType":"YulFunctionCall","src":"3181:19:17"},"nodeType":"YulExpressionStatement","src":"3181:19:17"},{"nodeType":"YulAssignment","src":"3209:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3228:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3233:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3224:3:17"},"nodeType":"YulFunctionCall","src":"3224:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3209:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3143:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"3148:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3159:11:17","type":""}],"src":"3075:169:17"},{"body":{"nodeType":"YulBlock","src":"3356:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3378:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3386:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3374:3:17"},"nodeType":"YulFunctionCall","src":"3374:14:17"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"3390:26:17","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3367:6:17"},"nodeType":"YulFunctionCall","src":"3367:50:17"},"nodeType":"YulExpressionStatement","src":"3367:50:17"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3348:6:17","type":""}],"src":"3250:174:17"},{"body":{"nodeType":"YulBlock","src":"3576:220:17","statements":[{"nodeType":"YulAssignment","src":"3586:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3652:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3657:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3593:58:17"},"nodeType":"YulFunctionCall","src":"3593:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3586:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3758:3:17"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"3669:88:17"},"nodeType":"YulFunctionCall","src":"3669:93:17"},"nodeType":"YulExpressionStatement","src":"3669:93:17"},{"nodeType":"YulAssignment","src":"3771:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3782:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3787:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:17"},"nodeType":"YulFunctionCall","src":"3778:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3771:3:17"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3564:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3572:3:17","type":""}],"src":"3430:366:17"},{"body":{"nodeType":"YulBlock","src":"3973:248:17","statements":[{"nodeType":"YulAssignment","src":"3983:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3995:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4006:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:17"},"nodeType":"YulFunctionCall","src":"3991:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3983:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4030:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4041:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4026:3:17"},"nodeType":"YulFunctionCall","src":"4026:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4049:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4055:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4045:3:17"},"nodeType":"YulFunctionCall","src":"4045:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4019:6:17"},"nodeType":"YulFunctionCall","src":"4019:47:17"},"nodeType":"YulExpressionStatement","src":"4019:47:17"},{"nodeType":"YulAssignment","src":"4075:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4209:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4083:124:17"},"nodeType":"YulFunctionCall","src":"4083:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4075:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3953:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3968:4:17","type":""}],"src":"3802:419:17"},{"body":{"nodeType":"YulBlock","src":"4255:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4275:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:17"},"nodeType":"YulFunctionCall","src":"4265:88:17"},"nodeType":"YulExpressionStatement","src":"4265:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4372:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4362:6:17"},"nodeType":"YulFunctionCall","src":"4362:15:17"},"nodeType":"YulExpressionStatement","src":"4362:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4393:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4396:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4386:6:17"},"nodeType":"YulFunctionCall","src":"4386:15:17"},"nodeType":"YulExpressionStatement","src":"4386:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"4227:180:17"},{"body":{"nodeType":"YulBlock","src":"4519:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4541:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4549:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:17"},"nodeType":"YulFunctionCall","src":"4537:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"4553:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4530:6:17"},"nodeType":"YulFunctionCall","src":"4530:49:17"},"nodeType":"YulExpressionStatement","src":"4530:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4511:6:17","type":""}],"src":"4413:173:17"},{"body":{"nodeType":"YulBlock","src":"4738:220:17","statements":[{"nodeType":"YulAssignment","src":"4748:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4814:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4819:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4755:58:17"},"nodeType":"YulFunctionCall","src":"4755:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4748:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4920:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4831:88:17"},"nodeType":"YulFunctionCall","src":"4831:93:17"},"nodeType":"YulExpressionStatement","src":"4831:93:17"},{"nodeType":"YulAssignment","src":"4933:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4944:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4940:3:17"},"nodeType":"YulFunctionCall","src":"4940:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4933:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4726:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4734:3:17","type":""}],"src":"4592:366:17"},{"body":{"nodeType":"YulBlock","src":"5135:248:17","statements":[{"nodeType":"YulAssignment","src":"5145:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5157:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5168:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5153:3:17"},"nodeType":"YulFunctionCall","src":"5153:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5145:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5192:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5203:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5188:3:17"},"nodeType":"YulFunctionCall","src":"5188:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5211:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5217:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5207:3:17"},"nodeType":"YulFunctionCall","src":"5207:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5181:6:17"},"nodeType":"YulFunctionCall","src":"5181:47:17"},"nodeType":"YulExpressionStatement","src":"5181:47:17"},{"nodeType":"YulAssignment","src":"5237:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5371:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5245:124:17"},"nodeType":"YulFunctionCall","src":"5245:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5237:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5115:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5130:4:17","type":""}],"src":"4964:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b50604051620025e4380380620025e48339818101604052810190620000389190620004dc565b85338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a590620005d9565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001355762000134816200028c60201b60201c565b5b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200019f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505084608081815250508573ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508360e081815250508261010081815250508163ffffffff1660c08163ffffffff16815250506000600460146101000a81548160ff021916908360018111156200026b576200026a620005fb565b5b0217905550426005819055508061012081815250505050505050506200069c565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002f4906200067a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ed82620003c0565b9050919050565b620003ff81620003e0565b81146200040b57600080fd5b50565b6000815190506200041f81620003f4565b92915050565b6000819050919050565b6200043a8162000425565b81146200044657600080fd5b50565b6000815190506200045a816200042f565b92915050565b6000819050919050565b620004758162000460565b81146200048157600080fd5b50565b60008151905062000495816200046a565b92915050565b600063ffffffff82169050919050565b620004b6816200049b565b8114620004c257600080fd5b50565b600081519050620004d681620004ab565b92915050565b60008060008060008060c08789031215620004fc57620004fb620003bb565b5b60006200050c89828a016200040e565b96505060206200051f89828a0162000449565b95505060406200053289828a0162000484565b94505060606200054589828a0162000449565b93505060806200055889828a01620004c5565b92505060a06200056b89828a0162000449565b9150509295509295509295565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620005c160188362000578565b9150620005ce8262000589565b602082019050919050565b60006020820190508181036000830152620005f481620005b2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200066260178362000578565b91506200066f826200062a565b602082019050919050565b60006020820190508181036000830152620006958162000653565b9050919050565b60805160a05160c05160e0516101005161012051611eea620006fa600039600081816109040152610d860152600061079f01526000610779015260006107d00152600061073201526000818161040001526105030152611eea6000f3fe6080604052600436106101095760003560e01c80636e04ff0d1161009557806391ad27b41161006457806391ad27b4146103155780639eccacf614610340578063e55ae4e81461036b578063f2fde38b146103a8578063fd6673f5146103d157610109565b80636e04ff0d1461026c57806379ba5097146102aa5780638da5cb5b146102c15780638ea98117146102ec57610109565b8063320229eb116100dc578063320229eb146101975780634585e33b146101c2578063473f1ddc146101eb57806353a2c19a146102165780635f1b0fd81461024157610109565b806309bc33a71461010e578063115cbaf5146101395780631fe543e3146101645780632cfcc5391461018d575b600080fd5b34801561011a57600080fd5b506101236103fc565b6040516101309190611380565b60405180910390f35b34801561014557600080fd5b5061014e610424565b60405161015b9190611412565b60405180910390f35b34801561017057600080fd5b5061018b600480360381019061018691906114d2565b61043b565b005b610195610501565b005b3480156101a357600080fd5b506101ac610670565b6040516101b99190611380565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190611588565b61067a565b005b3480156101f757600080fd5b506102006108bc565b60405161020d9190611616565b60405180910390f35b34801561022257600080fd5b5061022b6108e6565b604051610238919061164e565b60405180910390f35b34801561024d57600080fd5b506102566108ef565b6040516102639190611380565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e91906117aa565b6108fc565b6040516102a192919061188d565b60405180910390f35b3480156102b657600080fd5b506102bf6109e3565b005b3480156102cd57600080fd5b506102d6610b78565b6040516102e39190611616565b60405180910390f35b3480156102f857600080fd5b50610313600480360381019061030e91906118e9565b610ba1565b005b34801561032157600080fd5b5061032a610d82565b6040516103379190611380565b60405180910390f35b34801561034c57600080fd5b50610355610daa565b6040516103629190611975565b60405180910390f35b34801561037757600080fd5b50610392600480360381019061038d9190611990565b610dd0565b60405161039f9190611616565b60405180910390f35b3480156103b457600080fd5b506103cf60048036038101906103ca91906118e9565b610e18565b005b3480156103dd57600080fd5b506103e6610e2c565b6040516103f39190611380565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600460149054906101000a900460ff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f15733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016104e89291906119bd565b60405180910390fd5b6104fc838383610e39565b505050565b7f000000000000000000000000000000000000000000000000000000000000000034101561055b576040517fbd4e069500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181111561056f5761056e61139b565b5b600460149054906101000a900460ff1660018111156105915761059061139b565b5b146105c8576040517f7459aab500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b6000600554905090565b6000610694604051806020016040528060008152506108fc565b509050806107035747600380549050600460149054906101000a900460ff1660018111156106c5576106c461139b565b5b6040517f584327aa0000000000000000000000000000000000000000000000000000000081526004016106fa939291906119e6565b60405180910390fd5b6001600460146101000a81548160ff021916908360018111156107295761072861139b565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639b1c385e6040518060c001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000008152602001600361ffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001600161ffff1663ffffffff16815260200161082560405180602001604052806000151581525061106c565b8152506040518263ffffffff1660e01b81526004016108449190611b46565b6020604051808303816000875af1158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190611b7d565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001905090565b6000600361ffff16905090565b6000606060007f0000000000000000000000000000000000000000000000000000000000000000600554426109319190611bd9565b11905060008060038054905011905060008047119050600080600181111561095c5761095b61139b565b5b600460149054906101000a900460ff16600181111561097e5761097d61139b565b5b14905083801561098b5750825b80156109945750815b801561099d5750805b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a90611c6a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ba9610b78565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610c325750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610ca15733610c40610b78565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c1000000000000000000000000000000000000000000000000000000008152600401610c9893929190611c8a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d07576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be681604051610d779190611616565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060038281548110610de657610de5611cc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610e20611104565b610e2981611194565b50565b6000600380549050905090565b600060038054905083836000818110610e5557610e54611cc1565b5b90506020020135610e669190611d1f565b9050600060038281548110610e7e57610e7d611cc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460146101000a81548160ff02191690836001811115610ed157610ed061139b565b5b021790555042600581905550600067ffffffffffffffff811115610ef857610ef761167f565b5b604051908082528060200260200182016040528015610f265781602001602082028036833780820191505090505b5060039080519060200190610f3c9291906112c0565b5080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610fa490611d81565b60006040518083038185875af1925050503d8060008114610fe1576040519150601f19603f3d011682016040523d82523d6000602084013e610fe6565b606091505b5050905080611021576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a2505050505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa826040516024016110a09190611dc1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118990611e28565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f990611e94565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b828054828255906000526020600020908101928215611339579160200282015b828111156113385782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906112e0565b5b509050611346919061134a565b5090565b5b8082111561136357600081600090555060010161134b565b5090565b6000819050919050565b61137a81611367565b82525050565b60006020820190506113956000830184611371565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106113db576113da61139b565b5b50565b60008190506113ec826113ca565b919050565b60006113fc826113de565b9050919050565b61140c816113f1565b82525050565b60006020820190506114276000830184611403565b92915050565b6000604051905090565b600080fd5b600080fd5b61144a81611367565b811461145557600080fd5b50565b60008135905061146781611441565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114925761149161146d565b5b8235905067ffffffffffffffff8111156114af576114ae611472565b5b6020830191508360208202830111156114cb576114ca611477565b5b9250929050565b6000806000604084860312156114eb576114ea611437565b5b60006114f986828701611458565b935050602084013567ffffffffffffffff81111561151a5761151961143c565b5b6115268682870161147c565b92509250509250925092565b60008083601f8401126115485761154761146d565b5b8235905067ffffffffffffffff81111561156557611564611472565b5b60208301915083600182028301111561158157611580611477565b5b9250929050565b6000806020838503121561159f5761159e611437565b5b600083013567ffffffffffffffff8111156115bd576115bc61143c565b5b6115c985828601611532565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611600826115d5565b9050919050565b611610816115f5565b82525050565b600060208201905061162b6000830184611607565b92915050565b600061ffff82169050919050565b61164881611631565b82525050565b6000602082019050611663600083018461163f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116b78261166e565b810181811067ffffffffffffffff821117156116d6576116d561167f565b5b80604052505050565b60006116e961142d565b90506116f582826116ae565b919050565b600067ffffffffffffffff8211156117155761171461167f565b5b61171e8261166e565b9050602081019050919050565b82818337600083830152505050565b600061174d611748846116fa565b6116df565b90508281526020810184848401111561176957611768611669565b5b61177484828561172b565b509392505050565b600082601f8301126117915761179061146d565b5b81356117a184826020860161173a565b91505092915050565b6000602082840312156117c0576117bf611437565b5b600082013567ffffffffffffffff8111156117de576117dd61143c565b5b6117ea8482850161177c565b91505092915050565b60008115159050919050565b611808816117f3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561184857808201518184015260208101905061182d565b60008484015250505050565b600061185f8261180e565b6118698185611819565b935061187981856020860161182a565b6118828161166e565b840191505092915050565b60006040820190506118a260008301856117ff565b81810360208301526118b48184611854565b90509392505050565b6118c6816115f5565b81146118d157600080fd5b50565b6000813590506118e3816118bd565b92915050565b6000602082840312156118ff576118fe611437565b5b600061190d848285016118d4565b91505092915050565b6000819050919050565b600061193b611936611931846115d5565b611916565b6115d5565b9050919050565b600061194d82611920565b9050919050565b600061195f82611942565b9050919050565b61196f81611954565b82525050565b600060208201905061198a6000830184611966565b92915050565b6000602082840312156119a6576119a5611437565b5b60006119b484828501611458565b91505092915050565b60006040820190506119d26000830185611607565b6119df6020830184611607565b9392505050565b60006060820190506119fb6000830186611371565b611a086020830185611371565b611a156040830184611371565b949350505050565b6000819050919050565b611a3081611a1d565b82525050565b611a3f81611367565b82525050565b611a4e81611631565b82525050565b600063ffffffff82169050919050565b611a6d81611a54565b82525050565b600082825260208201905092915050565b6000611a8f8261180e565b611a998185611a73565b9350611aa981856020860161182a565b611ab28161166e565b840191505092915050565b600060c083016000830151611ad56000860182611a27565b506020830151611ae86020860182611a36565b506040830151611afb6040860182611a45565b506060830151611b0e6060860182611a64565b506080830151611b216080860182611a64565b5060a083015184820360a0860152611b398282611a84565b9150508091505092915050565b60006020820190508181036000830152611b608184611abd565b905092915050565b600081519050611b7781611441565b92915050565b600060208284031215611b9357611b92611437565b5b6000611ba184828501611b68565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611be482611367565b9150611bef83611367565b9250828203905081811115611c0757611c06611baa565b5b92915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000611c54601683611c0d565b9150611c5f82611c1e565b602082019050919050565b60006020820190508181036000830152611c8381611c47565b9050919050565b6000606082019050611c9f6000830186611607565b611cac6020830185611607565b611cb96040830184611607565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d2a82611367565b9150611d3583611367565b925082611d4557611d44611cf0565b5b828206905092915050565b600081905092915050565b50565b6000611d6b600083611d50565b9150611d7682611d5b565b600082019050919050565b6000611d8c82611d5e565b9150819050919050565b611d9f816117f3565b82525050565b602082016000820151611dbb6000850182611d96565b50505050565b6000602082019050611dd66000830184611da5565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611e12601683611c0d565b9150611e1d82611ddc565b602082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611e7e601783611c0d565b9150611e8982611e48565b602082019050919050565b60006020820190508181036000830152611ead81611e71565b905091905056fea2646970667358221220cbf97f5d9f9abde07ed8cb086611fa8305605bc0325adf6ff1db2a46faf009a064736f6c63430008130033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25E4 CODESIZE SUB DUP1 PUSH3 0x25E4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x4DC JUMP JUMPDEST DUP6 CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA5 SWAP1 PUSH3 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x135 JUMPI PUSH3 0x134 DUP2 PUSH3 0x28C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x19F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP5 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x5FB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x69C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2F4 SWAP1 PUSH3 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3ED DUP3 PUSH3 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3FF DUP2 PUSH3 0x3E0 JUMP JUMPDEST DUP2 EQ PUSH3 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x41F DUP2 PUSH3 0x3F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x43A DUP2 PUSH3 0x425 JUMP JUMPDEST DUP2 EQ PUSH3 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x45A DUP2 PUSH3 0x42F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x475 DUP2 PUSH3 0x460 JUMP JUMPDEST DUP2 EQ PUSH3 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x495 DUP2 PUSH3 0x46A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B6 DUP2 PUSH3 0x49B JUMP JUMPDEST DUP2 EQ PUSH3 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4D6 DUP2 PUSH3 0x4AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4FC JUMPI PUSH3 0x4FB PUSH3 0x3BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x50C DUP10 DUP3 DUP11 ADD PUSH3 0x40E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x51F DUP10 DUP3 DUP11 ADD PUSH3 0x449 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x532 DUP10 DUP3 DUP11 ADD PUSH3 0x484 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x545 DUP10 DUP3 DUP11 ADD PUSH3 0x449 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x558 DUP10 DUP3 DUP11 ADD PUSH3 0x4C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x56B DUP10 DUP3 DUP11 ADD PUSH3 0x449 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5C1 PUSH1 0x18 DUP4 PUSH3 0x578 JUMP JUMPDEST SWAP2 POP PUSH3 0x5CE DUP3 PUSH3 0x589 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5F4 DUP2 PUSH3 0x5B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x662 PUSH1 0x17 DUP4 PUSH3 0x578 JUMP JUMPDEST SWAP2 POP PUSH3 0x66F DUP3 PUSH3 0x62A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x695 DUP2 PUSH3 0x653 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1EEA PUSH3 0x6FA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x904 ADD MSTORE PUSH2 0xD86 ADD MSTORE PUSH1 0x0 PUSH2 0x79F ADD MSTORE PUSH1 0x0 PUSH2 0x779 ADD MSTORE PUSH1 0x0 PUSH2 0x7D0 ADD MSTORE PUSH1 0x0 PUSH2 0x732 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x400 ADD MSTORE PUSH2 0x503 ADD MSTORE PUSH2 0x1EEA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x3D1 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x2EC JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x320229EB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x241 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP3 SWAP2 SWAP1 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4F1 JUMPI CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH2 0xE39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD4E069500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x56F JUMPI PUSH2 0x56E PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x591 JUMPI PUSH2 0x590 PUSH2 0x139B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7459AAB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8FC JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x703 JUMPI SELFBALANCE PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6C5 JUMPI PUSH2 0x6C4 PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x584327AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x139B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9B1C385E PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH2 0xFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x825 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH2 0x106C JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x139B JUMP JUMPDEST JUMPDEST EQ SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x98B JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x994 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x99D JUMPI POP DUP1 JUMPDEST SWAP6 POP DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0xB78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC32 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCA1 JUMPI CALLER PUSH2 0xC40 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x61DB9C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE6 JUMPI PUSH2 0xDE5 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE20 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0xE29 DUP2 PUSH2 0x1194 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xED1 JUMPI PUSH2 0xED0 PUSH2 0x139B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF26 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xF3C SWAP3 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFA4 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x1DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F9 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1339 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1338 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x134B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x13DB JUMPI PUSH2 0x13DA PUSH2 0x139B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x13EC DUP3 PUSH2 0x13CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC DUP3 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x13F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1427 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144A DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP2 EQ PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1467 DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14AF JUMPI PUSH2 0x14AE PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x1477 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP7 DUP3 DUP8 ADD PUSH2 0x1458 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x151A JUMPI PUSH2 0x1519 PUSH2 0x143C JUMP JUMPDEST JUMPDEST PUSH2 0x1526 DUP7 DUP3 DUP8 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1548 JUMPI PUSH2 0x1547 PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1565 JUMPI PUSH2 0x1564 PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1580 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH2 0x159E PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15BD JUMPI PUSH2 0x15BC PUSH2 0x143C JUMP JUMPDEST JUMPDEST PUSH2 0x15C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 DUP3 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1648 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1663 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x163F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16B7 DUP3 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16D6 JUMPI PUSH2 0x16D5 PUSH2 0x167F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E9 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP PUSH2 0x16F5 DUP3 DUP3 PUSH2 0x16AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH2 0x171E DUP3 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174D PUSH2 0x1748 DUP5 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x1669 JUMP JUMPDEST JUMPDEST PUSH2 0x1774 DUP5 DUP3 DUP6 PUSH2 0x172B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1791 JUMPI PUSH2 0x1790 PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x173A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C0 JUMPI PUSH2 0x17BF PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x143C JUMP JUMPDEST JUMPDEST PUSH2 0x17EA DUP5 DUP3 DUP6 ADD PUSH2 0x177C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1808 DUP2 PUSH2 0x17F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1848 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x182D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x1869 DUP2 DUP6 PUSH2 0x1819 JUMP JUMPDEST SWAP4 POP PUSH2 0x1879 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x182A JUMP JUMPDEST PUSH2 0x1882 DUP2 PUSH2 0x166E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18A2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x18B4 DUP2 DUP5 PUSH2 0x1854 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 DUP2 PUSH2 0x15F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E3 DUP2 PUSH2 0x18BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FF JUMPI PUSH2 0x18FE PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190D DUP5 DUP3 DUP6 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193B PUSH2 0x1936 PUSH2 0x1931 DUP5 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D DUP3 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195F DUP3 PUSH2 0x1942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x1954 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x198A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x19DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19FB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x1A08 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x1A15 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1371 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A30 DUP2 PUSH2 0x1A1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A3F DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8F DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x1A99 DUP2 DUP6 PUSH2 0x1A73 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AA9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x182A JUMP JUMPDEST PUSH2 0x1AB2 DUP2 PUSH2 0x166E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1AD5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1A27 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1AE8 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1A36 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1AFB PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1A45 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1B0E PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1A64 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1B21 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1A64 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1B39 DUP3 DUP3 PUSH2 0x1A84 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B60 DUP2 DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B77 DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 DUP5 DUP3 DUP6 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BE4 DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEF DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C07 JUMPI PUSH2 0x1C06 PUSH2 0x1BAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 PUSH1 0x16 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5F DUP3 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C83 DUP2 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C9F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1CAC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1CB9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D2A DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D35 DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x1CF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x0 DUP4 PUSH2 0x1D50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP3 PUSH2 0x1D5E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x17F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1DBB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1D96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x16 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x17 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EAD DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xF9 PUSH32 0x5D9F9ABDE07ED8CB086611FA8305605BC0325ADF6FF1DB2A46FAF009A064736F PUSH13 0x63430008130033000000000000 ","sourceMap":"922:6306:15:-:0;;;2350:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2583:18;6254:10:9;355:8:1;373:1;618::2;598:22;;:8;:22;;;590:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;666:8;656:7;;:18;;;;;;;;;;;;;;;;;;708:1;684:26;;:12;:26;;;680:79;;720:32;739:12;720:18;;;:32;;:::i;:::-;680:79;481:282;;298:81:1;6303:1:9::1;6276:29;;:15;:29;;::::0;6272:70:::1;;6322:13;;;;;;;;;;;;;;6272:70;6388:15;6347:16;;:57;;;;;;;;;;;;;;;;;;6202:207:::0;2629:11:15::1;2613:27;;;;::::0;::::1;2692:18;2650:61;;;;;;;;::::0;::::1;2733:7;2721:19;;;;::::0;::::1;2769:5;2750:24;;;;::::0;::::1;2805:16;2784:37;;;;;;;;::::0;::::1;2847:16;2831:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2891:15;2873;:33;;;;2929:8;2916:21;;;;::::0;::::1;2350:610:::0;;;;;;922:6306;;1536:239:2;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:93::-;1601:7;1641:10;1634:5;1630:22;1619:33;;1565:93;;;:::o;1664:120::-;1736:23;1753:5;1736:23;:::i;:::-;1729:5;1726:34;1716:62;;1774:1;1771;1764:12;1716:62;1664:120;:::o;1790:141::-;1846:5;1877:6;1871:13;1862:22;;1893:32;1919:5;1893:32;:::i;:::-;1790:141;;;;:::o;1937:1132::-;2051:6;2059;2067;2075;2083;2091;2140:3;2128:9;2119:7;2115:23;2111:33;2108:120;;;2147:79;;:::i;:::-;2108:120;2267:1;2292:64;2348:7;2339:6;2328:9;2324:22;2292:64;:::i;:::-;2282:74;;2238:128;2405:2;2431:64;2487:7;2478:6;2467:9;2463:22;2431:64;:::i;:::-;2421:74;;2376:129;2544:2;2570:64;2626:7;2617:6;2606:9;2602:22;2570:64;:::i;:::-;2560:74;;2515:129;2683:2;2709:64;2765:7;2756:6;2745:9;2741:22;2709:64;:::i;:::-;2699:74;;2654:129;2822:3;2849:63;2904:7;2895:6;2884:9;2880:22;2849:63;:::i;:::-;2839:73;;2793:129;2961:3;2988:64;3044:7;3035:6;3024:9;3020:22;2988:64;:::i;:::-;2978:74;;2932:130;1937:1132;;;;;;;;:::o;3075:169::-;3159:11;3193:6;3188:3;3181:19;3233:4;3228:3;3224:14;3209:29;;3075:169;;;;:::o;3250:174::-;3390:26;3386:1;3378:6;3374:14;3367:50;3250:174;:::o;3430:366::-;3572:3;3593:67;3657:2;3652:3;3593:67;:::i;:::-;3586:74;;3669:93;3758:3;3669:93;:::i;:::-;3787:2;3782:3;3778:12;3771:19;;3430:366;;;:::o;3802:419::-;3968:4;4006:2;3995:9;3991:18;3983:26;;4055:9;4049:4;4045:20;4041:1;4030:9;4026:17;4019:47;4083:131;4209:4;4083:131;:::i;:::-;4075:139;;3802:419;;;:::o;4227:180::-;4275:77;4272:1;4265:88;4372:4;4369:1;4362:15;4396:4;4393:1;4386:15;4413:173;4553:25;4549:1;4541:6;4537:14;4530:49;4413:173;:::o;4592:366::-;4734:3;4755:67;4819:2;4814:3;4755:67;:::i;:::-;4748:74;;4831:93;4920:3;4831:93;:::i;:::-;4949:2;4944:3;4940:12;4933:19;;4592:366;;;:::o;4964:419::-;5130:4;5168:2;5157:9;5153:18;5145:26;;5217:9;5211:4;5207:20;5203:1;5192:9;5188:17;5181:47;5245:131;5371:4;5245:131;:::i;:::-;5237:139;;4964:419;;;:::o;922:6306:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_argsToBytes_2624":{"entryPoint":4204,"id":2624,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_180":{"entryPoint":4500,"id":180,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_193":{"entryPoint":4356,"id":193,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_146":{"entryPoint":2531,"id":146,"parameterSlots":0,"returnSlots":0},"@checkUpkeep_3675":{"entryPoint":2300,"id":3675,"parameterSlots":1,"returnSlots":2},"@enterRaffle_3614":{"entryPoint":1281,"id":3614,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_3807":{"entryPoint":3641,"id":3807,"parameterSlots":3,"returnSlots":0},"@getEntranceFee_3815":{"entryPoint":1020,"id":3815,"parameterSlots":0,"returnSlots":1},"@getInterval_3885":{"entryPoint":3458,"id":3885,"parameterSlots":0,"returnSlots":1},"@getLatestTimeStamp_3869":{"entryPoint":1648,"id":3869,"parameterSlots":0,"returnSlots":1},"@getNumWords_3852":{"entryPoint":2278,"id":3852,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayers_3861":{"entryPoint":3628,"id":3861,"parameterSlots":0,"returnSlots":1},"@getPlayer_3827":{"entryPoint":3536,"id":3827,"parameterSlots":1,"returnSlots":1},"@getRaffleState_3844":{"entryPoint":1060,"id":3844,"parameterSlots":0,"returnSlots":1},"@getRecentWinner_3835":{"entryPoint":2236,"id":3835,"parameterSlots":0,"returnSlots":1},"@getRequestConfirmations_3877":{"entryPoint":2287,"id":3877,"parameterSlots":0,"returnSlots":1},"@owner_156":{"entryPoint":2936,"id":156,"parameterSlots":0,"returnSlots":1},"@performUpkeep_3736":{"entryPoint":1658,"id":3736,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_2400":{"entryPoint":1083,"id":2400,"parameterSlots":3,"returnSlots":0},"@s_vrfCoordinator_2331":{"entryPoint":3498,"id":2331,"parameterSlots":0,"returnSlots":0},"@setCoordinator_2431":{"entryPoint":2977,"id":2431,"parameterSlots":1,"returnSlots":0},"@transferOwnership_110":{"entryPoint":3608,"id":110,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5946,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5426,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6377,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":5512,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":6058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":5330,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5639,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":7574,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6143,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":6695,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":6788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6228,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address_fromStack":{"entryPoint":6502,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_RaffleState_$3481_to_t_uint8_fromStack":{"entryPoint":5123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":7239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":7685,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":7793,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack":{"entryPoint":7589,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_RandomWordsRequest_$2609_memory_ptr_to_t_struct$_RandomWordsRequest_$2609_memory_ptr_fromStack":{"entryPoint":6845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16":{"entryPoint":6725,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":5695,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6710,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4977,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":6756,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":6589,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":7306,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6285,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2480__to_t_address__fromStack_reversed":{"entryPoint":6517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffleState_$3481__to_t_uint8__fromStack_reversed":{"entryPoint":5138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7828,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr__to_t_struct$_ExtraArgsV1_$2596_memory_ptr__fromStack_reversed":{"entryPoint":7617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_RandomWordsRequest_$2609_memory_ptr__to_t_struct$_RandomWordsRequest_$2609_memory_ptr__fromStack_reversed":{"entryPoint":6982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":5710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6630,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":5855,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5165,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":5882,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6158,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":6771,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6169,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7504,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7181,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7129,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5621,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6131,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6685,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RaffleState_$3481":{"entryPoint":5086,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":5681,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5589,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4967,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":6740,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address":{"entryPoint":6484,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RaffleState_$3481_to_t_uint8":{"entryPoint":5105,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6466,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6432,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5931,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6186,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5806,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6422,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7455,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7082,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7408,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5019,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7361,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5759,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5234,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5229,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5239,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5737,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5180,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5175,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5742,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":7198,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":7644,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":7515,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":7752,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RaffleState_$3481":{"entryPoint":5066,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6333,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5185,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22700:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:17","statements":[{"nodeType":"YulAssignment","src":"62:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:77:17"},{"body":{"nodeType":"YulBlock","src":"155:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:17"},"nodeType":"YulFunctionCall","src":"177:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:17"},"nodeType":"YulFunctionCall","src":"165:37:17"},"nodeType":"YulExpressionStatement","src":"165:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:17","type":""}],"src":"90:118:17"},{"body":{"nodeType":"YulBlock","src":"312:124:17","statements":[{"nodeType":"YulAssignment","src":"322:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:17"},"nodeType":"YulFunctionCall","src":"330:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:17"},"nodeType":"YulFunctionCall","src":"411:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:17"},"nodeType":"YulFunctionCall","src":"358:71:17"},"nodeType":"YulExpressionStatement","src":"358:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:17","type":""}],"src":"214:222:17"},{"body":{"nodeType":"YulBlock","src":"470:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"487:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"490:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"480:6:17"},"nodeType":"YulFunctionCall","src":"480:88:17"},"nodeType":"YulExpressionStatement","src":"480:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"584:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"587:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"577:6:17"},"nodeType":"YulFunctionCall","src":"577:15:17"},"nodeType":"YulExpressionStatement","src":"577:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"608:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"611:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"601:6:17"},"nodeType":"YulFunctionCall","src":"601:15:17"},"nodeType":"YulExpressionStatement","src":"601:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"442:180:17"},{"body":{"nodeType":"YulBlock","src":"687:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"721:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"723:16:17"},"nodeType":"YulFunctionCall","src":"723:18:17"},"nodeType":"YulExpressionStatement","src":"723:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"710:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"717:1:17","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"707:2:17"},"nodeType":"YulFunctionCall","src":"707:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"700:6:17"},"nodeType":"YulFunctionCall","src":"700:20:17"},"nodeType":"YulIf","src":"697:46:17"}]},"name":"validator_assert_t_enum$_RaffleState_$3481","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"680:5:17","type":""}],"src":"628:121:17"},{"body":{"nodeType":"YulBlock","src":"816:82:17","statements":[{"nodeType":"YulAssignment","src":"826:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"837:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"826:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"886:5:17"}],"functionName":{"name":"validator_assert_t_enum$_RaffleState_$3481","nodeType":"YulIdentifier","src":"843:42:17"},"nodeType":"YulFunctionCall","src":"843:49:17"},"nodeType":"YulExpressionStatement","src":"843:49:17"}]},"name":"cleanup_t_enum$_RaffleState_$3481","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"798:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"808:7:17","type":""}],"src":"755:143:17"},{"body":{"nodeType":"YulBlock","src":"978:69:17","statements":[{"nodeType":"YulAssignment","src":"988:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1035:5:17"}],"functionName":{"name":"cleanup_t_enum$_RaffleState_$3481","nodeType":"YulIdentifier","src":"1001:33:17"},"nodeType":"YulFunctionCall","src":"1001:40:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"988:9:17"}]}]},"name":"convert_t_enum$_RaffleState_$3481_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"958:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"968:9:17","type":""}],"src":"904:143:17"},{"body":{"nodeType":"YulBlock","src":"1132:80:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1149:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1199:5:17"}],"functionName":{"name":"convert_t_enum$_RaffleState_$3481_to_t_uint8","nodeType":"YulIdentifier","src":"1154:44:17"},"nodeType":"YulFunctionCall","src":"1154:51:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1142:6:17"},"nodeType":"YulFunctionCall","src":"1142:64:17"},"nodeType":"YulExpressionStatement","src":"1142:64:17"}]},"name":"abi_encode_t_enum$_RaffleState_$3481_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1120:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1127:3:17","type":""}],"src":"1053:159:17"},{"body":{"nodeType":"YulBlock","src":"1330:138:17","statements":[{"nodeType":"YulAssignment","src":"1340:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1352:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1363:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1348:3:17"},"nodeType":"YulFunctionCall","src":"1348:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1340:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1434:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1447:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1458:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:17"},"nodeType":"YulFunctionCall","src":"1443:17:17"}],"functionName":{"name":"abi_encode_t_enum$_RaffleState_$3481_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1376:57:17"},"nodeType":"YulFunctionCall","src":"1376:85:17"},"nodeType":"YulExpressionStatement","src":"1376:85:17"}]},"name":"abi_encode_tuple_t_enum$_RaffleState_$3481__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1302:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1314:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1325:4:17","type":""}],"src":"1218:250:17"},{"body":{"nodeType":"YulBlock","src":"1514:35:17","statements":[{"nodeType":"YulAssignment","src":"1524:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1540:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1534:5:17"},"nodeType":"YulFunctionCall","src":"1534:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1524:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1507:6:17","type":""}],"src":"1474:75:17"},{"body":{"nodeType":"YulBlock","src":"1644:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1661:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1664:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1654:6:17"},"nodeType":"YulFunctionCall","src":"1654:12:17"},"nodeType":"YulExpressionStatement","src":"1654:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1555:117:17"},{"body":{"nodeType":"YulBlock","src":"1767:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1784:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1787:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1777:6:17"},"nodeType":"YulFunctionCall","src":"1777:12:17"},"nodeType":"YulExpressionStatement","src":"1777:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1678:117:17"},{"body":{"nodeType":"YulBlock","src":"1844:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1901:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1910:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1913:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1903:6:17"},"nodeType":"YulFunctionCall","src":"1903:12:17"},"nodeType":"YulExpressionStatement","src":"1903:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1867:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1874:17:17"},"nodeType":"YulFunctionCall","src":"1874:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1864:2:17"},"nodeType":"YulFunctionCall","src":"1864:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1857:6:17"},"nodeType":"YulFunctionCall","src":"1857:43:17"},"nodeType":"YulIf","src":"1854:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1837:5:17","type":""}],"src":"1801:122:17"},{"body":{"nodeType":"YulBlock","src":"1981:87:17","statements":[{"nodeType":"YulAssignment","src":"1991:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2013:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2000:12:17"},"nodeType":"YulFunctionCall","src":"2000:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1991:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2056:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2029:26:17"},"nodeType":"YulFunctionCall","src":"2029:33:17"},"nodeType":"YulExpressionStatement","src":"2029:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1959:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1967:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1975:5:17","type":""}],"src":"1929:139:17"},{"body":{"nodeType":"YulBlock","src":"2163:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2180:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2183:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2173:6:17"},"nodeType":"YulFunctionCall","src":"2173:12:17"},"nodeType":"YulExpressionStatement","src":"2173:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2074:117:17"},{"body":{"nodeType":"YulBlock","src":"2286:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2303:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2306:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2296:6:17"},"nodeType":"YulFunctionCall","src":"2296:12:17"},"nodeType":"YulExpressionStatement","src":"2296:12:17"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2197:117:17"},{"body":{"nodeType":"YulBlock","src":"2409:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2426:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2429:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2419:6:17"},"nodeType":"YulFunctionCall","src":"2419:12:17"},"nodeType":"YulExpressionStatement","src":"2419:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2320:117:17"},{"body":{"nodeType":"YulBlock","src":"2550:478:17","statements":[{"body":{"nodeType":"YulBlock","src":"2599:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2601:77:17"},"nodeType":"YulFunctionCall","src":"2601:79:17"},"nodeType":"YulExpressionStatement","src":"2601:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2578:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2586:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2574:3:17"},"nodeType":"YulFunctionCall","src":"2574:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2593:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2570:3:17"},"nodeType":"YulFunctionCall","src":"2570:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2563:6:17"},"nodeType":"YulFunctionCall","src":"2563:35:17"},"nodeType":"YulIf","src":"2560:122:17"},{"nodeType":"YulAssignment","src":"2691:30:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2714:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2701:12:17"},"nodeType":"YulFunctionCall","src":"2701:20:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2691:6:17"}]},{"body":{"nodeType":"YulBlock","src":"2764:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2766:77:17"},"nodeType":"YulFunctionCall","src":"2766:79:17"},"nodeType":"YulExpressionStatement","src":"2766:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2736:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2744:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2733:2:17"},"nodeType":"YulFunctionCall","src":"2733:30:17"},"nodeType":"YulIf","src":"2730:117:17"},{"nodeType":"YulAssignment","src":"2856:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2872:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2880:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2868:3:17"},"nodeType":"YulFunctionCall","src":"2868:17:17"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2856:8:17"}]},{"body":{"nodeType":"YulBlock","src":"2939:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2941:77:17"},"nodeType":"YulFunctionCall","src":"2941:79:17"},"nodeType":"YulExpressionStatement","src":"2941:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2904:8:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2918:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2926:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2914:3:17"},"nodeType":"YulFunctionCall","src":"2914:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2900:3:17"},"nodeType":"YulFunctionCall","src":"2900:32:17"},{"name":"end","nodeType":"YulIdentifier","src":"2934:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2897:2:17"},"nodeType":"YulFunctionCall","src":"2897:41:17"},"nodeType":"YulIf","src":"2894:128:17"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2517:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2525:3:17","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2533:8:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2543:6:17","type":""}],"src":"2460:568:17"},{"body":{"nodeType":"YulBlock","src":"3152:586:17","statements":[{"body":{"nodeType":"YulBlock","src":"3198:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3200:77:17"},"nodeType":"YulFunctionCall","src":"3200:79:17"},"nodeType":"YulExpressionStatement","src":"3200:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3173:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3182:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3169:3:17"},"nodeType":"YulFunctionCall","src":"3169:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3194:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3165:3:17"},"nodeType":"YulFunctionCall","src":"3165:32:17"},"nodeType":"YulIf","src":"3162:119:17"},{"nodeType":"YulBlock","src":"3291:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3306:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3320:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3310:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3335:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3370:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3381:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3366:3:17"},"nodeType":"YulFunctionCall","src":"3366:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3390:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3345:20:17"},"nodeType":"YulFunctionCall","src":"3345:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3335:6:17"}]}]},{"nodeType":"YulBlock","src":"3418:313:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3464:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3475:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3460:3:17"},"nodeType":"YulFunctionCall","src":"3460:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3447:12:17"},"nodeType":"YulFunctionCall","src":"3447:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3526:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3528:77:17"},"nodeType":"YulFunctionCall","src":"3528:79:17"},"nodeType":"YulExpressionStatement","src":"3528:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3498:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3506:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3495:2:17"},"nodeType":"YulFunctionCall","src":"3495:30:17"},"nodeType":"YulIf","src":"3492:117:17"},{"nodeType":"YulAssignment","src":"3623:98:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3693:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3704:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3689:3:17"},"nodeType":"YulFunctionCall","src":"3689:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3713:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"3641:47:17"},"nodeType":"YulFunctionCall","src":"3641:80:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3623:6:17"},{"name":"value2","nodeType":"YulIdentifier","src":"3631:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3106:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3117:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3129:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3137:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3145:6:17","type":""}],"src":"3034:704:17"},{"body":{"nodeType":"YulBlock","src":"3831:478:17","statements":[{"body":{"nodeType":"YulBlock","src":"3880:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3882:77:17"},"nodeType":"YulFunctionCall","src":"3882:79:17"},"nodeType":"YulExpressionStatement","src":"3882:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3859:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3867:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3855:3:17"},"nodeType":"YulFunctionCall","src":"3855:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"3874:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3851:3:17"},"nodeType":"YulFunctionCall","src":"3851:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3844:6:17"},"nodeType":"YulFunctionCall","src":"3844:35:17"},"nodeType":"YulIf","src":"3841:122:17"},{"nodeType":"YulAssignment","src":"3972:30:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3995:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3982:12:17"},"nodeType":"YulFunctionCall","src":"3982:20:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3972:6:17"}]},{"body":{"nodeType":"YulBlock","src":"4045:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"4047:77:17"},"nodeType":"YulFunctionCall","src":"4047:79:17"},"nodeType":"YulExpressionStatement","src":"4047:79:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4017:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4025:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4014:2:17"},"nodeType":"YulFunctionCall","src":"4014:30:17"},"nodeType":"YulIf","src":"4011:117:17"},{"nodeType":"YulAssignment","src":"4137:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4153:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4161:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4149:3:17"},"nodeType":"YulFunctionCall","src":"4149:17:17"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4137:8:17"}]},{"body":{"nodeType":"YulBlock","src":"4220:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4222:77:17"},"nodeType":"YulFunctionCall","src":"4222:79:17"},"nodeType":"YulExpressionStatement","src":"4222:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4185:8:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4199:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4207:4:17","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4195:3:17"},"nodeType":"YulFunctionCall","src":"4195:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4181:3:17"},"nodeType":"YulFunctionCall","src":"4181:32:17"},{"name":"end","nodeType":"YulIdentifier","src":"4215:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4178:2:17"},"nodeType":"YulFunctionCall","src":"4178:41:17"},"nodeType":"YulIf","src":"4175:128:17"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3798:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3806:3:17","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3814:8:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"3824:6:17","type":""}],"src":"3757:552:17"},{"body":{"nodeType":"YulBlock","src":"4400:442:17","statements":[{"body":{"nodeType":"YulBlock","src":"4446:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4448:77:17"},"nodeType":"YulFunctionCall","src":"4448:79:17"},"nodeType":"YulExpressionStatement","src":"4448:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4421:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4430:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4417:3:17"},"nodeType":"YulFunctionCall","src":"4417:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4442:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4413:3:17"},"nodeType":"YulFunctionCall","src":"4413:32:17"},"nodeType":"YulIf","src":"4410:119:17"},{"nodeType":"YulBlock","src":"4539:296:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4554:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4585:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4596:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:17"},"nodeType":"YulFunctionCall","src":"4581:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4568:12:17"},"nodeType":"YulFunctionCall","src":"4568:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4558:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4646:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4648:77:17"},"nodeType":"YulFunctionCall","src":"4648:79:17"},"nodeType":"YulExpressionStatement","src":"4648:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4618:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4626:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4615:2:17"},"nodeType":"YulFunctionCall","src":"4615:30:17"},"nodeType":"YulIf","src":"4612:117:17"},{"nodeType":"YulAssignment","src":"4743:82:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4808:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:17"},"nodeType":"YulFunctionCall","src":"4793:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4817:7:17"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"4761:31:17"},"nodeType":"YulFunctionCall","src":"4761:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4743:6:17"},{"name":"value1","nodeType":"YulIdentifier","src":"4751:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4362:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4373:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4385:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4393:6:17","type":""}],"src":"4315:527:17"},{"body":{"nodeType":"YulBlock","src":"4893:81:17","statements":[{"nodeType":"YulAssignment","src":"4903:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4918:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4925:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4914:3:17"},"nodeType":"YulFunctionCall","src":"4914:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4903:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4875:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4885:7:17","type":""}],"src":"4848:126:17"},{"body":{"nodeType":"YulBlock","src":"5025:51:17","statements":[{"nodeType":"YulAssignment","src":"5035:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5064:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5046:17:17"},"nodeType":"YulFunctionCall","src":"5046:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5035:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5007:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5017:7:17","type":""}],"src":"4980:96:17"},{"body":{"nodeType":"YulBlock","src":"5147:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5164:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5187:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5169:17:17"},"nodeType":"YulFunctionCall","src":"5169:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5157:6:17"},"nodeType":"YulFunctionCall","src":"5157:37:17"},"nodeType":"YulExpressionStatement","src":"5157:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5135:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5142:3:17","type":""}],"src":"5082:118:17"},{"body":{"nodeType":"YulBlock","src":"5304:124:17","statements":[{"nodeType":"YulAssignment","src":"5314:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5326:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5337:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5322:3:17"},"nodeType":"YulFunctionCall","src":"5322:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5314:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5394:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5407:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5418:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5403:3:17"},"nodeType":"YulFunctionCall","src":"5403:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5350:43:17"},"nodeType":"YulFunctionCall","src":"5350:71:17"},"nodeType":"YulExpressionStatement","src":"5350:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5276:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5288:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5299:4:17","type":""}],"src":"5206:222:17"},{"body":{"nodeType":"YulBlock","src":"5478:45:17","statements":[{"nodeType":"YulAssignment","src":"5488:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5503:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5510:6:17","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5499:3:17"},"nodeType":"YulFunctionCall","src":"5499:18:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5488:7:17"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5460:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5470:7:17","type":""}],"src":"5434:89:17"},{"body":{"nodeType":"YulBlock","src":"5592:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5609:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5631:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5614:16:17"},"nodeType":"YulFunctionCall","src":"5614:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5602:6:17"},"nodeType":"YulFunctionCall","src":"5602:36:17"},"nodeType":"YulExpressionStatement","src":"5602:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5580:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5587:3:17","type":""}],"src":"5529:115:17"},{"body":{"nodeType":"YulBlock","src":"5746:122:17","statements":[{"nodeType":"YulAssignment","src":"5756:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5768:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5779:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5764:3:17"},"nodeType":"YulFunctionCall","src":"5764:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5756:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5834:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5858:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:17"},"nodeType":"YulFunctionCall","src":"5843:17:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"5792:41:17"},"nodeType":"YulFunctionCall","src":"5792:69:17"},"nodeType":"YulExpressionStatement","src":"5792:69:17"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5718:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5730:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5741:4:17","type":""}],"src":"5650:218:17"},{"body":{"nodeType":"YulBlock","src":"5963:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5980:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5973:6:17"},"nodeType":"YulFunctionCall","src":"5973:12:17"},"nodeType":"YulExpressionStatement","src":"5973:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5874:117:17"},{"body":{"nodeType":"YulBlock","src":"6045:54:17","statements":[{"nodeType":"YulAssignment","src":"6055:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6073:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6080:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6069:3:17"},"nodeType":"YulFunctionCall","src":"6069:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6089:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6085:3:17"},"nodeType":"YulFunctionCall","src":"6085:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6065:3:17"},"nodeType":"YulFunctionCall","src":"6065:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6055:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6028:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6038:6:17","type":""}],"src":"5997:102:17"},{"body":{"nodeType":"YulBlock","src":"6133:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6150:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6153:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6143:6:17"},"nodeType":"YulFunctionCall","src":"6143:88:17"},"nodeType":"YulExpressionStatement","src":"6143:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6247:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6250:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6240:6:17"},"nodeType":"YulFunctionCall","src":"6240:15:17"},"nodeType":"YulExpressionStatement","src":"6240:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6271:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6274:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6264:6:17"},"nodeType":"YulFunctionCall","src":"6264:15:17"},"nodeType":"YulExpressionStatement","src":"6264:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6105:180:17"},{"body":{"nodeType":"YulBlock","src":"6334:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6344:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6366:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6396:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6374:21:17"},"nodeType":"YulFunctionCall","src":"6374:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6362:3:17"},"nodeType":"YulFunctionCall","src":"6362:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6348:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6513:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6515:16:17"},"nodeType":"YulFunctionCall","src":"6515:18:17"},"nodeType":"YulExpressionStatement","src":"6515:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6456:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"6468:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6453:2:17"},"nodeType":"YulFunctionCall","src":"6453:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6492:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6504:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6489:2:17"},"nodeType":"YulFunctionCall","src":"6489:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6450:2:17"},"nodeType":"YulFunctionCall","src":"6450:62:17"},"nodeType":"YulIf","src":"6447:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6551:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6555:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6544:6:17"},"nodeType":"YulFunctionCall","src":"6544:22:17"},"nodeType":"YulExpressionStatement","src":"6544:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6320:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"6328:4:17","type":""}],"src":"6291:281:17"},{"body":{"nodeType":"YulBlock","src":"6619:88:17","statements":[{"nodeType":"YulAssignment","src":"6629:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6639:18:17"},"nodeType":"YulFunctionCall","src":"6639:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6629:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6688:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"6696:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6668:19:17"},"nodeType":"YulFunctionCall","src":"6668:33:17"},"nodeType":"YulExpressionStatement","src":"6668:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6603:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6612:6:17","type":""}],"src":"6578:129:17"},{"body":{"nodeType":"YulBlock","src":"6779:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"6884:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6886:16:17"},"nodeType":"YulFunctionCall","src":"6886:18:17"},"nodeType":"YulExpressionStatement","src":"6886:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6856:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6864:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6853:2:17"},"nodeType":"YulFunctionCall","src":"6853:30:17"},"nodeType":"YulIf","src":"6850:56:17"},{"nodeType":"YulAssignment","src":"6916:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6946:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6924:21:17"},"nodeType":"YulFunctionCall","src":"6924:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6916:4:17"}]},{"nodeType":"YulAssignment","src":"6990:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7002:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"7008:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6998:3:17"},"nodeType":"YulFunctionCall","src":"6998:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6990:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6763:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6774:4:17","type":""}],"src":"6713:307:17"},{"body":{"nodeType":"YulBlock","src":"7090:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7113:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"7118:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7123:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7100:12:17"},"nodeType":"YulFunctionCall","src":"7100:30:17"},"nodeType":"YulExpressionStatement","src":"7100:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7150:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7155:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7146:3:17"},"nodeType":"YulFunctionCall","src":"7146:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"7164:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7139:6:17"},"nodeType":"YulFunctionCall","src":"7139:27:17"},"nodeType":"YulExpressionStatement","src":"7139:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7072:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7077:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7082:6:17","type":""}],"src":"7026:146:17"},{"body":{"nodeType":"YulBlock","src":"7261:340:17","statements":[{"nodeType":"YulAssignment","src":"7271:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7337:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7296:40:17"},"nodeType":"YulFunctionCall","src":"7296:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7280:15:17"},"nodeType":"YulFunctionCall","src":"7280:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7271:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7361:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"7368:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7354:6:17"},"nodeType":"YulFunctionCall","src":"7354:21:17"},"nodeType":"YulExpressionStatement","src":"7354:21:17"},{"nodeType":"YulVariableDeclaration","src":"7384:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7399:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7406:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7395:3:17"},"nodeType":"YulFunctionCall","src":"7395:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7388:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7449:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7451:77:17"},"nodeType":"YulFunctionCall","src":"7451:79:17"},"nodeType":"YulExpressionStatement","src":"7451:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7430:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7435:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7426:3:17"},"nodeType":"YulFunctionCall","src":"7426:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"7444:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7423:2:17"},"nodeType":"YulFunctionCall","src":"7423:25:17"},"nodeType":"YulIf","src":"7420:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7578:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"7583:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7588:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7541:36:17"},"nodeType":"YulFunctionCall","src":"7541:54:17"},"nodeType":"YulExpressionStatement","src":"7541:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7234:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"7239:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7247:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7255:5:17","type":""}],"src":"7178:423:17"},{"body":{"nodeType":"YulBlock","src":"7681:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"7730:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7732:77:17"},"nodeType":"YulFunctionCall","src":"7732:79:17"},"nodeType":"YulExpressionStatement","src":"7732:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7709:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7717:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7705:3:17"},"nodeType":"YulFunctionCall","src":"7705:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"7724:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7701:3:17"},"nodeType":"YulFunctionCall","src":"7701:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7694:6:17"},"nodeType":"YulFunctionCall","src":"7694:35:17"},"nodeType":"YulIf","src":"7691:122:17"},{"nodeType":"YulVariableDeclaration","src":"7822:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7849:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7836:12:17"},"nodeType":"YulFunctionCall","src":"7836:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7826:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7865:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7925:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7933:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7921:3:17"},"nodeType":"YulFunctionCall","src":"7921:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"7940:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"7948:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7874:46:17"},"nodeType":"YulFunctionCall","src":"7874:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7865:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7659:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"7667:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7675:5:17","type":""}],"src":"7620:338:17"},{"body":{"nodeType":"YulBlock","src":"8039:432:17","statements":[{"body":{"nodeType":"YulBlock","src":"8085:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8087:77:17"},"nodeType":"YulFunctionCall","src":"8087:79:17"},"nodeType":"YulExpressionStatement","src":"8087:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8060:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8069:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8056:3:17"},"nodeType":"YulFunctionCall","src":"8056:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8081:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8052:3:17"},"nodeType":"YulFunctionCall","src":"8052:32:17"},"nodeType":"YulIf","src":"8049:119:17"},{"nodeType":"YulBlock","src":"8178:286:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8193:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8224:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8235:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8220:3:17"},"nodeType":"YulFunctionCall","src":"8220:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8207:12:17"},"nodeType":"YulFunctionCall","src":"8207:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8197:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8285:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8287:77:17"},"nodeType":"YulFunctionCall","src":"8287:79:17"},"nodeType":"YulExpressionStatement","src":"8287:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8257:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8265:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8254:2:17"},"nodeType":"YulFunctionCall","src":"8254:30:17"},"nodeType":"YulIf","src":"8251:117:17"},{"nodeType":"YulAssignment","src":"8382:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8426:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8437:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8422:3:17"},"nodeType":"YulFunctionCall","src":"8422:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8446:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8392:29:17"},"nodeType":"YulFunctionCall","src":"8392:62:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8382:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8009:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8020:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8032:6:17","type":""}],"src":"7964:507:17"},{"body":{"nodeType":"YulBlock","src":"8519:48:17","statements":[{"nodeType":"YulAssignment","src":"8529:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8554:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8547:6:17"},"nodeType":"YulFunctionCall","src":"8547:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8540:6:17"},"nodeType":"YulFunctionCall","src":"8540:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8529:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8501:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8511:7:17","type":""}],"src":"8477:90:17"},{"body":{"nodeType":"YulBlock","src":"8632:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8649:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8669:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8654:14:17"},"nodeType":"YulFunctionCall","src":"8654:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:17"},"nodeType":"YulFunctionCall","src":"8642:34:17"},"nodeType":"YulExpressionStatement","src":"8642:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8620:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8627:3:17","type":""}],"src":"8573:109:17"},{"body":{"nodeType":"YulBlock","src":"8746:40:17","statements":[{"nodeType":"YulAssignment","src":"8757:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8773:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8767:5:17"},"nodeType":"YulFunctionCall","src":"8767:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8757:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8729:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8739:6:17","type":""}],"src":"8688:98:17"},{"body":{"nodeType":"YulBlock","src":"8887:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8904:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8909:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8897:6:17"},"nodeType":"YulFunctionCall","src":"8897:19:17"},"nodeType":"YulExpressionStatement","src":"8897:19:17"},{"nodeType":"YulAssignment","src":"8925:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8944:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8949:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8940:3:17"},"nodeType":"YulFunctionCall","src":"8940:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8925:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8859:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8864:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8875:11:17","type":""}],"src":"8792:168:17"},{"body":{"nodeType":"YulBlock","src":"9028:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9038:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9047:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9042:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9107:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9132:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"9137:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9128:3:17"},"nodeType":"YulFunctionCall","src":"9128:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9151:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"9156:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9147:3:17"},"nodeType":"YulFunctionCall","src":"9147:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9141:5:17"},"nodeType":"YulFunctionCall","src":"9141:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9121:6:17"},"nodeType":"YulFunctionCall","src":"9121:39:17"},"nodeType":"YulExpressionStatement","src":"9121:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9068:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"9071:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9065:2:17"},"nodeType":"YulFunctionCall","src":"9065:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9079:19:17","statements":[{"nodeType":"YulAssignment","src":"9081:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9090:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"9093:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9086:3:17"},"nodeType":"YulFunctionCall","src":"9086:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9081:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"9061:3:17","statements":[]},"src":"9057:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9190:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9195:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9186:3:17"},"nodeType":"YulFunctionCall","src":"9186:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"9204:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9179:6:17"},"nodeType":"YulFunctionCall","src":"9179:27:17"},"nodeType":"YulExpressionStatement","src":"9179:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9010:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9015:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9020:6:17","type":""}],"src":"8966:246:17"},{"body":{"nodeType":"YulBlock","src":"9308:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9318:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9364:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9332:31:17"},"nodeType":"YulFunctionCall","src":"9332:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9322:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9379:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9444:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9449:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9386:57:17"},"nodeType":"YulFunctionCall","src":"9386:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9379:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9504:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9511:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:17"},"nodeType":"YulFunctionCall","src":"9500:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"9518:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9523:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9465:34:17"},"nodeType":"YulFunctionCall","src":"9465:65:17"},"nodeType":"YulExpressionStatement","src":"9465:65:17"},{"nodeType":"YulAssignment","src":"9539:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9550:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9577:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9555:21:17"},"nodeType":"YulFunctionCall","src":"9555:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9546:3:17"},"nodeType":"YulFunctionCall","src":"9546:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9539:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9289:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9296:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9304:3:17","type":""}],"src":"9218:373:17"},{"body":{"nodeType":"YulBlock","src":"9735:269:17","statements":[{"nodeType":"YulAssignment","src":"9745:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9757:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9768:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9753:3:17"},"nodeType":"YulFunctionCall","src":"9753:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9745:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9819:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9843:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9828:3:17"},"nodeType":"YulFunctionCall","src":"9828:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9781:37:17"},"nodeType":"YulFunctionCall","src":"9781:65:17"},"nodeType":"YulExpressionStatement","src":"9781:65:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9867:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9878:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9863:3:17"},"nodeType":"YulFunctionCall","src":"9863:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9887:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9893:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9883:3:17"},"nodeType":"YulFunctionCall","src":"9883:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9856:6:17"},"nodeType":"YulFunctionCall","src":"9856:48:17"},"nodeType":"YulExpressionStatement","src":"9856:48:17"},{"nodeType":"YulAssignment","src":"9913:84:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9983:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"9992:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9921:61:17"},"nodeType":"YulFunctionCall","src":"9921:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9913:4:17"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9699:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9711:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9719:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9730:4:17","type":""}],"src":"9597:407:17"},{"body":{"nodeType":"YulBlock","src":"10053:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"10110:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10119:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10122:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10112:6:17"},"nodeType":"YulFunctionCall","src":"10112:12:17"},"nodeType":"YulExpressionStatement","src":"10112:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10076:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10101:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10083:17:17"},"nodeType":"YulFunctionCall","src":"10083:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10073:2:17"},"nodeType":"YulFunctionCall","src":"10073:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10066:6:17"},"nodeType":"YulFunctionCall","src":"10066:43:17"},"nodeType":"YulIf","src":"10063:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10046:5:17","type":""}],"src":"10010:122:17"},{"body":{"nodeType":"YulBlock","src":"10190:87:17","statements":[{"nodeType":"YulAssignment","src":"10200:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10222:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10209:12:17"},"nodeType":"YulFunctionCall","src":"10209:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10200:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10265:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"10238:26:17"},"nodeType":"YulFunctionCall","src":"10238:33:17"},"nodeType":"YulExpressionStatement","src":"10238:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10168:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"10176:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10184:5:17","type":""}],"src":"10138:139:17"},{"body":{"nodeType":"YulBlock","src":"10349:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"10395:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10397:77:17"},"nodeType":"YulFunctionCall","src":"10397:79:17"},"nodeType":"YulExpressionStatement","src":"10397:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10370:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10379:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10366:3:17"},"nodeType":"YulFunctionCall","src":"10366:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10391:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10362:3:17"},"nodeType":"YulFunctionCall","src":"10362:32:17"},"nodeType":"YulIf","src":"10359:119:17"},{"nodeType":"YulBlock","src":"10488:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10503:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10517:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10507:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10532:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10567:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10578:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10563:3:17"},"nodeType":"YulFunctionCall","src":"10563:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10587:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10542:20:17"},"nodeType":"YulFunctionCall","src":"10542:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10532:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10319:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10330:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10342:6:17","type":""}],"src":"10283:329:17"},{"body":{"nodeType":"YulBlock","src":"10650:28:17","statements":[{"nodeType":"YulAssignment","src":"10660:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10667:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10660:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10636:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10646:3:17","type":""}],"src":"10618:60:17"},{"body":{"nodeType":"YulBlock","src":"10744:82:17","statements":[{"nodeType":"YulAssignment","src":"10754:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10812:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10794:17:17"},"nodeType":"YulFunctionCall","src":"10794:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10785:8:17"},"nodeType":"YulFunctionCall","src":"10785:34:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10767:17:17"},"nodeType":"YulFunctionCall","src":"10767:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10754:9:17"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10724:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10734:9:17","type":""}],"src":"10684:142:17"},{"body":{"nodeType":"YulBlock","src":"10892:66:17","statements":[{"nodeType":"YulAssignment","src":"10902:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10946:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10915:30:17"},"nodeType":"YulFunctionCall","src":"10915:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10902:9:17"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10872:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10882:9:17","type":""}],"src":"10832:126:17"},{"body":{"nodeType":"YulBlock","src":"11054:66:17","statements":[{"nodeType":"YulAssignment","src":"11064:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11108:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11077:30:17"},"nodeType":"YulFunctionCall","src":"11077:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11064:9:17"}]}]},"name":"convert_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11034:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11044:9:17","type":""}],"src":"10964:156:17"},{"body":{"nodeType":"YulBlock","src":"11221:96:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11238:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11304:5:17"}],"functionName":{"name":"convert_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address","nodeType":"YulIdentifier","src":"11243:60:17"},"nodeType":"YulFunctionCall","src":"11243:67:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11231:6:17"},"nodeType":"YulFunctionCall","src":"11231:80:17"},"nodeType":"YulExpressionStatement","src":"11231:80:17"}]},"name":"abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11209:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11216:3:17","type":""}],"src":"11126:191:17"},{"body":{"nodeType":"YulBlock","src":"11451:154:17","statements":[{"nodeType":"YulAssignment","src":"11461:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11473:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11484:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11469:3:17"},"nodeType":"YulFunctionCall","src":"11469:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11461:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11571:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11584:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11595:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11580:3:17"},"nodeType":"YulFunctionCall","src":"11580:17:17"}],"functionName":{"name":"abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11497:73:17"},"nodeType":"YulFunctionCall","src":"11497:101:17"},"nodeType":"YulExpressionStatement","src":"11497:101:17"}]},"name":"abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2480__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11423:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11435:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11446:4:17","type":""}],"src":"11323:282:17"},{"body":{"nodeType":"YulBlock","src":"11677:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"11723:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11725:77:17"},"nodeType":"YulFunctionCall","src":"11725:79:17"},"nodeType":"YulExpressionStatement","src":"11725:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11698:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11707:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11694:3:17"},"nodeType":"YulFunctionCall","src":"11694:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11719:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11690:3:17"},"nodeType":"YulFunctionCall","src":"11690:32:17"},"nodeType":"YulIf","src":"11687:119:17"},{"nodeType":"YulBlock","src":"11816:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11831:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11845:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11835:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11860:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11895:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11906:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11891:3:17"},"nodeType":"YulFunctionCall","src":"11891:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11915:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11870:20:17"},"nodeType":"YulFunctionCall","src":"11870:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11860:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11647:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11658:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11670:6:17","type":""}],"src":"11611:329:17"},{"body":{"nodeType":"YulBlock","src":"12072:206:17","statements":[{"nodeType":"YulAssignment","src":"12082:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12094:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12105:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12090:3:17"},"nodeType":"YulFunctionCall","src":"12090:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12082:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12162:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12175:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12186:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12171:3:17"},"nodeType":"YulFunctionCall","src":"12171:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12118:43:17"},"nodeType":"YulFunctionCall","src":"12118:71:17"},"nodeType":"YulExpressionStatement","src":"12118:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12243:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12256:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12267:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12252:3:17"},"nodeType":"YulFunctionCall","src":"12252:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12199:43:17"},"nodeType":"YulFunctionCall","src":"12199:72:17"},"nodeType":"YulExpressionStatement","src":"12199:72:17"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12036:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12048:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12056:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12067:4:17","type":""}],"src":"11946:332:17"},{"body":{"nodeType":"YulBlock","src":"12438:288:17","statements":[{"nodeType":"YulAssignment","src":"12448:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12460:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12471:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12456:3:17"},"nodeType":"YulFunctionCall","src":"12456:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12448:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12528:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12541:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12552:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12537:3:17"},"nodeType":"YulFunctionCall","src":"12537:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12484:43:17"},"nodeType":"YulFunctionCall","src":"12484:71:17"},"nodeType":"YulExpressionStatement","src":"12484:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12609:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12622:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12633:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12618:3:17"},"nodeType":"YulFunctionCall","src":"12618:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12565:43:17"},"nodeType":"YulFunctionCall","src":"12565:72:17"},"nodeType":"YulExpressionStatement","src":"12565:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12691:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12704:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12715:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12700:3:17"},"nodeType":"YulFunctionCall","src":"12700:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12647:43:17"},"nodeType":"YulFunctionCall","src":"12647:72:17"},"nodeType":"YulExpressionStatement","src":"12647:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12394:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12406:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12414:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12422:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12433:4:17","type":""}],"src":"12284:442:17"},{"body":{"nodeType":"YulBlock","src":"12777:32:17","statements":[{"nodeType":"YulAssignment","src":"12787:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12798:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12787:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12759:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12769:7:17","type":""}],"src":"12732:77:17"},{"body":{"nodeType":"YulBlock","src":"12870:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12887:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12910:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12892:17:17"},"nodeType":"YulFunctionCall","src":"12892:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12880:6:17"},"nodeType":"YulFunctionCall","src":"12880:37:17"},"nodeType":"YulExpressionStatement","src":"12880:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12858:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12865:3:17","type":""}],"src":"12815:108:17"},{"body":{"nodeType":"YulBlock","src":"12984:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13001:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13024:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13006:17:17"},"nodeType":"YulFunctionCall","src":"13006:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12994:6:17"},"nodeType":"YulFunctionCall","src":"12994:37:17"},"nodeType":"YulExpressionStatement","src":"12994:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12972:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12979:3:17","type":""}],"src":"12929:108:17"},{"body":{"nodeType":"YulBlock","src":"13096:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13113:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13135:5:17"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"13118:16:17"},"nodeType":"YulFunctionCall","src":"13118:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13106:6:17"},"nodeType":"YulFunctionCall","src":"13106:36:17"},"nodeType":"YulExpressionStatement","src":"13106:36:17"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13084:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13091:3:17","type":""}],"src":"13043:105:17"},{"body":{"nodeType":"YulBlock","src":"13198:49:17","statements":[{"nodeType":"YulAssignment","src":"13208:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13223:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13230:10:17","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13219:3:17"},"nodeType":"YulFunctionCall","src":"13219:22:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13208:7:17"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13180:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13190:7:17","type":""}],"src":"13154:93:17"},{"body":{"nodeType":"YulBlock","src":"13306:52:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13323:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13345:5:17"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13328:16:17"},"nodeType":"YulFunctionCall","src":"13328:23:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13316:6:17"},"nodeType":"YulFunctionCall","src":"13316:36:17"},"nodeType":"YulExpressionStatement","src":"13316:36:17"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13294:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13301:3:17","type":""}],"src":"13253:105:17"},{"body":{"nodeType":"YulBlock","src":"13449:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13466:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13471:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13459:6:17"},"nodeType":"YulFunctionCall","src":"13459:19:17"},"nodeType":"YulExpressionStatement","src":"13459:19:17"},{"nodeType":"YulAssignment","src":"13487:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13506:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13511:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13502:3:17"},"nodeType":"YulFunctionCall","src":"13502:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13487:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13421:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"13426:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13437:11:17","type":""}],"src":"13364:158:17"},{"body":{"nodeType":"YulBlock","src":"13608:273:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13618:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13664:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13632:31:17"},"nodeType":"YulFunctionCall","src":"13632:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13622:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13679:67:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13734:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13739:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13686:47:17"},"nodeType":"YulFunctionCall","src":"13686:60:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13679:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13794:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13801:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:17"},"nodeType":"YulFunctionCall","src":"13790:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13808:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13813:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13755:34:17"},"nodeType":"YulFunctionCall","src":"13755:65:17"},"nodeType":"YulExpressionStatement","src":"13755:65:17"},{"nodeType":"YulAssignment","src":"13829:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13840:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13867:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13845:21:17"},"nodeType":"YulFunctionCall","src":"13845:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13836:3:17"},"nodeType":"YulFunctionCall","src":"13836:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13829:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13589:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13596:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13604:3:17","type":""}],"src":"13528:353:17"},{"body":{"nodeType":"YulBlock","src":"14127:1211:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14137:26:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14153:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14158:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14149:3:17"},"nodeType":"YulFunctionCall","src":"14149:14:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14141:4:17","type":""}]},{"nodeType":"YulBlock","src":"14173:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14211:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14241:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14248:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14237:3:17"},"nodeType":"YulFunctionCall","src":"14237:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14231:5:17"},"nodeType":"YulFunctionCall","src":"14231:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14215:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14301:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14319:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14324:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14315:3:17"},"nodeType":"YulFunctionCall","src":"14315:14:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"14267:33:17"},"nodeType":"YulFunctionCall","src":"14267:63:17"},"nodeType":"YulExpressionStatement","src":"14267:63:17"}]},{"nodeType":"YulBlock","src":"14350:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14386:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14416:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14423:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14412:3:17"},"nodeType":"YulFunctionCall","src":"14412:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14406:5:17"},"nodeType":"YulFunctionCall","src":"14406:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14390:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14476:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14494:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14499:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14490:3:17"},"nodeType":"YulFunctionCall","src":"14490:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14442:33:17"},"nodeType":"YulFunctionCall","src":"14442:63:17"},"nodeType":"YulExpressionStatement","src":"14442:63:17"}]},{"nodeType":"YulBlock","src":"14525:178:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14576:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14606:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14613:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14602:3:17"},"nodeType":"YulFunctionCall","src":"14602:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14596:5:17"},"nodeType":"YulFunctionCall","src":"14596:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14580:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14664:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14682:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14687:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14678:3:17"},"nodeType":"YulFunctionCall","src":"14678:14:17"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"14632:31:17"},"nodeType":"YulFunctionCall","src":"14632:61:17"},"nodeType":"YulExpressionStatement","src":"14632:61:17"}]},{"nodeType":"YulBlock","src":"14713:174:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14760:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14790:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14797:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14786:3:17"},"nodeType":"YulFunctionCall","src":"14786:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14780:5:17"},"nodeType":"YulFunctionCall","src":"14780:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14764:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14848:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14866:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14871:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14862:3:17"},"nodeType":"YulFunctionCall","src":"14862:14:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"14816:31:17"},"nodeType":"YulFunctionCall","src":"14816:61:17"},"nodeType":"YulExpressionStatement","src":"14816:61:17"}]},{"nodeType":"YulBlock","src":"14897:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14936:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14966:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14973:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14962:3:17"},"nodeType":"YulFunctionCall","src":"14962:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14956:5:17"},"nodeType":"YulFunctionCall","src":"14956:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14940:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15024:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15042:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15047:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15038:3:17"},"nodeType":"YulFunctionCall","src":"15038:14:17"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"14992:31:17"},"nodeType":"YulFunctionCall","src":"14992:61:17"},"nodeType":"YulExpressionStatement","src":"14992:61:17"}]},{"nodeType":"YulBlock","src":"15073:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15113:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15143:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"15150:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15139:3:17"},"nodeType":"YulFunctionCall","src":"15139:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15133:5:17"},"nodeType":"YulFunctionCall","src":"15133:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15117:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15181:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15186:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15177:3:17"},"nodeType":"YulFunctionCall","src":"15177:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15197:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"15203:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15193:3:17"},"nodeType":"YulFunctionCall","src":"15193:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15170:6:17"},"nodeType":"YulFunctionCall","src":"15170:38:17"},"nodeType":"YulExpressionStatement","src":"15170:38:17"},{"nodeType":"YulAssignment","src":"15221:79:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15281:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"15295:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15229:51:17"},"nodeType":"YulFunctionCall","src":"15229:71:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15221:4:17"}]}]},{"nodeType":"YulAssignment","src":"15321:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"15328:4:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15321:3:17"}]}]},"name":"abi_encode_t_struct$_RandomWordsRequest_$2609_memory_ptr_to_t_struct$_RandomWordsRequest_$2609_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14106:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14113:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14122:3:17","type":""}],"src":"13981:1357:17"},{"body":{"nodeType":"YulBlock","src":"15514:247:17","statements":[{"nodeType":"YulAssignment","src":"15524:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15536:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15547:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15532:3:17"},"nodeType":"YulFunctionCall","src":"15532:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15524:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15571:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15582:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15567:3:17"},"nodeType":"YulFunctionCall","src":"15567:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15590:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15596:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15586:3:17"},"nodeType":"YulFunctionCall","src":"15586:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15560:6:17"},"nodeType":"YulFunctionCall","src":"15560:47:17"},"nodeType":"YulExpressionStatement","src":"15560:47:17"},{"nodeType":"YulAssignment","src":"15616:138:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15740:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"15749:4:17"}],"functionName":{"name":"abi_encode_t_struct$_RandomWordsRequest_$2609_memory_ptr_to_t_struct$_RandomWordsRequest_$2609_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15624:115:17"},"nodeType":"YulFunctionCall","src":"15624:130:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15616:4:17"}]}]},"name":"abi_encode_tuple_t_struct$_RandomWordsRequest_$2609_memory_ptr__to_t_struct$_RandomWordsRequest_$2609_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15486:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15498:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15509:4:17","type":""}],"src":"15344:417:17"},{"body":{"nodeType":"YulBlock","src":"15830:80:17","statements":[{"nodeType":"YulAssignment","src":"15840:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15855:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15849:5:17"},"nodeType":"YulFunctionCall","src":"15849:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15840:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15898:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"15871:26:17"},"nodeType":"YulFunctionCall","src":"15871:33:17"},"nodeType":"YulExpressionStatement","src":"15871:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15808:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"15816:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15824:5:17","type":""}],"src":"15767:143:17"},{"body":{"nodeType":"YulBlock","src":"15993:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"16039:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16041:77:17"},"nodeType":"YulFunctionCall","src":"16041:79:17"},"nodeType":"YulExpressionStatement","src":"16041:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16014:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16023:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16010:3:17"},"nodeType":"YulFunctionCall","src":"16010:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"16035:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16006:3:17"},"nodeType":"YulFunctionCall","src":"16006:32:17"},"nodeType":"YulIf","src":"16003:119:17"},{"nodeType":"YulBlock","src":"16132:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16147:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"16161:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16151:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16176:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16222:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"16233:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16218:3:17"},"nodeType":"YulFunctionCall","src":"16218:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16242:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16186:31:17"},"nodeType":"YulFunctionCall","src":"16186:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16176:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15963:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15974:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15986:6:17","type":""}],"src":"15916:351:17"},{"body":{"nodeType":"YulBlock","src":"16301:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16318:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16321:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16311:6:17"},"nodeType":"YulFunctionCall","src":"16311:88:17"},"nodeType":"YulExpressionStatement","src":"16311:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16415:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16418:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16408:6:17"},"nodeType":"YulFunctionCall","src":"16408:15:17"},"nodeType":"YulExpressionStatement","src":"16408:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16439:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16442:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16432:6:17"},"nodeType":"YulFunctionCall","src":"16432:15:17"},"nodeType":"YulExpressionStatement","src":"16432:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16273:180:17"},{"body":{"nodeType":"YulBlock","src":"16504:149:17","statements":[{"nodeType":"YulAssignment","src":"16514:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16537:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16519:17:17"},"nodeType":"YulFunctionCall","src":"16519:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16514:1:17"}]},{"nodeType":"YulAssignment","src":"16548:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16571:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16553:17:17"},"nodeType":"YulFunctionCall","src":"16553:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16548:1:17"}]},{"nodeType":"YulAssignment","src":"16582:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16594:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"16597:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16590:3:17"},"nodeType":"YulFunctionCall","src":"16590:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16582:4:17"}]},{"body":{"nodeType":"YulBlock","src":"16624:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16626:16:17"},"nodeType":"YulFunctionCall","src":"16626:18:17"},"nodeType":"YulExpressionStatement","src":"16626:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"16615:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"16621:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16612:2:17"},"nodeType":"YulFunctionCall","src":"16612:11:17"},"nodeType":"YulIf","src":"16609:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16490:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"16493:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16499:4:17","type":""}],"src":"16459:194:17"},{"body":{"nodeType":"YulBlock","src":"16755:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16772:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16777:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16765:6:17"},"nodeType":"YulFunctionCall","src":"16765:19:17"},"nodeType":"YulExpressionStatement","src":"16765:19:17"},{"nodeType":"YulAssignment","src":"16793:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16812:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16817:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:17"},"nodeType":"YulFunctionCall","src":"16808:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16793:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16727:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"16732:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16743:11:17","type":""}],"src":"16659:169:17"},{"body":{"nodeType":"YulBlock","src":"16940:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16962:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16970:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16958:3:17"},"nodeType":"YulFunctionCall","src":"16958:14:17"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"16974:24:17","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16951:6:17"},"nodeType":"YulFunctionCall","src":"16951:48:17"},"nodeType":"YulExpressionStatement","src":"16951:48:17"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16932:6:17","type":""}],"src":"16834:172:17"},{"body":{"nodeType":"YulBlock","src":"17158:220:17","statements":[{"nodeType":"YulAssignment","src":"17168:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17234:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17239:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17175:58:17"},"nodeType":"YulFunctionCall","src":"17175:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17168:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17340:3:17"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"17251:88:17"},"nodeType":"YulFunctionCall","src":"17251:93:17"},"nodeType":"YulExpressionStatement","src":"17251:93:17"},{"nodeType":"YulAssignment","src":"17353:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17364:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17369:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17360:3:17"},"nodeType":"YulFunctionCall","src":"17360:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17353:3:17"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17146:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17154:3:17","type":""}],"src":"17012:366:17"},{"body":{"nodeType":"YulBlock","src":"17555:248:17","statements":[{"nodeType":"YulAssignment","src":"17565:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17577:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17588:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17573:3:17"},"nodeType":"YulFunctionCall","src":"17573:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17565:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17612:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17623:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17608:3:17"},"nodeType":"YulFunctionCall","src":"17608:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17631:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17637:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17627:3:17"},"nodeType":"YulFunctionCall","src":"17627:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17601:6:17"},"nodeType":"YulFunctionCall","src":"17601:47:17"},"nodeType":"YulExpressionStatement","src":"17601:47:17"},{"nodeType":"YulAssignment","src":"17657:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17791:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17665:124:17"},"nodeType":"YulFunctionCall","src":"17665:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17657:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17535:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17550:4:17","type":""}],"src":"17384:419:17"},{"body":{"nodeType":"YulBlock","src":"17963:288:17","statements":[{"nodeType":"YulAssignment","src":"17973:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17985:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17996:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17981:3:17"},"nodeType":"YulFunctionCall","src":"17981:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17973:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18053:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18066:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18077:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18062:3:17"},"nodeType":"YulFunctionCall","src":"18062:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18009:43:17"},"nodeType":"YulFunctionCall","src":"18009:71:17"},"nodeType":"YulExpressionStatement","src":"18009:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18134:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18147:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18158:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18143:3:17"},"nodeType":"YulFunctionCall","src":"18143:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18090:43:17"},"nodeType":"YulFunctionCall","src":"18090:72:17"},"nodeType":"YulExpressionStatement","src":"18090:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18216:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18229:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18240:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18225:3:17"},"nodeType":"YulFunctionCall","src":"18225:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18172:43:17"},"nodeType":"YulFunctionCall","src":"18172:72:17"},"nodeType":"YulExpressionStatement","src":"18172:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17919:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17931:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17939:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17947:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17958:4:17","type":""}],"src":"17809:442:17"},{"body":{"nodeType":"YulBlock","src":"18285:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18302:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18305:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18295:6:17"},"nodeType":"YulFunctionCall","src":"18295:88:17"},"nodeType":"YulExpressionStatement","src":"18295:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18399:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18402:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18392:6:17"},"nodeType":"YulFunctionCall","src":"18392:15:17"},"nodeType":"YulExpressionStatement","src":"18392:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18423:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18426:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18416:6:17"},"nodeType":"YulFunctionCall","src":"18416:15:17"},"nodeType":"YulExpressionStatement","src":"18416:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18257:180:17"},{"body":{"nodeType":"YulBlock","src":"18471:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18488:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18491:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18481:6:17"},"nodeType":"YulFunctionCall","src":"18481:88:17"},"nodeType":"YulExpressionStatement","src":"18481:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18585:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18588:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18578:6:17"},"nodeType":"YulFunctionCall","src":"18578:15:17"},"nodeType":"YulExpressionStatement","src":"18578:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18609:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18612:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18602:6:17"},"nodeType":"YulFunctionCall","src":"18602:15:17"},"nodeType":"YulExpressionStatement","src":"18602:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"18443:180:17"},{"body":{"nodeType":"YulBlock","src":"18663:142:17","statements":[{"nodeType":"YulAssignment","src":"18673:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18696:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18678:17:17"},"nodeType":"YulFunctionCall","src":"18678:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18673:1:17"}]},{"nodeType":"YulAssignment","src":"18707:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18730:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18712:17:17"},"nodeType":"YulFunctionCall","src":"18712:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18707:1:17"}]},{"body":{"nodeType":"YulBlock","src":"18754:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"18756:16:17"},"nodeType":"YulFunctionCall","src":"18756:18:17"},"nodeType":"YulExpressionStatement","src":"18756:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18751:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18744:6:17"},"nodeType":"YulFunctionCall","src":"18744:9:17"},"nodeType":"YulIf","src":"18741:35:17"},{"nodeType":"YulAssignment","src":"18785:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18794:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"18797:1:17"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"18790:3:17"},"nodeType":"YulFunctionCall","src":"18790:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18785:1:17"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18652:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"18655:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18661:1:17","type":""}],"src":"18629:176:17"},{"body":{"nodeType":"YulBlock","src":"18924:34:17","statements":[{"nodeType":"YulAssignment","src":"18934:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"18949:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18934:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18896:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"18901:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"18912:11:17","type":""}],"src":"18811:147:17"},{"body":{"nodeType":"YulBlock","src":"19070:8:17","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19062:6:17","type":""}],"src":"18964:114:17"},{"body":{"nodeType":"YulBlock","src":"19247:235:17","statements":[{"nodeType":"YulAssignment","src":"19257:90:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19340:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19345:1:17","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19264:75:17"},"nodeType":"YulFunctionCall","src":"19264:83:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19257:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19445:3:17"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"19356:88:17"},"nodeType":"YulFunctionCall","src":"19356:93:17"},"nodeType":"YulExpressionStatement","src":"19356:93:17"},{"nodeType":"YulAssignment","src":"19458:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19469:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19474:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19465:3:17"},"nodeType":"YulFunctionCall","src":"19465:11:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19458:3:17"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19235:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19243:3:17","type":""}],"src":"19084:398:17"},{"body":{"nodeType":"YulBlock","src":"19676:191:17","statements":[{"nodeType":"YulAssignment","src":"19687:154:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19837:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19694:141:17"},"nodeType":"YulFunctionCall","src":"19694:147:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19687:3:17"}]},{"nodeType":"YulAssignment","src":"19851:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"19858:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19851:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19663:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19672:3:17","type":""}],"src":"19488:379:17"},{"body":{"nodeType":"YulBlock","src":"19922:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19939:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19959:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"19944:14:17"},"nodeType":"YulFunctionCall","src":"19944:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19932:6:17"},"nodeType":"YulFunctionCall","src":"19932:34:17"},"nodeType":"YulExpressionStatement","src":"19932:34:17"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19910:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19917:3:17","type":""}],"src":"19873:99:17"},{"body":{"nodeType":"YulBlock","src":"20182:220:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20192:26:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20208:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20213:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20204:3:17"},"nodeType":"YulFunctionCall","src":"20204:14:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20196:4:17","type":""}]},{"nodeType":"YulBlock","src":"20228:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20272:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20302:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20309:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20298:3:17"},"nodeType":"YulFunctionCall","src":"20298:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20292:5:17"},"nodeType":"YulFunctionCall","src":"20292:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20276:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20356:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20374:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20379:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20370:3:17"},"nodeType":"YulFunctionCall","src":"20370:14:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"20328:27:17"},"nodeType":"YulFunctionCall","src":"20328:57:17"},"nodeType":"YulExpressionStatement","src":"20328:57:17"}]}]},"name":"abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20169:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20176:3:17","type":""}],"src":"20058:344:17"},{"body":{"nodeType":"YulBlock","src":"20564:182:17","statements":[{"nodeType":"YulAssignment","src":"20574:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20586:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20597:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20582:3:17"},"nodeType":"YulFunctionCall","src":"20582:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20574:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20712:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20725:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20736:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20721:3:17"},"nodeType":"YulFunctionCall","src":"20721:17:17"}],"functionName":{"name":"abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20610:101:17"},"nodeType":"YulFunctionCall","src":"20610:129:17"},"nodeType":"YulExpressionStatement","src":"20610:129:17"}]},"name":"abi_encode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr__to_t_struct$_ExtraArgsV1_$2596_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20536:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20548:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20559:4:17","type":""}],"src":"20408:338:17"},{"body":{"nodeType":"YulBlock","src":"20858:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20880:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20888:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20876:3:17"},"nodeType":"YulFunctionCall","src":"20876:14:17"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"20892:24:17","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20869:6:17"},"nodeType":"YulFunctionCall","src":"20869:48:17"},"nodeType":"YulExpressionStatement","src":"20869:48:17"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20850:6:17","type":""}],"src":"20752:172:17"},{"body":{"nodeType":"YulBlock","src":"21076:220:17","statements":[{"nodeType":"YulAssignment","src":"21086:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21152:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21157:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21093:58:17"},"nodeType":"YulFunctionCall","src":"21093:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21086:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21258:3:17"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"21169:88:17"},"nodeType":"YulFunctionCall","src":"21169:93:17"},"nodeType":"YulExpressionStatement","src":"21169:93:17"},{"nodeType":"YulAssignment","src":"21271:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21282:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21287:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21278:3:17"},"nodeType":"YulFunctionCall","src":"21278:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21271:3:17"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21064:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21072:3:17","type":""}],"src":"20930:366:17"},{"body":{"nodeType":"YulBlock","src":"21473:248:17","statements":[{"nodeType":"YulAssignment","src":"21483:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21495:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21506:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21491:3:17"},"nodeType":"YulFunctionCall","src":"21491:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21483:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21530:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21541:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21526:3:17"},"nodeType":"YulFunctionCall","src":"21526:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21549:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"21555:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21545:3:17"},"nodeType":"YulFunctionCall","src":"21545:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21519:6:17"},"nodeType":"YulFunctionCall","src":"21519:47:17"},"nodeType":"YulExpressionStatement","src":"21519:47:17"},{"nodeType":"YulAssignment","src":"21575:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21709:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21583:124:17"},"nodeType":"YulFunctionCall","src":"21583:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21575:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21453:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21468:4:17","type":""}],"src":"21302:419:17"},{"body":{"nodeType":"YulBlock","src":"21833:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21855:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21863:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21851:3:17"},"nodeType":"YulFunctionCall","src":"21851:14:17"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"21867:25:17","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21844:6:17"},"nodeType":"YulFunctionCall","src":"21844:49:17"},"nodeType":"YulExpressionStatement","src":"21844:49:17"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21825:6:17","type":""}],"src":"21727:173:17"},{"body":{"nodeType":"YulBlock","src":"22052:220:17","statements":[{"nodeType":"YulAssignment","src":"22062:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22128:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22133:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22069:58:17"},"nodeType":"YulFunctionCall","src":"22069:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22062:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22234:3:17"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"22145:88:17"},"nodeType":"YulFunctionCall","src":"22145:93:17"},"nodeType":"YulExpressionStatement","src":"22145:93:17"},{"nodeType":"YulAssignment","src":"22247:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22258:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22263:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22254:3:17"},"nodeType":"YulFunctionCall","src":"22254:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22247:3:17"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22040:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22048:3:17","type":""}],"src":"21906:366:17"},{"body":{"nodeType":"YulBlock","src":"22449:248:17","statements":[{"nodeType":"YulAssignment","src":"22459:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22471:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22482:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22467:3:17"},"nodeType":"YulFunctionCall","src":"22467:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22459:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22506:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22517:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22502:3:17"},"nodeType":"YulFunctionCall","src":"22502:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22525:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22531:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22521:3:17"},"nodeType":"YulFunctionCall","src":"22521:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22495:6:17"},"nodeType":"YulFunctionCall","src":"22495:47:17"},"nodeType":"YulExpressionStatement","src":"22495:47:17"},{"nodeType":"YulAssignment","src":"22551:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22685:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22559:124:17"},"nodeType":"YulFunctionCall","src":"22559:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22551:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22429:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22444:4:17","type":""}],"src":"22278:419:17"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_RaffleState_$3481(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_RaffleState_$3481(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RaffleState_$3481(value)\n    }\n\n    function convert_t_enum$_RaffleState_$3481_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RaffleState_$3481(value)\n    }\n\n    function abi_encode_t_enum$_RaffleState_$3481_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RaffleState_$3481_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_RaffleState_$3481__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RaffleState_$3481_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IVRFCoordinatorV2Plus_$2480__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IVRFCoordinatorV2Plus_$2480_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct VRFV2PlusClient.RandomWordsRequest -> struct VRFV2PlusClient.RandomWordsRequest\n    function abi_encode_t_struct$_RandomWordsRequest_$2609_memory_ptr_to_t_struct$_RandomWordsRequest_$2609_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // keyHash\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // subId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // requestConfirmations\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // callbackGasLimit\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // numWords\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // extraArgs\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_RandomWordsRequest_$2609_memory_ptr__to_t_struct$_RandomWordsRequest_$2609_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_RandomWordsRequest_$2609_memory_ptr_to_t_struct$_RandomWordsRequest_$2609_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct VRFV2PlusClient.ExtraArgsV1 -> struct VRFV2PlusClient.ExtraArgsV1\n    function abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // nativePayment\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExtraArgsV1_$2596_memory_ptr__to_t_struct$_ExtraArgsV1_$2596_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_ExtraArgsV1_$2596_memory_ptr_to_t_struct$_ExtraArgsV1_$2596_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3483":[{"length":32,"start":1024},{"length":32,"start":1283}],"3489":[{"length":32,"start":1842}],"3494":[{"length":32,"start":2000}],"3496":[{"length":32,"start":1913}],"3498":[{"length":32,"start":1951}],"3510":[{"length":32,"start":2308},{"length":32,"start":3462}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x9ECCACF6 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x3D1 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x8EA98117 EQ PUSH2 0x2EC JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x320229EB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x241 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x200 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x17AA JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP3 SWAP2 SWAP1 PUSH2 0x188D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xBA1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4F1 JUMPI CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH2 0xE39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD4E069500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x56F JUMPI PUSH2 0x56E PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x591 JUMPI PUSH2 0x590 PUSH2 0x139B JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7459AAB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8FC JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x703 JUMPI SELFBALANCE PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6C5 JUMPI PUSH2 0x6C4 PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x584327AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x139B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9B1C385E PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH2 0xFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x825 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH2 0x106C JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x97E JUMPI PUSH2 0x97D PUSH2 0x139B JUMP JUMPDEST JUMPDEST EQ SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x98B JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x994 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x99D JUMPI POP DUP1 JUMPDEST SWAP6 POP DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0xB78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC32 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xCA1 JUMPI CALLER PUSH2 0xC40 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0x61DB9C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC98 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xD1A6A14209A385A964D036E404CB5CFB71F4000CDB03C9366292430787261BE6 DUP2 PUSH1 0x40 MLOAD PUSH2 0xD77 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE6 JUMPI PUSH2 0xDE5 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE20 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0xE29 DUP2 PUSH2 0x1194 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xED1 JUMPI PUSH2 0xED0 PUSH2 0x139B JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF26 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xF3C SWAP3 SWAP2 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFA4 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH32 0x92FD13387C7FE7BEFBC38D303D6468778FB9731BC4583F17D92989C6FCFDEAAA DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x1DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1189 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F9 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1339 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1338 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x134A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x134B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x13DB JUMPI PUSH2 0x13DA PUSH2 0x139B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x13EC DUP3 PUSH2 0x13CA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC DUP3 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x13F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1427 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144A DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP2 EQ PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1467 DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14AF JUMPI PUSH2 0x14AE PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x1477 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP7 DUP3 DUP8 ADD PUSH2 0x1458 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x151A JUMPI PUSH2 0x1519 PUSH2 0x143C JUMP JUMPDEST JUMPDEST PUSH2 0x1526 DUP7 DUP3 DUP8 ADD PUSH2 0x147C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1548 JUMPI PUSH2 0x1547 PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1565 JUMPI PUSH2 0x1564 PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1580 PUSH2 0x1477 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x159F JUMPI PUSH2 0x159E PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15BD JUMPI PUSH2 0x15BC PUSH2 0x143C JUMP JUMPDEST JUMPDEST PUSH2 0x15C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1600 DUP3 PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1648 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1663 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x163F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16B7 DUP3 PUSH2 0x166E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16D6 JUMPI PUSH2 0x16D5 PUSH2 0x167F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E9 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP PUSH2 0x16F5 DUP3 DUP3 PUSH2 0x16AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH2 0x171E DUP3 PUSH2 0x166E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174D PUSH2 0x1748 DUP5 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x1669 JUMP JUMPDEST JUMPDEST PUSH2 0x1774 DUP5 DUP3 DUP6 PUSH2 0x172B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1791 JUMPI PUSH2 0x1790 PUSH2 0x146D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x173A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C0 JUMPI PUSH2 0x17BF PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x143C JUMP JUMPDEST JUMPDEST PUSH2 0x17EA DUP5 DUP3 DUP6 ADD PUSH2 0x177C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1808 DUP2 PUSH2 0x17F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1848 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x182D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185F DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x1869 DUP2 DUP6 PUSH2 0x1819 JUMP JUMPDEST SWAP4 POP PUSH2 0x1879 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x182A JUMP JUMPDEST PUSH2 0x1882 DUP2 PUSH2 0x166E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18A2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17FF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x18B4 DUP2 DUP5 PUSH2 0x1854 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 DUP2 PUSH2 0x15F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E3 DUP2 PUSH2 0x18BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FF JUMPI PUSH2 0x18FE PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190D DUP5 DUP3 DUP6 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193B PUSH2 0x1936 PUSH2 0x1931 DUP5 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x15D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D DUP3 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195F DUP3 PUSH2 0x1942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196F DUP2 PUSH2 0x1954 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x198A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH2 0x19A5 PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B4 DUP5 DUP3 DUP6 ADD PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x19DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19FB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x1A08 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x1A15 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1371 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A30 DUP2 PUSH2 0x1A1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A3F DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8F DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x1A99 DUP2 DUP6 PUSH2 0x1A73 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AA9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x182A JUMP JUMPDEST PUSH2 0x1AB2 DUP2 PUSH2 0x166E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1AD5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1A27 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1AE8 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1A36 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1AFB PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1A45 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1B0E PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1A64 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1B21 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1A64 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x1B39 DUP3 DUP3 PUSH2 0x1A84 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B60 DUP2 DUP5 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B77 DUP2 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 DUP5 DUP3 DUP6 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BE4 DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BEF DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C07 JUMPI PUSH2 0x1C06 PUSH2 0x1BAA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 PUSH1 0x16 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5F DUP3 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C83 DUP2 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C9F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1CAC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x1CB9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D2A DUP3 PUSH2 0x1367 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D35 DUP4 PUSH2 0x1367 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x1CF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x0 DUP4 PUSH2 0x1D50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP3 PUSH2 0x1D5E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x17F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1DBB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1D96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x16 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x17 DUP4 PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EAD DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xF9 PUSH32 0x5D9F9ABDE07ED8CB086611FA8305605BC0325ADF6FF1DB2A46FAF009A064736F PUSH13 0x63430008130033000000000000 ","sourceMap":"922:6306:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6308:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7489:280:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2966:539:15;;;:::i;:::-;;6918:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:952;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6517:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6721:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7023:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3924:534;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1026:316:2;;;;;;;;;;;;;:::i;:::-;;1382:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7831:276:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7139:87:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6077:45:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6407:104:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:98:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6812:100:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6308:93;6355:7;6381:13;6374:20;;6308:93;:::o;6618:97::-;6665:11;6695:13;;;;;;;;;;;6688:20;;6618:97;:::o;7489:280:9:-;7612:16;;;;;;;;;;;7590:39;;:10;:39;;;7586:131;;7672:10;7692:16;;;;;;;;;;;7646:64;;;;;;;;;;;;:::i;:::-;;;;;;;;7586:131;7722:42;7741:9;7752:11;;7722:18;:42::i;:::-;7489:280;;;:::o;2966:539:15:-;3193:13;3181:9;:25;3177:92;;;3229:29;;;;;;;;;;;;;;3177:92;3348:16;3331:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;3327:88;;3387:17;;;;;;;;;;;;;;3327:88;3425:9;3448:10;3425:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3487:10;3475:23;;;;;;;;;;;;2966:539::o;6918:99::-;6969:7;6995:15;;6988:22;;6918:99;:::o;4504:952::-;4588:17;4611:15;;;;;;;;;;;;;:11;:15::i;:::-;4587:39;;;4641:12;4636:201;;4717:21;4756:9;:16;;;;4798:13;;;;;;;;;;;4790:22;;;;;;;;:::i;:::-;;4676:150;;;;;;;;;;;;;:::i;:::-;;;;;;;;4636:201;4863:23;4847:13;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4896:17;4916:16;:35;;;4965:427;;;;;;;;5027:9;4965:427;;;;5061:16;4965:427;;;;1451:1;4965:427;;;;;;5174:18;4965:427;;;;;;1766:1;4965:427;;;;;;;;5258:119;5308:51;;;;;;;;5352:5;5308:51;;;;;5258:28;:119::i;:::-;4965:427;;;4916:486;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4896:506;;5439:9;5417:32;;;;;;;;;;4577:879;;4504:952;;:::o;6517:95::-;6565:7;6591:14;;;;;;;;;;;6584:21;;6517:95;:::o;6721:85::-;6765:6;1766:1;6783:16;;6721:85;:::o;7023:110::-;7079:7;1451:1;7098:28;;;;7023:110;:::o;3924:534::-;4051:17;4070:12;4114:15;4170:10;4151:15;;4133;:33;;;;:::i;:::-;4132:48;4114:66;;4190:15;4227:1;4208:9;:16;;;;:20;4190:38;;4238:15;4280:1;4256:21;:25;4238:43;;4291:11;4322:16;4305:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;4291:47;;4364:10;:24;;;;;4378:10;4364:24;:38;;;;;4392:10;4364:38;:48;;;;;4406:6;4364:48;4348:65;;4431:12;4423:28;;;;;;;;;;;;;;;;;;;;;;;;;3924:534;;;:::o;1026:316:2:-;1150:14;;;;;;;;;;;1136:28;;:10;:28;;;1128:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:16;1217:7;;;;;;;;;;;1198:26;;1240:10;1230:7;;:20;;;;;;;;;;;;;;;;;;1281:1;1256:14;;:27;;;;;;;;;;;;;;;;;;1326:10;1295:42;;1316:8;1295:42;;;;;;;;;;;;1071:271;1026:316::o;1382:81::-;1429:7;1451;;;;;;;;;;;1444:14;;1382:81;:::o;7831:276:9:-;8169:7;:5;:7::i;:::-;8155:21;;:10;:21;;;;:64;;;;;8202:16;;;;;;;;;;;8180:39;;:10;:39;;;;8155:64;8151:162;;;8259:10;8271:7;:5;:7::i;:::-;8288:16;;;;;;;;;;;8236:70;;;;;;;;;;;;;:::i;:::-;;;;;;;;8151:162;7958:1:::1;7931:29;;:15;:29;;::::0;7927:70:::1;;7977:13;;;;;;;;;;;;;;7927:70;8043:15;8002:16;;:57;;;;;;;;;;;;;;;;;;8071:31;8086:15;8071:31;;;;;;:::i;:::-;;;;;;;;7831:276:::0;:::o;7139:87:15:-;7183:7;7209:10;7202:17;;7139:87;:::o;6077:45:9:-;;;;;;;;;;;;;:::o;6407:104:15:-;6462:7;6488:9;6498:5;6488:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6481:23;;6407:104;;;:::o;847:98:2:-;2075:20;:18;:20::i;:::-;918:22:::1;937:2;918:18;:22::i;:::-;847:98:::0;:::o;6812:100:15:-;6863:7;6889:9;:16;;;;6882:23;;6812:100;:::o;5484:754::-;5619:21;5661:9;:16;;;;5643:12;;5656:1;5643:15;;;;;;;:::i;:::-;;;;;;;;:34;;;;:::i;:::-;5619:58;;5687:28;5718:9;5728:13;5718:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5687:55;;5768:16;5752:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5812:15;5794;:33;;;;5960:1;5938:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5926:9;:36;;;;;;;;;;;;:::i;:::-;;5989:12;5972:14;;:29;;;;;;;;;;;;;;;;;;6042:12;6060;:17;;6085:21;6060:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6041:70;;;6126:7;6121:70;;6156:24;;;;;;;;;;;;;;6121:70;6218:12;6205:26;;;;;;;;;;;;5609:629;;;5484:754;;;:::o;475:163:13:-;550:16;211:28;623:9;581:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:59;;475:163;;;:::o;1809:162:2:-;1932:7;;;;;;;;;;1918:21;;:10;:21;;;1910:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:162::o;1536:239::-;1655:10;1649:16;;:2;:16;;;1641:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:2;1700:14;;:19;;;;;;;;;;;;;;;;;;1767:2;1731:39;;1758:7;;;;;;;;;;1731:39;;;;;;;;;;;;1536:239;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:17:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:121;717:1;710:5;707:12;697:46;;723:18;;:::i;:::-;697:46;628:121;:::o;755:143::-;808:7;837:5;826:16;;843:49;886:5;843:49;:::i;:::-;755:143;;;:::o;904:::-;968:9;1001:40;1035:5;1001:40;:::i;:::-;988:53;;904:143;;;:::o;1053:159::-;1154:51;1199:5;1154:51;:::i;:::-;1149:3;1142:64;1053:159;;:::o;1218:250::-;1325:4;1363:2;1352:9;1348:18;1340:26;;1376:85;1458:1;1447:9;1443:17;1434:6;1376:85;:::i;:::-;1218:250;;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:117::-;1664:1;1661;1654:12;1678:117;1787:1;1784;1777:12;1801:122;1874:24;1892:5;1874:24;:::i;:::-;1867:5;1864:35;1854:63;;1913:1;1910;1903:12;1854:63;1801:122;:::o;1929:139::-;1975:5;2013:6;2000:20;1991:29;;2029:33;2056:5;2029:33;:::i;:::-;1929:139;;;;:::o;2074:117::-;2183:1;2180;2173:12;2197:117;2306:1;2303;2296:12;2320:117;2429:1;2426;2419:12;2460:568;2533:8;2543:6;2593:3;2586:4;2578:6;2574:17;2570:27;2560:122;;2601:79;;:::i;:::-;2560:122;2714:6;2701:20;2691:30;;2744:18;2736:6;2733:30;2730:117;;;2766:79;;:::i;:::-;2730:117;2880:4;2872:6;2868:17;2856:29;;2934:3;2926:4;2918:6;2914:17;2904:8;2900:32;2897:41;2894:128;;;2941:79;;:::i;:::-;2894:128;2460:568;;;;;:::o;3034:704::-;3129:6;3137;3145;3194:2;3182:9;3173:7;3169:23;3165:32;3162:119;;;3200:79;;:::i;:::-;3162:119;3320:1;3345:53;3390:7;3381:6;3370:9;3366:22;3345:53;:::i;:::-;3335:63;;3291:117;3475:2;3464:9;3460:18;3447:32;3506:18;3498:6;3495:30;3492:117;;;3528:79;;:::i;:::-;3492:117;3641:80;3713:7;3704:6;3693:9;3689:22;3641:80;:::i;:::-;3623:98;;;;3418:313;3034:704;;;;;:::o;3757:552::-;3814:8;3824:6;3874:3;3867:4;3859:6;3855:17;3851:27;3841:122;;3882:79;;:::i;:::-;3841:122;3995:6;3982:20;3972:30;;4025:18;4017:6;4014:30;4011:117;;;4047:79;;:::i;:::-;4011:117;4161:4;4153:6;4149:17;4137:29;;4215:3;4207:4;4199:6;4195:17;4185:8;4181:32;4178:41;4175:128;;;4222:79;;:::i;:::-;4175:128;3757:552;;;;;:::o;4315:527::-;4385:6;4393;4442:2;4430:9;4421:7;4417:23;4413:32;4410:119;;;4448:79;;:::i;:::-;4410:119;4596:1;4585:9;4581:17;4568:31;4626:18;4618:6;4615:30;4612:117;;;4648:79;;:::i;:::-;4612:117;4761:64;4817:7;4808:6;4797:9;4793:22;4761:64;:::i;:::-;4743:82;;;;4539:296;4315:527;;;;;:::o;4848:126::-;4885:7;4925:42;4918:5;4914:54;4903:65;;4848:126;;;:::o;4980:96::-;5017:7;5046:24;5064:5;5046:24;:::i;:::-;5035:35;;4980:96;;;:::o;5082:118::-;5169:24;5187:5;5169:24;:::i;:::-;5164:3;5157:37;5082:118;;:::o;5206:222::-;5299:4;5337:2;5326:9;5322:18;5314:26;;5350:71;5418:1;5407:9;5403:17;5394:6;5350:71;:::i;:::-;5206:222;;;;:::o;5434:89::-;5470:7;5510:6;5503:5;5499:18;5488:29;;5434:89;;;:::o;5529:115::-;5614:23;5631:5;5614:23;:::i;:::-;5609:3;5602:36;5529:115;;:::o;5650:218::-;5741:4;5779:2;5768:9;5764:18;5756:26;;5792:69;5858:1;5847:9;5843:17;5834:6;5792:69;:::i;:::-;5650:218;;;;:::o;5874:117::-;5983:1;5980;5973:12;5997:102;6038:6;6089:2;6085:7;6080:2;6073:5;6069:14;6065:28;6055:38;;5997:102;;;:::o;6105:180::-;6153:77;6150:1;6143:88;6250:4;6247:1;6240:15;6274:4;6271:1;6264:15;6291:281;6374:27;6396:4;6374:27;:::i;:::-;6366:6;6362:40;6504:6;6492:10;6489:22;6468:18;6456:10;6453:34;6450:62;6447:88;;;6515:18;;:::i;:::-;6447:88;6555:10;6551:2;6544:22;6334:238;6291:281;;:::o;6578:129::-;6612:6;6639:20;;:::i;:::-;6629:30;;6668:33;6696:4;6688:6;6668:33;:::i;:::-;6578:129;;;:::o;6713:307::-;6774:4;6864:18;6856:6;6853:30;6850:56;;;6886:18;;:::i;:::-;6850:56;6924:29;6946:6;6924:29;:::i;:::-;6916:37;;7008:4;7002;6998:15;6990:23;;6713:307;;;:::o;7026:146::-;7123:6;7118:3;7113;7100:30;7164:1;7155:6;7150:3;7146:16;7139:27;7026:146;;;:::o;7178:423::-;7255:5;7280:65;7296:48;7337:6;7296:48;:::i;:::-;7280:65;:::i;:::-;7271:74;;7368:6;7361:5;7354:21;7406:4;7399:5;7395:16;7444:3;7435:6;7430:3;7426:16;7423:25;7420:112;;;7451:79;;:::i;:::-;7420:112;7541:54;7588:6;7583:3;7578;7541:54;:::i;:::-;7261:340;7178:423;;;;;:::o;7620:338::-;7675:5;7724:3;7717:4;7709:6;7705:17;7701:27;7691:122;;7732:79;;:::i;:::-;7691:122;7849:6;7836:20;7874:78;7948:3;7940:6;7933:4;7925:6;7921:17;7874:78;:::i;:::-;7865:87;;7681:277;7620:338;;;;:::o;7964:507::-;8032:6;8081:2;8069:9;8060:7;8056:23;8052:32;8049:119;;;8087:79;;:::i;:::-;8049:119;8235:1;8224:9;8220:17;8207:31;8265:18;8257:6;8254:30;8251:117;;;8287:79;;:::i;:::-;8251:117;8392:62;8446:7;8437:6;8426:9;8422:22;8392:62;:::i;:::-;8382:72;;8178:286;7964:507;;;;:::o;8477:90::-;8511:7;8554:5;8547:13;8540:21;8529:32;;8477:90;;;:::o;8573:109::-;8654:21;8669:5;8654:21;:::i;:::-;8649:3;8642:34;8573:109;;:::o;8688:98::-;8739:6;8773:5;8767:12;8757:22;;8688:98;;;:::o;8792:168::-;8875:11;8909:6;8904:3;8897:19;8949:4;8944:3;8940:14;8925:29;;8792:168;;;;:::o;8966:246::-;9047:1;9057:113;9071:6;9068:1;9065:13;9057:113;;;9156:1;9151:3;9147:11;9141:18;9137:1;9132:3;9128:11;9121:39;9093:2;9090:1;9086:10;9081:15;;9057:113;;;9204:1;9195:6;9190:3;9186:16;9179:27;9028:184;8966:246;;;:::o;9218:373::-;9304:3;9332:38;9364:5;9332:38;:::i;:::-;9386:70;9449:6;9444:3;9386:70;:::i;:::-;9379:77;;9465:65;9523:6;9518:3;9511:4;9504:5;9500:16;9465:65;:::i;:::-;9555:29;9577:6;9555:29;:::i;:::-;9550:3;9546:39;9539:46;;9308:283;9218:373;;;;:::o;9597:407::-;9730:4;9768:2;9757:9;9753:18;9745:26;;9781:65;9843:1;9832:9;9828:17;9819:6;9781:65;:::i;:::-;9893:9;9887:4;9883:20;9878:2;9867:9;9863:18;9856:48;9921:76;9992:4;9983:6;9921:76;:::i;:::-;9913:84;;9597:407;;;;;:::o;10010:122::-;10083:24;10101:5;10083:24;:::i;:::-;10076:5;10073:35;10063:63;;10122:1;10119;10112:12;10063:63;10010:122;:::o;10138:139::-;10184:5;10222:6;10209:20;10200:29;;10238:33;10265:5;10238:33;:::i;:::-;10138:139;;;;:::o;10283:329::-;10342:6;10391:2;10379:9;10370:7;10366:23;10362:32;10359:119;;;10397:79;;:::i;:::-;10359:119;10517:1;10542:53;10587:7;10578:6;10567:9;10563:22;10542:53;:::i;:::-;10532:63;;10488:117;10283:329;;;;:::o;10618:60::-;10646:3;10667:5;10660:12;;10618:60;;;:::o;10684:142::-;10734:9;10767:53;10785:34;10794:24;10812:5;10794:24;:::i;:::-;10785:34;:::i;:::-;10767:53;:::i;:::-;10754:66;;10684:142;;;:::o;10832:126::-;10882:9;10915:37;10946:5;10915:37;:::i;:::-;10902:50;;10832:126;;;:::o;10964:156::-;11044:9;11077:37;11108:5;11077:37;:::i;:::-;11064:50;;10964:156;;;:::o;11126:191::-;11243:67;11304:5;11243:67;:::i;:::-;11238:3;11231:80;11126:191;;:::o;11323:282::-;11446:4;11484:2;11473:9;11469:18;11461:26;;11497:101;11595:1;11584:9;11580:17;11571:6;11497:101;:::i;:::-;11323:282;;;;:::o;11611:329::-;11670:6;11719:2;11707:9;11698:7;11694:23;11690:32;11687:119;;;11725:79;;:::i;:::-;11687:119;11845:1;11870:53;11915:7;11906:6;11895:9;11891:22;11870:53;:::i;:::-;11860:63;;11816:117;11611:329;;;;:::o;11946:332::-;12067:4;12105:2;12094:9;12090:18;12082:26;;12118:71;12186:1;12175:9;12171:17;12162:6;12118:71;:::i;:::-;12199:72;12267:2;12256:9;12252:18;12243:6;12199:72;:::i;:::-;11946:332;;;;;:::o;12284:442::-;12433:4;12471:2;12460:9;12456:18;12448:26;;12484:71;12552:1;12541:9;12537:17;12528:6;12484:71;:::i;:::-;12565:72;12633:2;12622:9;12618:18;12609:6;12565:72;:::i;:::-;12647;12715:2;12704:9;12700:18;12691:6;12647:72;:::i;:::-;12284:442;;;;;;:::o;12732:77::-;12769:7;12798:5;12787:16;;12732:77;;;:::o;12815:108::-;12892:24;12910:5;12892:24;:::i;:::-;12887:3;12880:37;12815:108;;:::o;12929:::-;13006:24;13024:5;13006:24;:::i;:::-;13001:3;12994:37;12929:108;;:::o;13043:105::-;13118:23;13135:5;13118:23;:::i;:::-;13113:3;13106:36;13043:105;;:::o;13154:93::-;13190:7;13230:10;13223:5;13219:22;13208:33;;13154:93;;;:::o;13253:105::-;13328:23;13345:5;13328:23;:::i;:::-;13323:3;13316:36;13253:105;;:::o;13364:158::-;13437:11;13471:6;13466:3;13459:19;13511:4;13506:3;13502:14;13487:29;;13364:158;;;;:::o;13528:353::-;13604:3;13632:38;13664:5;13632:38;:::i;:::-;13686:60;13739:6;13734:3;13686:60;:::i;:::-;13679:67;;13755:65;13813:6;13808:3;13801:4;13794:5;13790:16;13755:65;:::i;:::-;13845:29;13867:6;13845:29;:::i;:::-;13840:3;13836:39;13829:46;;13608:273;13528:353;;;;:::o;13981:1357::-;14122:3;14158:4;14153:3;14149:14;14248:4;14241:5;14237:16;14231:23;14267:63;14324:4;14319:3;14315:14;14301:12;14267:63;:::i;:::-;14173:167;14423:4;14416:5;14412:16;14406:23;14442:63;14499:4;14494:3;14490:14;14476:12;14442:63;:::i;:::-;14350:165;14613:4;14606:5;14602:16;14596:23;14632:61;14687:4;14682:3;14678:14;14664:12;14632:61;:::i;:::-;14525:178;14797:4;14790:5;14786:16;14780:23;14816:61;14871:4;14866:3;14862:14;14848:12;14816:61;:::i;:::-;14713:174;14973:4;14966:5;14962:16;14956:23;14992:61;15047:4;15042:3;15038:14;15024:12;14992:61;:::i;:::-;14897:166;15150:4;15143:5;15139:16;15133:23;15203:3;15197:4;15193:14;15186:4;15181:3;15177:14;15170:38;15229:71;15295:4;15281:12;15229:71;:::i;:::-;15221:79;;15073:238;15328:4;15321:11;;14127:1211;13981:1357;;;;:::o;15344:417::-;15509:4;15547:2;15536:9;15532:18;15524:26;;15596:9;15590:4;15586:20;15582:1;15571:9;15567:17;15560:47;15624:130;15749:4;15740:6;15624:130;:::i;:::-;15616:138;;15344:417;;;;:::o;15767:143::-;15824:5;15855:6;15849:13;15840:22;;15871:33;15898:5;15871:33;:::i;:::-;15767:143;;;;:::o;15916:351::-;15986:6;16035:2;16023:9;16014:7;16010:23;16006:32;16003:119;;;16041:79;;:::i;:::-;16003:119;16161:1;16186:64;16242:7;16233:6;16222:9;16218:22;16186:64;:::i;:::-;16176:74;;16132:128;15916:351;;;;:::o;16273:180::-;16321:77;16318:1;16311:88;16418:4;16415:1;16408:15;16442:4;16439:1;16432:15;16459:194;16499:4;16519:20;16537:1;16519:20;:::i;:::-;16514:25;;16553:20;16571:1;16553:20;:::i;:::-;16548:25;;16597:1;16594;16590:9;16582:17;;16621:1;16615:4;16612:11;16609:37;;;16626:18;;:::i;:::-;16609:37;16459:194;;;;:::o;16659:169::-;16743:11;16777:6;16772:3;16765:19;16817:4;16812:3;16808:14;16793:29;;16659:169;;;;:::o;16834:172::-;16974:24;16970:1;16962:6;16958:14;16951:48;16834:172;:::o;17012:366::-;17154:3;17175:67;17239:2;17234:3;17175:67;:::i;:::-;17168:74;;17251:93;17340:3;17251:93;:::i;:::-;17369:2;17364:3;17360:12;17353:19;;17012:366;;;:::o;17384:419::-;17550:4;17588:2;17577:9;17573:18;17565:26;;17637:9;17631:4;17627:20;17623:1;17612:9;17608:17;17601:47;17665:131;17791:4;17665:131;:::i;:::-;17657:139;;17384:419;;;:::o;17809:442::-;17958:4;17996:2;17985:9;17981:18;17973:26;;18009:71;18077:1;18066:9;18062:17;18053:6;18009:71;:::i;:::-;18090:72;18158:2;18147:9;18143:18;18134:6;18090:72;:::i;:::-;18172;18240:2;18229:9;18225:18;18216:6;18172:72;:::i;:::-;17809:442;;;;;;:::o;18257:180::-;18305:77;18302:1;18295:88;18402:4;18399:1;18392:15;18426:4;18423:1;18416:15;18443:180;18491:77;18488:1;18481:88;18588:4;18585:1;18578:15;18612:4;18609:1;18602:15;18629:176;18661:1;18678:20;18696:1;18678:20;:::i;:::-;18673:25;;18712:20;18730:1;18712:20;:::i;:::-;18707:25;;18751:1;18741:35;;18756:18;;:::i;:::-;18741:35;18797:1;18794;18790:9;18785:14;;18629:176;;;;:::o;18811:147::-;18912:11;18949:3;18934:18;;18811:147;;;;:::o;18964:114::-;;:::o;19084:398::-;19243:3;19264:83;19345:1;19340:3;19264:83;:::i;:::-;19257:90;;19356:93;19445:3;19356:93;:::i;:::-;19474:1;19469:3;19465:11;19458:18;;19084:398;;;:::o;19488:379::-;19672:3;19694:147;19837:3;19694:147;:::i;:::-;19687:154;;19858:3;19851:10;;19488:379;;;:::o;19873:99::-;19944:21;19959:5;19944:21;:::i;:::-;19939:3;19932:34;19873:99;;:::o;20058:344::-;20213:4;20208:3;20204:14;20309:4;20302:5;20298:16;20292:23;20328:57;20379:4;20374:3;20370:14;20356:12;20328:57;:::i;:::-;20228:167;20182:220;20058:344;;:::o;20408:338::-;20559:4;20597:2;20586:9;20582:18;20574:26;;20610:129;20736:1;20725:9;20721:17;20712:6;20610:129;:::i;:::-;20408:338;;;;:::o;20752:172::-;20892:24;20888:1;20880:6;20876:14;20869:48;20752:172;:::o;20930:366::-;21072:3;21093:67;21157:2;21152:3;21093:67;:::i;:::-;21086:74;;21169:93;21258:3;21169:93;:::i;:::-;21287:2;21282:3;21278:12;21271:19;;20930:366;;;:::o;21302:419::-;21468:4;21506:2;21495:9;21491:18;21483:26;;21555:9;21549:4;21545:20;21541:1;21530:9;21526:17;21519:47;21583:131;21709:4;21583:131;:::i;:::-;21575:139;;21302:419;;;:::o;21727:173::-;21867:25;21863:1;21855:6;21851:14;21844:49;21727:173;:::o;21906:366::-;22048:3;22069:67;22133:2;22128:3;22069:67;:::i;:::-;22062:74;;22145:93;22234:3;22145:93;:::i;:::-;22263:2;22258:3;22254:12;22247:19;;21906:366;;;:::o;22278:419::-;22444:4;22482:2;22471:9;22467:18;22459:26;;22531:9;22525:4;22521:20;22517:1;22506:9;22502:17;22495:47;22559:131;22685:4;22559:131;:::i;:::-;22551:139;;22278:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1582800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54585","checkUpkeep(bytes)":"infinite","enterRaffle()":"infinite","getEntranceFee()":"infinite","getInterval()":"infinite","getLatestTimeStamp()":"2460","getNumWords()":"432","getNumberOfPlayers()":"2555","getPlayer(uint256)":"5033","getRaffleState()":"2664","getRecentWinner()":"2589","getRequestConfirmations()":"454","owner()":"2589","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","s_vrfCoordinator()":"infinite","setCoordinator(address)":"infinite","transferOwnership(address)":"30742"},"internal":{"fulfillRandomWords(uint256,uint256[] calldata)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","checkUpkeep(bytes)":"6e04ff0d","enterRaffle()":"2cfcc539","getEntranceFee()":"09bc33a7","getInterval()":"91ad27b4","getLatestTimeStamp()":"320229eb","getNumWords()":"53a2c19a","getNumberOfPlayers()":"fd6673f5","getPlayer(uint256)":"e55ae4e8","getRaffleState()":"115cbaf5","getRecentWinner()":"473f1ddc","getRequestConfirmations()":"5f1b0fd8","owner()":"8da5cb5b","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_vrfCoordinator()":"9eccacf6","setCoordinator(address)":"8ea98117","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2_5\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__NOTOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__NotEnoughETHEntered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffleState\",\"type\":\"uint256\"}],\"name\":\"Raffle__UpkeepNotNeeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleState\",\"outputs\":[{\"internalType\":\"enum Raffle.RaffleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"checkUpkeep(bytes)\":{\"notice\":\"This is the function that the Chainlink Automation node calls to check if the upkeep is needed. The following should be true for this to return true: 1. The time interval has passed between raffle runs 2. The lottery should have at leat one player and have some TTH 3. Our subscription is funded with LINK 4. The lottery should be in an open state\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line gas-custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x7c71fcc0e9b596196c599468338a3289f4ca1e2fcf8cad721ae48a9b562af79c\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/SubscriptionAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {EnumerableSet} from \\\"../../vendor/openzeppelin-solidity/v4.7.3/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport {LinkTokenInterface} from \\\"../../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IERC677Receiver} from \\\"../../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./interfaces/IVRFSubscriptionV2Plus.sol\\\";\\n\\nabstract contract SubscriptionAPI is ConfirmedOwner, IERC677Receiver, IVRFSubscriptionV2Plus {\\n  using EnumerableSet for EnumerableSet.UintSet;\\n\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  LinkTokenInterface public LINK;\\n  /// @dev may not be provided upon construction on some chains due to lack of availability\\n  AggregatorV3Interface public LINK_NATIVE_FEED;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint256 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  event NativeFundsRecovered(address to, uint256 amount);\\n  error LinkAlreadySet();\\n  error FailedToSendNative();\\n  error FailedToTransferLink();\\n  error IndexOutOfRange();\\n  error LinkNotSet();\\n\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    // a uint96 is large enough to hold around ~8e28 wei, or 80 billion ether.\\n    // That should be enough to cover most (if not all) subscriptions.\\n    uint96 nativeBalance; // Common native balance used for all consumer requests.\\n    uint64 reqCount;\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  struct ConsumerConfig {\\n    bool active;\\n    uint64 nonce;\\n    uint64 pendingReqCount;\\n  }\\n  // Note a nonce of 0 indicates the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint256 => ConsumerConfig)) /* consumerAddress */ /* subId */ /* consumerConfig */\\n    internal s_consumers;\\n  mapping(uint256 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ internal s_subscriptionConfigs;\\n  mapping(uint256 => Subscription) /* subId */ /* subscription */ internal s_subscriptions;\\n  // subscription nonce used to construct subId. Rises monotonically\\n  uint64 public s_currentSubNonce;\\n  // track all subscription id's that were created by this contract\\n  // note: access should be through the getActiveSubscriptionIds() view function\\n  // which takes a starting index and a max number to fetch in order to allow\\n  // \\\"pagination\\\" of the subscription ids. in the event a very large number of\\n  // subscription id's are stored in this set, they cannot be retrieved in a\\n  // single RPC call without violating various size limits.\\n  EnumerableSet.UintSet internal s_subIds;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 public s_totalBalance;\\n  // s_totalNativeBalance tracks the total native sent to/from\\n  // this contract through fundSubscription, cancelSubscription and oracleWithdrawNative.\\n  // A discrepancy with this contract's native balance indicates someone\\n  // sent native using transfer and so we may need to use recoverNativeFunds.\\n  uint96 public s_totalNativeBalance;\\n  uint96 internal s_withdrawableTokens;\\n  uint96 internal s_withdrawableNative;\\n\\n  event SubscriptionCreated(uint256 indexed subId, address owner);\\n  event SubscriptionFunded(uint256 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionFundedWithNative(uint256 indexed subId, uint256 oldNativeBalance, uint256 newNativeBalance);\\n  event SubscriptionConsumerAdded(uint256 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint256 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint256 indexed subId, address to, uint256 amountLink, uint256 amountNative);\\n  event SubscriptionOwnerTransferRequested(uint256 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint256 indexed subId, address from, address to);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    // The recommended number is below, though it may vary slightly\\n    // if certain chains do not implement certain EIP's.\\n    // 21000 + // base cost of the transaction\\n    // 100 + 5000 + // warm subscription balance read and update. See https://eips.ethereum.org/EIPS/eip-2929\\n    // 2*2100 + 5000 - // cold read oracle address and oracle balance and first time oracle balance update, note first time will be 20k, but 5k subsequently\\n    // 4800 + // request delete refund (refunds happen after execution), note pre-london fork was 15k. See https://eips.ethereum.org/EIPS/eip-3529\\n    // 6685 + // Positive static costs of argument encoding etc. note that it varies by +/- x*12 for every x bytes of non-zero data in the proof.\\n    // Total: 37,185 gas.\\n    uint32 gasAfterPaymentCalculation;\\n    // Flat fee charged per fulfillment in millionths of native.\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeNativePPM;\\n    // Discount relative to fulfillmentFlatFeeNativePPM for link payment in millionths of native\\n    // Should not exceed fulfillmentFlatFeeNativePPM\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkDiscountPPM;\\n    // nativePremiumPercentage is the percentage of the total gas costs that is added to the final premium for native payment\\n    // nativePremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 nativePremiumPercentage;\\n    // linkPremiumPercentage is the percentage of total gas costs that is added to the final premium for link payment\\n    // linkPremiumPercentage = 10 means 10% of the total gas costs is added. only integral percentage is allowed\\n    uint8 linkPremiumPercentage;\\n  }\\n  Config public s_config;\\n\\n  error Reentrant();\\n  modifier nonReentrant() {\\n    _nonReentrant();\\n    _;\\n  }\\n\\n  function _nonReentrant() internal view {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n  }\\n\\n  function _requireSufficientBalance(bool condition) internal pure {\\n    if (!condition) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function _requireValidSubscription(address subOwner) internal pure {\\n    if (subOwner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n  }\\n  constructor() ConfirmedOwner(msg.sender) {}\\n\\n  /**\\n   * @notice set the LINK token contract and link native feed to be\\n   * used by this coordinator\\n   * @param link - address of link token\\n   * @param linkNativeFeed address of the link native feed\\n   */\\n  function setLINKAndLINKNativeFeed(address link, address linkNativeFeed) external onlyOwner {\\n    // Disallow re-setting link token because the logic wouldn't really make sense\\n    if (address(LINK) != address(0)) {\\n      revert LinkAlreadySet();\\n    }\\n    LINK = LinkTokenInterface(link);\\n    LINK_NATIVE_FEED = AggregatorV3Interface(linkNativeFeed);\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint256 subId) external onlyOwner {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    _cancelSubscriptionHelper(subId, subOwner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    // If LINK is not set, we cannot recover funds.\\n    // It is possible that this coordinator address was funded with LINK\\n    // by accident by a user but the LINK token needs to be set first\\n    // before we can recover it.\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      if (!LINK.transfer(to, amount)) {\\n        revert FailedToTransferLink();\\n      }\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @notice Recover native sent with transfer/call/send instead of fundSubscription.\\n   * @param to address to send native to\\n   */\\n  function recoverNativeFunds(address payable to) external onlyOwner {\\n    uint256 externalBalance = address(this).balance;\\n    uint256 internalBalance = uint256(s_totalNativeBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      (bool sent, ) = to.call{value: amount}(\\\"\\\");\\n      if (!sent) {\\n        revert FailedToSendNative();\\n      }\\n      emit NativeFundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /*\\n   * @notice withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdraw(address recipient) external nonReentrant onlyOwner {\\n    if (address(LINK) == address(0)) {\\n      revert LinkNotSet();\\n    }\\n    uint96 amount = s_withdrawableTokens;\\n    _requireSufficientBalance(amount > 0);\\n    s_withdrawableTokens = 0;\\n    s_totalBalance -= amount;\\n    _requireSufficientBalance(LINK.transfer(recipient, amount));\\n  }\\n\\n  /*\\n   * @notice withdraw native earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function withdrawNative(address payable recipient) external nonReentrant onlyOwner {\\n    uint96 amount = s_withdrawableNative;\\n    _requireSufficientBalance(amount > 0);\\n    // Prevent re-entrancy by updating state before transfer.\\n    s_withdrawableNative = 0;\\n    s_totalNativeBalance -= amount;\\n    _mustSendNative(recipient, amount);\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint256 subId = abi.decode(data, (uint256));\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable override nonReentrant {\\n    _requireValidSubscription(s_subscriptionConfigs[subId].owner);\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    // We also do not check that msg.value > 0, since that's just a no-op\\n    // and would be a waste of gas on the caller's part.\\n    uint256 oldNativeBalance = s_subscriptions[subId].nativeBalance;\\n    s_subscriptions[subId].nativeBalance += uint96(msg.value);\\n    s_totalNativeBalance += uint96(msg.value);\\n    emit SubscriptionFundedWithNative(subId, oldNativeBalance, oldNativeBalance + msg.value);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    public\\n    view\\n    override\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address subOwner, address[] memory consumers)\\n  {\\n    subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].nativeBalance,\\n      s_subscriptions[subId].reqCount,\\n      subOwner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function getActiveSubscriptionIds(\\n    uint256 startIndex,\\n    uint256 maxCount\\n  ) external view override returns (uint256[] memory ids) {\\n    uint256 numSubs = s_subIds.length();\\n    if (startIndex >= numSubs) revert IndexOutOfRange();\\n    uint256 endIndex = startIndex + maxCount;\\n    endIndex = endIndex > numSubs || maxCount == 0 ? numSubs : endIndex;\\n    uint256 idsLength = endIndex - startIndex;\\n    ids = new uint256[](idsLength);\\n    for (uint256 idx = 0; idx < idsLength; ++idx) {\\n      ids[idx] = s_subIds.at(idx + startIndex);\\n    }\\n    return ids;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function createSubscription() external override nonReentrant returns (uint256 subId) {\\n    // Generate a subscription id that is globally unique.\\n    uint64 currentSubNonce = s_currentSubNonce;\\n    subId = uint256(\\n      keccak256(abi.encodePacked(msg.sender, blockhash(block.number - 1), address(this), currentSubNonce))\\n    );\\n    // Increment the subscription nonce counter.\\n    s_currentSubNonce = currentSubNonce + 1;\\n    // Initialize storage variables.\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[subId] = Subscription({balance: 0, nativeBalance: 0, reqCount: 0});\\n    s_subscriptionConfigs[subId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n    // Update the s_subIds set, which tracks all subscription ids created in this contract.\\n    s_subIds.add(subId);\\n\\n    emit SubscriptionCreated(subId, msg.sender);\\n    return subId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint256 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    SubscriptionConfig storage subscriptionConfig = s_subscriptionConfigs[subId];\\n    if (subscriptionConfig.requestedOwner != newOwner) {\\n      subscriptionConfig.requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external override nonReentrant {\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(oldOwner);\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function addConsumer(uint256 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    ConsumerConfig storage consumerConfig = s_consumers[consumer][subId];\\n    if (consumerConfig.active) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Already maxed, cannot add any more consumers.\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    if (consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    // consumerConfig.nonce is 0 if the consumer had never sent a request to this subscription\\n    // otherwise, consumerConfig.nonce is non-zero\\n    // in both cases, use consumerConfig.nonce as is and set active status to true\\n    consumerConfig.active = true;\\n    consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  function _deleteSubscription(uint256 subId) internal returns (uint96 balance, uint96 nativeBalance) {\\n    address[] storage consumers = s_subscriptionConfigs[subId].consumers;\\n    balance = s_subscriptions[subId].balance;\\n    nativeBalance = s_subscriptions[subId].nativeBalance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    uint256 consumersLength = consumers.length;\\n    for (uint256 i = 0; i < consumersLength; ++i) {\\n      delete s_consumers[consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_subIds.remove(subId);\\n    if (balance != 0) {\\n      s_totalBalance -= balance;\\n    }\\n    if (nativeBalance != 0) {\\n      s_totalNativeBalance -= nativeBalance;\\n    }\\n    return (balance, nativeBalance);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint256 subId, address to) internal {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(subId);\\n\\n    // Only withdraw LINK if the token is active and there is a balance.\\n    if (address(LINK) != address(0) && balance != 0) {\\n      _requireSufficientBalance(LINK.transfer(to, uint256(balance)));\\n    }\\n\\n    // send native to the \\\"to\\\" address using call\\n    _mustSendNative(to, uint256(nativeBalance));\\n    emit SubscriptionCanceled(subId, to, balance, nativeBalance);\\n  }\\n\\n  modifier onlySubOwner(uint256 subId) {\\n    _onlySubOwner(subId);\\n    _;\\n  }\\n\\n  function _onlySubOwner(uint256 subId) internal view {\\n    address subOwner = s_subscriptionConfigs[subId].owner;\\n    _requireValidSubscription(subOwner);\\n    if (msg.sender != subOwner) {\\n      revert MustBeSubOwner(subOwner);\\n    }\\n  }\\n\\n  function _mustSendNative(address to, uint256 amount) internal {\\n    (bool success, ) = to.call{value: amount}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x3687ca9adb25fa3b7645a1f7840e73f8ca3d87dd5f19ebc93cea76db5866717e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {IVRFCoordinatorV2Plus} from \\\"./interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {IVRFMigratableConsumerV2Plus} from \\\"./interfaces/IVRFMigratableConsumerV2Plus.sol\\\";\\nimport {ConfirmedOwner} from \\\"../../shared/access/ConfirmedOwner.sol\\\";\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinatorV2Plus.\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBaseV2Plus, and can\\n * @dev initialize VRFConsumerBaseV2Plus's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumerV2Plus is VRFConsumerBaseV2Plus {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _subOwner)\\n * @dev       VRFConsumerBaseV2Plus(_vrfCoordinator, _subOwner) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create a subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords, extraArgs),\\n * @dev see (IVRFCoordinatorV2Plus for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinatorV2Plus has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBaseV2Plus.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2Plus is IVRFMigratableConsumerV2Plus, ConfirmedOwner {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  error OnlyOwnerOrCoordinator(address have, address owner, address coordinator);\\n  error ZeroAddress();\\n\\n  // s_vrfCoordinator should be used by consumers to make requests to vrfCoordinator\\n  // so that coordinator reference is updated after migration\\n  IVRFCoordinatorV2Plus public s_vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) ConfirmedOwner(msg.sender) {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2Plus expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] calldata randomWords) external {\\n    if (msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, address(s_vrfCoordinator));\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFMigratableConsumerV2Plus\\n   */\\n  function setCoordinator(address _vrfCoordinator) external override onlyOwnerOrCoordinator {\\n    if (_vrfCoordinator == address(0)) {\\n      revert ZeroAddress();\\n    }\\n    s_vrfCoordinator = IVRFCoordinatorV2Plus(_vrfCoordinator);\\n\\n    emit CoordinatorSet(_vrfCoordinator);\\n  }\\n\\n  modifier onlyOwnerOrCoordinator() {\\n    if (msg.sender != owner() && msg.sender != address(s_vrfCoordinator)) {\\n      revert OnlyOwnerOrCoordinator(msg.sender, owner(), address(s_vrfCoordinator));\\n    }\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0c92838396c5abe72754ebeae526a0434dd53fdaf63e6b98111aebd6114cfcc2\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {VRFV2PlusClient} from \\\"../libraries/VRFV2PlusClient.sol\\\";\\nimport {IVRFSubscriptionV2Plus} from \\\"./IVRFSubscriptionV2Plus.sol\\\";\\n\\n// Interface that enables consumers of VRFCoordinatorV2Plus to be future-proof for upgrades\\n// This interface is supported by subsequent versions of VRFCoordinatorV2Plus\\ninterface IVRFCoordinatorV2Plus is IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Request a set of random words.\\n   * @param req - a struct containing following fields for randomness request:\\n   * keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * requestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * extraArgs - abi-encoded extra args\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(VRFV2PlusClient.RandomWordsRequest calldata req) external returns (uint256 requestId);\\n}\\n\",\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFMigratableConsumerV2Plus interface defines the\\n/// @notice method required to be implemented by all V2Plus consumers.\\n/// @dev This interface is designed to be used in VRFConsumerBaseV2Plus.\\ninterface IVRFMigratableConsumerV2Plus {\\n  event CoordinatorSet(address vrfCoordinator);\\n\\n  /// @notice Sets the VRF Coordinator address\\n  /// @notice This method should only be callable by the coordinator or contract owner\\n  function setCoordinator(address vrfCoordinator) external;\\n}\\n\",\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The IVRFSubscriptionV2Plus interface defines the subscription\\n/// @notice related methods implemented by the V2Plus coordinator.\\ninterface IVRFSubscriptionV2Plus {\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint256 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint256 subId, address to) external;\\n\\n  /**\\n   * @notice Accept subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint256 subId) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint256 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription with LINK, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   * @dev Note to fund the subscription with Native, use fundSubscriptionWithNative. Be sure\\n   * @dev  to send Native with the call, for example:\\n   * @dev COORDINATOR.fundSubscriptionWithNative{value: amount}(subId);\\n   */\\n  function createSubscription() external returns (uint256 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return nativeBalance - native balance of the subscription in wei.\\n   * @return reqCount - Requests count of subscription.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint256 subId\\n  )\\n    external\\n    view\\n    returns (uint96 balance, uint96 nativeBalance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint256 subId) external view returns (bool);\\n\\n  /**\\n   * @notice Paginate through all active VRF subscriptions.\\n   * @param startIndex index of the subscription to start from\\n   * @param maxCount maximum number of subscriptions to return, 0 to return all\\n   * @dev the order of IDs in the list is **not guaranteed**, therefore, if making successive calls, one\\n   * @dev should consider keeping the blockheight constant to ensure a holistic picture of the contract state\\n   */\\n  function getActiveSubscriptionIds(uint256 startIndex, uint256 maxCount) external view returns (uint256[] memory);\\n\\n  /**\\n   * @notice Fund a subscription with native.\\n   * @param subId - ID of the subscription\\n   * @notice This method expects msg.value to be greater than or equal to 0.\\n   */\\n  function fundSubscriptionWithNative(uint256 subId) external payable;\\n}\\n\",\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n// End consumer library.\\nlibrary VRFV2PlusClient {\\n  // extraArgs will evolve to support new features\\n  bytes4 public constant EXTRA_ARGS_V1_TAG = bytes4(keccak256(\\\"VRF ExtraArgsV1\\\"));\\n  struct ExtraArgsV1 {\\n    bool nativePayment;\\n  }\\n\\n  struct RandomWordsRequest {\\n    bytes32 keyHash;\\n    uint256 subId;\\n    uint16 requestConfirmations;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n\\n  function _argsToBytes(ExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2_5.\\npragma solidity ^0.8.19;\\n\\n// solhint-disable-next-line no-unused-import\\nimport {IVRFCoordinatorV2Plus, IVRFSubscriptionV2Plus} from \\\"../dev/interfaces/IVRFCoordinatorV2Plus.sol\\\";\\nimport {VRFV2PlusClient} from \\\"../dev/libraries/VRFV2PlusClient.sol\\\";\\nimport {SubscriptionAPI} from \\\"../dev/SubscriptionAPI.sol\\\";\\nimport {VRFConsumerBaseV2Plus} from \\\"../dev/VRFConsumerBaseV2Plus.sol\\\";\\n\\ncontract VRFCoordinatorV2_5Mock is SubscriptionAPI, IVRFCoordinatorV2Plus {\\n  uint96 public immutable i_base_fee;\\n  uint96 public immutable i_gas_price;\\n  int256 public immutable i_wei_per_unit_link;\\n\\n  error InvalidRequest();\\n  error InvalidRandomWords();\\n  error InvalidExtraArgsTag();\\n  error NotImplemented();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint256 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    bytes extraArgs,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(\\n    uint256 indexed requestId,\\n    uint256 outputSeed,\\n    uint256 indexed subId,\\n    uint96 payment,\\n    bool nativePayment,\\n    bool success,\\n    bool onlyPremium\\n  );\\n  event ConfigSet();\\n\\n  uint64 internal s_currentSubId;\\n  uint256 internal s_nextRequestId = 1;\\n  uint256 internal s_nextPreSeed = 100;\\n\\n  struct Request {\\n    uint256 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    bytes extraArgs;\\n  }\\n  mapping(uint256 => Request) internal s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPrice, int256 _weiPerUnitLink) SubscriptionAPI() {\\n    i_base_fee = _baseFee;\\n    i_gas_price = _gasPrice;\\n    i_wei_per_unit_link = _weiPerUnitLink;\\n    setConfig();\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 mock coordinator\\n   */\\n  function setConfig() public onlyOwner {\\n    s_config = Config({\\n      minimumRequestConfirmations: 0,\\n      maxGasLimit: 0,\\n      stalenessSeconds: 0,\\n      gasAfterPaymentCalculation: 0,\\n      reentrancyLock: false,\\n      fulfillmentFlatFeeNativePPM: 0,\\n      fulfillmentFlatFeeLinkDiscountPPM: 0,\\n      nativePremiumPercentage: 0,\\n      linkPremiumPercentage: 0\\n    });\\n    emit ConfigSet();\\n  }\\n\\n  function consumerIsAdded(uint256 _subId, address _consumer) public view returns (bool) {\\n    return s_consumers[_consumer][_subId].active;\\n  }\\n\\n  modifier onlyValidConsumer(uint256 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external nonReentrant {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert InvalidRequest();\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2Plus v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    s_config.reentrancyLock = true;\\n    // solhint-disable-next-line avoid-low-level-calls, no-unused-vars\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n    s_config.reentrancyLock = false;\\n\\n    bool nativePayment = uint8(req.extraArgs[req.extraArgs.length - 1]) == 1;\\n\\n    uint256 rawPayment = i_base_fee + ((startGas - gasleft()) * i_gas_price);\\n    if (!nativePayment) {\\n      rawPayment = (1e18 * rawPayment) / uint256(i_wei_per_unit_link);\\n    }\\n    uint96 payment = uint96(rawPayment);\\n\\n    _chargePayment(payment, nativePayment, req.subId);\\n\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, req.subId, payment, nativePayment, success, false);\\n  }\\n\\n  function _chargePayment(uint96 payment, bool nativePayment, uint256 subId) internal {\\n    Subscription storage subcription = s_subscriptions[subId];\\n    if (nativePayment) {\\n      uint96 prevBal = subcription.nativeBalance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.nativeBalance = prevBal - payment;\\n      s_withdrawableNative += payment;\\n    } else {\\n      uint96 prevBal = subcription.balance;\\n      if (prevBal < payment) {\\n        revert InsufficientBalance();\\n      }\\n      subcription.balance = prevBal - payment;\\n      s_withdrawableTokens += payment;\\n    }\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint256 _subId, uint256 _amount) public {\\n    if (s_subscriptionConfigs[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint256 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += uint96(_amount);\\n    s_totalBalance += uint96(_amount);\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  /// @dev Convert the extra args bytes into a struct\\n  /// @param extraArgs The extra args bytes\\n  /// @return The extra args struct\\n  function _fromBytes(bytes calldata extraArgs) internal pure returns (VRFV2PlusClient.ExtraArgsV1 memory) {\\n    if (extraArgs.length == 0) {\\n      return VRFV2PlusClient.ExtraArgsV1({nativePayment: false});\\n    }\\n    if (bytes4(extraArgs) != VRFV2PlusClient.EXTRA_ARGS_V1_TAG) revert InvalidExtraArgsTag();\\n    return abi.decode(extraArgs[4:], (VRFV2PlusClient.ExtraArgsV1));\\n  }\\n\\n  function requestRandomWords(\\n    VRFV2PlusClient.RandomWordsRequest calldata _req\\n  ) external override nonReentrant onlyValidConsumer(_req.subId, msg.sender) returns (uint256) {\\n    uint256 subId = _req.subId;\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    bytes memory extraArgsBytes = VRFV2PlusClient._argsToBytes(_fromBytes(_req.extraArgs));\\n    s_requests[requestId] = Request({\\n      subId: _req.subId,\\n      callbackGasLimit: _req.callbackGasLimit,\\n      numWords: _req.numWords,\\n      extraArgs: _req.extraArgs\\n    });\\n\\n    emit RandomWordsRequested(\\n      _req.keyHash,\\n      requestId,\\n      preSeed,\\n      _req.subId,\\n      _req.requestConfirmations,\\n      _req.callbackGasLimit,\\n      _req.numWords,\\n      extraArgsBytes,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function removeConsumer(\\n    uint256 _subId,\\n    address _consumer\\n  ) external override onlySubOwner(_subId) onlyValidConsumer(_subId, _consumer) nonReentrant {\\n    if (!s_consumers[_consumer][_subId].active) {\\n      revert InvalidConsumer(_subId, _consumer);\\n    }\\n    address[] memory consumers = s_subscriptionConfigs[_subId].consumers;\\n    uint256 lastConsumerIndex = consumers.length - 1;\\n    for (uint256 i = 0; i < consumers.length; ++i) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[lastConsumerIndex];\\n        s_subscriptionConfigs[_subId].consumers[i] = last;\\n        s_subscriptionConfigs[_subId].consumers.pop();\\n        break;\\n      }\\n    }\\n    s_consumers[_consumer][_subId].active = false;\\n    emit SubscriptionConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc IVRFSubscriptionV2Plus\\n   */\\n  function cancelSubscription(uint256 _subId, address _to) external override onlySubOwner(_subId) nonReentrant {\\n    (uint96 balance, uint96 nativeBalance) = _deleteSubscription(_subId);\\n\\n    (bool success, ) = _to.call{value: uint256(nativeBalance)}(\\\"\\\");\\n    if (!success) {\\n      revert FailedToSendNative();\\n    }\\n    emit SubscriptionCanceled(_subId, _to, balance, nativeBalance);\\n  }\\n\\n  function pendingRequestExists(uint256 /*subId*/) public pure override returns (bool) {\\n    revert NotImplemented();\\n  }\\n}\\n\",\"keccak256\":\"0x5d27319ad572630b7078be005a9dee4418ac60b7d2fe9cbe40b510830cb4d1cf\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n// mock interface,\\u76ee\\u524d\\u7684 subscribtionId \\u662f unit256\\uff0c\\u9700\\u8981\\u5347\\u7ea7\\u5230\\u6700\\u65b0\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/mocks/VRFCoordinatorV2_5Mock.sol\\\";\\n// \\u771f\\u6b63\\u7684 VRF \\u670d\\u52a1\\n// import \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\\\";\\nimport {VRFV2PlusClient} from \\\"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\\\";\\n\\nerror Raffle__NotEnoughETHEntered(); // \\u81ea\\u5b9a\\u4e49\\u9519\\u8bef\\nerror Raffle__TransferFailed(); // \\u6253\\u94b1\\u5931\\u8d25\\nerror Raffle__NOTOpen(); // \\u6d3b\\u52a8\\u672a\\u5f00\\u542f\\nerror Raffle__UpkeepNotNeeded(\\n    uint256 currentBalance,\\n    uint256 numPlayers,\\n    uint256 raffleState\\n);\\n\\ncontract Raffle is VRFConsumerBaseV2Plus, AutomationCompatibleInterface {\\n    // Type Declations\\n    enum RaffleState {\\n        OPEN, // 0\\n        CALCULATING // 1\\n    }\\n\\n    // State variables\\n    // \\u9996\\u5148\\u9700\\u8981\\u6709\\u5165\\u573a\\u8d39\\n    uint256 private immutable i_entranceFee;\\n    // \\u5b9a\\u4e49\\u73a9\\u5bb6\\u6570\\u7ec4\\n    address payable[] private s_players;\\n    // \\u8c03\\u7528\\u8bf7\\u6c42\\u968f\\u673a\\u6570\\u7684\\u65b9\\u6cd5\\n    VRFCoordinatorV2_5Mock private immutable i_vrfCoordinator;\\n    // \\u968f\\u673a\\u6570\\u8bf7\\u6c42\\u7684\\u786e\\u8ba4\\u6b21\\u6570\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    // \\u968f\\u673a\\u6570\\u8bf7\\u6c42\\u7684 gas \\u9650\\u5236\\n    uint32 private immutable i_callbackGasLimit;\\n    // \\u968f\\u673a\\u6570\\u8bf7\\u6c42\\u7684 gasLane\\uff0c\\u4e0d\\u8d85\\u8fc7\\u67d0\\u4e2a\\u4e0a\\u9650\\u503c\\n    bytes32 private immutable i_gasLane;\\n    // \\u968f\\u673a\\u6570\\u8bf7\\u6c42\\u7684 \\u8ba2\\u9605 id\\n    uint256 private immutable i_subscriptionId;\\n    uint16 private constant NUM_WORDS = 1;\\n\\n    // lottery \\u53d8\\u91cf\\n    address private s_recentWinner; // \\u5f53\\u524d\\u83b7\\u80dc\\u8005\\n    RaffleState private s_raffleState; // \\u6d3b\\u52a8\\u72b6\\u6001\\n    uint256 private s_lastTimeStamp;\\n    uint256 private immutable i_interval;\\n\\n    // \\u4e8b\\u4ef6\\uff0c\\u5f53\\u6709\\u4eba\\u52a0\\u5165\\u6d3b\\u52a8\\u7684\\u65f6\\u5019\\uff0c\\u4f1a\\u89e6\\u53d1\\u8fd9\\u4e2a\\u4e8b\\u4ef6\\n    event RaffleEnter(address indexed player);\\n    event RequestedRaffleWinner(uint256 indexed requestId);\\n    event WinnerPicked(address indexed player);\\n\\n    // \\u5b9a\\u4e49\\u4e00\\u4e2a\\u53d8\\u91cf\\uff0c\\u7528\\u6765\\u8bb0\\u5f55\\u968f\\u673a\\u6570\\n\\n    // \\u5165\\u573a\\u8d39\\u4ece\\u6784\\u9020\\u51fd\\u6570\\u91cc\\u9762\\u4f20\\u8fdb\\u6765\\uff0c\\u5c31\\u56fa\\u5b9a\\u4e0d\\u53d8\\u4e86\\u6240\\u4ee5\\u7528immutable\\n    constructor(\\n        address vrfCoordinatorV2_5, // \\u5408\\u7ea6\\u9700\\u8981 mock\\n        uint256 entranceFee,\\n        bytes32 keyHash,\\n        uint256 subId,\\n        uint32 callbackGasLimit,\\n        uint256 interval\\n    ) VRFConsumerBaseV2Plus(vrfCoordinatorV2_5) {\\n        i_entranceFee = entranceFee;\\n        i_vrfCoordinator = VRFCoordinatorV2_5Mock(vrfCoordinatorV2_5);\\n        i_gasLane = keyHash;\\n        i_subscriptionId = subId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_raffleState = RaffleState.OPEN;\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval; // \\u95f4\\u9694\\u65f6\\u95f4\\n    }\\n\\n    function enterRaffle() public payable {\\n        // \\u4e0d\\u4f7f\\u7528 require \\u6bd4\\u8f83\\u82b1\\u8d39\\u71c3\\u6c14\\u8d39\\n        // require(msg.value >= i_entranceFee, \\\"Not enough ETH!\\\");\\n        // \\u5148\\u8981\\u770b\\u4e00\\u770b\\u5165\\u573a\\u8d39\\u591f\\u4e0d\\u591f\\n        if (msg.value < i_entranceFee) {\\n            revert Raffle__NotEnoughETHEntered();\\n        }\\n        //  \\u5982\\u679c\\u6d3b\\u52a8\\u6ca1\\u5f00\\u59cb\\u4e5f\\u9700\\u8981\\u56de\\u9000\\n        if (s_raffleState != RaffleState.OPEN) {\\n            revert Raffle__NOTOpen();\\n        }\\n\\n        s_players.push(payable(msg.sender));\\n        emit RaffleEnter(msg.sender);\\n    }\\n\\n    /**\\n     * This is the function that the Chainlink Automation node\\n     * calls to check if the upkeep is needed.\\n     * The following should be true for this to return true:\\n     * 1. The time interval has passed between raffle runs\\n     * 2. The lottery should have at leat one player and have some TTH\\n     * 3. Our subscription is funded with LINK\\n     * 4. The lottery should be in an open state\\n     */\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    )\\n        public\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory /*performData*/)\\n    {\\n        bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;\\n        bool hasPlayers = s_players.length > 0;\\n        bool hasBalance = address(this).balance > 0;\\n        bool isOpen = s_raffleState == RaffleState.OPEN;\\n        upkeepNeeded = (timePassed && hasPlayers && hasBalance && isOpen);\\n        return (upkeepNeeded, \\\"0x0\\\");\\n    }\\n\\n    // \\u8bf7\\u6c42 Chainlink \\u83b7\\u53d6\\u968f\\u673a\\u6570\\n    function performUpkeep(bytes calldata /*performData*/) external override {\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        if (!upkeepNeeded) {\\n            revert Raffle__UpkeepNotNeeded(\\n                address(this).balance,\\n                s_players.length,\\n                uint256(s_raffleState)\\n            );\\n        }\\n\\n        s_raffleState = RaffleState.CALCULATING;\\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\\n            VRFV2PlusClient.RandomWordsRequest({\\n                keyHash: i_gasLane,\\n                subId: i_subscriptionId,\\n                requestConfirmations: REQUEST_CONFIRMATIONS,\\n                callbackGasLimit: i_callbackGasLimit,\\n                numWords: NUM_WORDS,\\n                extraArgs: VRFV2PlusClient._argsToBytes(\\n                    VRFV2PlusClient.ExtraArgsV1({nativePayment: false})\\n                )\\n            })\\n        );\\n        emit RequestedRaffleWinner(requestId);\\n    }\\n\\n    //\\u586b\\u5145\\u968f\\u673a\\u6570\\n    function fulfillRandomWords(\\n        uint256 /*_requestId*/,\\n        uint256[] calldata _randomWords\\n    ) internal override {\\n        uint256 indexOfWinner = _randomWords[0] % s_players.length;\\n        address payable recentWinner = s_players[indexOfWinner];\\n        s_raffleState = RaffleState.OPEN;\\n        s_lastTimeStamp = block.timestamp; // reset  \\u4e8b\\u4ef6\\u4fdd\\u8bc1\\u4e0b\\u4e00\\u4e2a\\u73a9\\u5bb6\\u53ef\\u4ee5\\u53c2\\u8d5b\\n        // \\u6bd4\\u8d5b\\u5b8c\\u6210\\u540e\\u6e05\\u7a7a\\u73a9\\u5bb6\\n        s_players = new address payable[](0);\\n        s_recentWinner = recentWinner;\\n        // \\u6253\\u94b1\\u7ed9\\u83b7\\u80dc\\u8005\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n        if (!success) {\\n            revert Raffle__TransferFailed();\\n        }\\n        emit WinnerPicked(recentWinner);\\n    }\\n\\n    // \\u7531\\u4e8e\\u662f private \\u65b9\\u6cd5\\uff0c\\u6240\\u4ee5\\u9700\\u8981\\u4e00\\u4e2a get \\u51fd\\u6570\\n    function getEntranceFee() public view returns (uint256) {\\n        return i_entranceFee;\\n    }\\n\\n    function getPlayer(uint256 index) public view returns (address) {\\n        return s_players[index];\\n    }\\n\\n    function getRecentWinner() public view returns (address) {\\n        return s_recentWinner;\\n    }\\n\\n    function getRaffleState() public view returns (RaffleState) {\\n        return s_raffleState;\\n    }\\n\\n    function getNumWords() public pure returns (uint16) {\\n        return NUM_WORDS;\\n    }\\n\\n    function getNumberOfPlayers() public view returns (uint256) {\\n        return s_players.length;\\n    }\\n\\n    function getLatestTimeStamp() public view returns (uint256) {\\n        return s_lastTimeStamp;\\n    }\\n\\n    function getRequestConfirmations() public pure returns (uint256) {\\n        return REQUEST_CONFIRMATIONS;\\n    }\\n\\n    function getInterval() public view returns (uint256) {\\n        return i_interval;\\n    }\\n}\\n\\n// \\u7b2c\\u4e00\\u90e8\\uff1a\\u52a0\\u5165\\u6d3b\\u52a8\\uff08\\u652f\\u4ed8\\u4e00\\u4e9b\\u94b1\\uff09\\n// \\u7b2c\\u4e8c\\u90e8\\uff1a\\u627e\\u51fa\\u4e00\\u4e2a\\u968f\\u673a\\u7684\\u83b7\\u80dc\\u8005\\n// \\u6bcf X \\u5206\\u949f\\u6311\\u9009\\u51fa\\u4e00\\u4e2a\\u4eba\\u8d62\\u5f97\\u5956\\u52b1\\n// \\u968f\\u673a\\u6570\\u3001\\u81ea\\u52a8\\u89e6\\u53d1\\uff0c\\u8fd9\\u4e9b\\u90fd\\u9700\\u8981\\u5916\\u90e8\\u6570\\u636e\\uff0c\\u9700\\u8981Chainlink Oracle\\n\",\"keccak256\":\"0x235e72fcc3f6c311314cf4f2a8a84eec4448cca7c04f267484a6c73dd3cc55c6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":48,"contract":"contracts/Raffle.sol:Raffle","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":50,"contract":"contracts/Raffle.sol:Raffle","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2331,"contract":"contracts/Raffle.sol:Raffle","label":"s_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(IVRFCoordinatorV2Plus)2480"},{"astId":3486,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"3","type":"t_array(t_address_payable)dyn_storage"},{"astId":3503,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":0,"slot":"4","type":"t_address"},{"astId":3506,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":20,"slot":"4","type":"t_enum(RaffleState)3481"},{"astId":3508,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"5","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_contract(IVRFCoordinatorV2Plus)2480":{"encoding":"inplace","label":"contract IVRFCoordinatorV2Plus","numberOfBytes":"20"},"t_enum(RaffleState)3481":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"checkUpkeep(bytes)":{"notice":"This is the function that the Chainlink Automation node calls to check if the upkeep is needed. The following should be true for this to return true: 1. The time interval has passed between raffle runs 2. The lottery should have at leat one player and have some TTH 3. Our subscription is funded with LINK 4. The lottery should be in an open state"},"owner()":{"notice":"Get the current owner"},"setCoordinator(address)":{"notice":"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"version":1}}}}}}